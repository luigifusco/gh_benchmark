//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-33281558
// Cuda compilation tools, release 12.3, V12.3.52
// Based on NVVM 7.0.1
//

.version 8.3
.target sm_90
.address_size 64

.extern .func  (.param .b32 func_retval0) vprintf
(
	.param .b64 vprintf_param_0,
	.param .b64 vprintf_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 4 .b8 _ZZN4cuda3std3__48__detail21__stronger_order_cudaEiiE7__xform[16] = {3, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, 3};
// _ZZ21gpu_clock_test_kernelPlS_E2gt has been demoted
// _ZZ21gpu_clock_test_kernelPlS_E2lt has been demoted
// _ZZ27device_read_kernel_detailedPdmmPlE12times_vector has been demoted
// _ZZ23device_read_kernel_syncPdmmPlS0_E6clocks has been demoted
// _ZZ24device_write_kernel_syncPdmmPlS0_E6clocks has been demoted
// _ZZ23device_copy_kernel_syncPdS_mmPlS0_E6clocks has been demoted
.global .align 1 .b8 __unnamed_1[85] = {118, 111, 105, 100, 32, 100, 101, 118, 105, 99, 101, 95, 114, 101, 97, 100, 95, 107, 101, 114, 110, 101, 108, 95, 98, 108, 111, 99, 107, 40, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 32, 42, 44, 32, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 44, 32, 117, 110, 115, 105, 103, 110, 101, 100, 32, 108, 111, 110, 103, 44, 32, 108, 111, 110, 103, 32, 42, 41};
// _ZZ24device_read_kernel_blockPmmmPlE6clocks has been demoted
// _ZZ25device_write_kernel_blockPdmmPlE6clocks has been demoted
// _ZZ24device_copy_kernel_blockPdS_mmPlE6clocks has been demoted
// _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage has been demoted
// _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage has been demoted
// _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage has been demoted
// _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage has been demoted
// _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage has been demoted
// _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage has been demoted
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78574cuda3std3__48in_placeE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78574cuda3std6ranges3__45__cpo4swapE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust6system6detail10sequential3seqE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust6system3cpp3parE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust8cuda_cub3parE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust8cuda_cub10par_nosyncE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_1E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_2E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_3E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_4E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_5E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_6E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_7E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_8E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders2_9E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust12placeholders3_10E[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust3seqE[1];
.global .align 1 .b8 _ZN37_INTERNAL_acda41d5_7_main_cu_a5ec78576thrust6deviceE[1];
.global .align 1 .b8 $str$2[5] = {37, 108, 117, 32};
.global .align 1 .b8 $str$3[16] = {98, 108, 111, 99, 107, 73, 100, 120, 46, 120, 32, 61, 61, 32, 48};
.global .align 1 .b8 $str$4[20] = {114, 101, 97, 100, 95, 119, 114, 105, 116, 101, 95, 99, 111, 112, 121, 46, 104, 112, 112};
.global .align 1 .b8 $str$5[4] = {37, 117, 32};

.func _Z9dumb_copyPVhS0_m(
	.param .b64 _Z9dumb_copyPVhS0_m_param_0,
	.param .b64 _Z9dumb_copyPVhS0_m_param_1,
	.param .b64 _Z9dumb_copyPVhS0_m_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd5, [_Z9dumb_copyPVhS0_m_param_0];
	ld.param.u64 	%rd6, [_Z9dumb_copyPVhS0_m_param_1];
	ld.param.u64 	%rd7, [_Z9dumb_copyPVhS0_m_param_2];
	setp.eq.s64 	%p1, %rd7, 0;
	@%p1 bra 	$L__BB0_3;

	cvta.to.global.u64 	%rd1, %rd5;
	cvta.to.global.u64 	%rd2, %rd6;
	mov.u64 	%rd11, 0;

$L__BB0_2:
	add.s64 	%rd9, %rd1, %rd11;
	ld.volatile.global.u8 	%rs1, [%rd9];
	add.s64 	%rd10, %rd2, %rd11;
	st.volatile.global.u8 	[%rd10], %rs1;
	add.s64 	%rd11, %rd11, 64;
	setp.lt.u64 	%p2, %rd11, %rd7;
	@%p2 bra 	$L__BB0_2;

$L__BB0_3:
	ret;

}
	// .globl	_Z24clock_granularity_kernelPl
.visible .entry _Z24clock_granularity_kernelPl(
	.param .u64 _Z24clock_granularity_kernelPl_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b64 	%rd<58>;


	ld.param.u64 	%rd7, [_Z24clock_granularity_kernelPl_param_0];
	cvta.to.global.u64 	%rd56, %rd7;
	mov.u64 	%rd57, 10000;

$L__BB1_1:
	// begin inline asm
	mov.u64 	%rd8, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd9, %clock64;
	// end inline asm
	sub.s64 	%rd40, %rd9, %rd8;
	st.global.u64 	[%rd56], %rd40;
	// begin inline asm
	mov.u64 	%rd10, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd11, %clock64;
	// end inline asm
	sub.s64 	%rd41, %rd11, %rd10;
	st.global.u64 	[%rd56+8], %rd41;
	// begin inline asm
	mov.u64 	%rd12, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd13, %clock64;
	// end inline asm
	sub.s64 	%rd42, %rd13, %rd12;
	st.global.u64 	[%rd56+16], %rd42;
	// begin inline asm
	mov.u64 	%rd14, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd15, %clock64;
	// end inline asm
	sub.s64 	%rd43, %rd15, %rd14;
	st.global.u64 	[%rd56+24], %rd43;
	// begin inline asm
	mov.u64 	%rd16, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd17, %clock64;
	// end inline asm
	sub.s64 	%rd44, %rd17, %rd16;
	st.global.u64 	[%rd56+32], %rd44;
	// begin inline asm
	mov.u64 	%rd18, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd19, %clock64;
	// end inline asm
	sub.s64 	%rd45, %rd19, %rd18;
	st.global.u64 	[%rd56+40], %rd45;
	// begin inline asm
	mov.u64 	%rd20, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd21, %clock64;
	// end inline asm
	sub.s64 	%rd46, %rd21, %rd20;
	st.global.u64 	[%rd56+48], %rd46;
	// begin inline asm
	mov.u64 	%rd22, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd23, %clock64;
	// end inline asm
	sub.s64 	%rd47, %rd23, %rd22;
	st.global.u64 	[%rd56+56], %rd47;
	// begin inline asm
	mov.u64 	%rd24, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd25, %clock64;
	// end inline asm
	sub.s64 	%rd48, %rd25, %rd24;
	st.global.u64 	[%rd56+64], %rd48;
	// begin inline asm
	mov.u64 	%rd26, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd27, %clock64;
	// end inline asm
	sub.s64 	%rd49, %rd27, %rd26;
	st.global.u64 	[%rd56+72], %rd49;
	// begin inline asm
	mov.u64 	%rd28, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd29, %clock64;
	// end inline asm
	sub.s64 	%rd50, %rd29, %rd28;
	st.global.u64 	[%rd56+80], %rd50;
	// begin inline asm
	mov.u64 	%rd30, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd31, %clock64;
	// end inline asm
	sub.s64 	%rd51, %rd31, %rd30;
	st.global.u64 	[%rd56+88], %rd51;
	// begin inline asm
	mov.u64 	%rd32, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd33, %clock64;
	// end inline asm
	sub.s64 	%rd52, %rd33, %rd32;
	st.global.u64 	[%rd56+96], %rd52;
	// begin inline asm
	mov.u64 	%rd34, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd35, %clock64;
	// end inline asm
	sub.s64 	%rd53, %rd35, %rd34;
	st.global.u64 	[%rd56+104], %rd53;
	// begin inline asm
	mov.u64 	%rd36, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd37, %clock64;
	// end inline asm
	sub.s64 	%rd54, %rd37, %rd36;
	st.global.u64 	[%rd56+112], %rd54;
	// begin inline asm
	mov.u64 	%rd38, %clock64;
	// end inline asm
	// begin inline asm
	mov.u64 	%rd39, %clock64;
	// end inline asm
	sub.s64 	%rd55, %rd39, %rd38;
	st.global.u64 	[%rd56+120], %rd55;
	add.s64 	%rd56, %rd56, 128;
	add.s64 	%rd57, %rd57, -16;
	setp.ne.s64 	%p1, %rd57, 0;
	@%p1 bra 	$L__BB1_1;

	ret;

}
	// .globl	_Z31global_clock_granularity_kernelPl
.visible .entry _Z31global_clock_granularity_kernelPl(
	.param .u64 _Z31global_clock_granularity_kernelPl_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b64 	%rd<58>;


	ld.param.u64 	%rd7, [_Z31global_clock_granularity_kernelPl_param_0];
	cvta.to.global.u64 	%rd56, %rd7;
	mov.u64 	%rd57, 10000;

$L__BB2_1:
	// begin inline asm
	mov.u64 %rd8, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd9, %globaltimer;
	// end inline asm
	sub.s64 	%rd40, %rd9, %rd8;
	st.global.u64 	[%rd56], %rd40;
	// begin inline asm
	mov.u64 %rd10, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd11, %globaltimer;
	// end inline asm
	sub.s64 	%rd41, %rd11, %rd10;
	st.global.u64 	[%rd56+8], %rd41;
	// begin inline asm
	mov.u64 %rd12, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd13, %globaltimer;
	// end inline asm
	sub.s64 	%rd42, %rd13, %rd12;
	st.global.u64 	[%rd56+16], %rd42;
	// begin inline asm
	mov.u64 %rd14, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd15, %globaltimer;
	// end inline asm
	sub.s64 	%rd43, %rd15, %rd14;
	st.global.u64 	[%rd56+24], %rd43;
	// begin inline asm
	mov.u64 %rd16, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd17, %globaltimer;
	// end inline asm
	sub.s64 	%rd44, %rd17, %rd16;
	st.global.u64 	[%rd56+32], %rd44;
	// begin inline asm
	mov.u64 %rd18, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd19, %globaltimer;
	// end inline asm
	sub.s64 	%rd45, %rd19, %rd18;
	st.global.u64 	[%rd56+40], %rd45;
	// begin inline asm
	mov.u64 %rd20, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd21, %globaltimer;
	// end inline asm
	sub.s64 	%rd46, %rd21, %rd20;
	st.global.u64 	[%rd56+48], %rd46;
	// begin inline asm
	mov.u64 %rd22, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd23, %globaltimer;
	// end inline asm
	sub.s64 	%rd47, %rd23, %rd22;
	st.global.u64 	[%rd56+56], %rd47;
	// begin inline asm
	mov.u64 %rd24, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd25, %globaltimer;
	// end inline asm
	sub.s64 	%rd48, %rd25, %rd24;
	st.global.u64 	[%rd56+64], %rd48;
	// begin inline asm
	mov.u64 %rd26, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd27, %globaltimer;
	// end inline asm
	sub.s64 	%rd49, %rd27, %rd26;
	st.global.u64 	[%rd56+72], %rd49;
	// begin inline asm
	mov.u64 %rd28, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd29, %globaltimer;
	// end inline asm
	sub.s64 	%rd50, %rd29, %rd28;
	st.global.u64 	[%rd56+80], %rd50;
	// begin inline asm
	mov.u64 %rd30, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd31, %globaltimer;
	// end inline asm
	sub.s64 	%rd51, %rd31, %rd30;
	st.global.u64 	[%rd56+88], %rd51;
	// begin inline asm
	mov.u64 %rd32, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd33, %globaltimer;
	// end inline asm
	sub.s64 	%rd52, %rd33, %rd32;
	st.global.u64 	[%rd56+96], %rd52;
	// begin inline asm
	mov.u64 %rd34, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd35, %globaltimer;
	// end inline asm
	sub.s64 	%rd53, %rd35, %rd34;
	st.global.u64 	[%rd56+104], %rd53;
	// begin inline asm
	mov.u64 %rd36, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd37, %globaltimer;
	// end inline asm
	sub.s64 	%rd54, %rd37, %rd36;
	st.global.u64 	[%rd56+112], %rd54;
	// begin inline asm
	mov.u64 %rd38, %globaltimer;
	// end inline asm
	// begin inline asm
	mov.u64 %rd39, %globaltimer;
	// end inline asm
	sub.s64 	%rd55, %rd39, %rd38;
	st.global.u64 	[%rd56+120], %rd55;
	add.s64 	%rd56, %rd56, 128;
	add.s64 	%rd57, %rd57, -16;
	setp.ne.s64 	%p1, %rd57, 0;
	@%p1 bra 	$L__BB2_1;

	ret;

}
	// .globl	_Z26basic_loop_overhead_kernelmPlPm
.visible .entry _Z26basic_loop_overhead_kernelmPlPm(
	.param .u64 _Z26basic_loop_overhead_kernelmPlPm_param_0,
	.param .u64 _Z26basic_loop_overhead_kernelmPlPm_param_1,
	.param .u64 _Z26basic_loop_overhead_kernelmPlPm_param_2
)
{
	.reg .pred 	%p<6>;
	.reg .b64 	%rd<45>;


	ld.param.u64 	%rd18, [_Z26basic_loop_overhead_kernelmPlPm_param_0];
	ld.param.u64 	%rd19, [_Z26basic_loop_overhead_kernelmPlPm_param_1];
	ld.param.u64 	%rd20, [_Z26basic_loop_overhead_kernelmPlPm_param_2];
	// begin inline asm
	mov.u64 	%rd21, %clock64;
	// end inline asm
	setp.eq.s64 	%p1, %rd18, 0;
	@%p1 bra 	$L__BB3_7;

	add.s64 	%rd25, %rd18, -1;
	and.b64  	%rd2, %rd18, 3;
	setp.lt.u64 	%p2, %rd25, 3;
	mov.u64 	%rd40, 0;
	@%p2 bra 	$L__BB3_4;

	sub.s64 	%rd3, %rd2, %rd18;
	mov.u64 	%rd40, 0;

$L__BB3_3:
	add.s64 	%rd28, %rd40, %rd44;
	add.s64 	%rd29, %rd40, %rd28;
	add.s64 	%rd30, %rd40, %rd29;
	add.s64 	%rd31, %rd40, %rd30;
	add.s64 	%rd44, %rd31, 6;
	add.s64 	%rd40, %rd40, 4;
	add.s64 	%rd32, %rd3, %rd40;
	setp.ne.s64 	%p3, %rd32, 0;
	@%p3 bra 	$L__BB3_3;

$L__BB3_4:
	setp.eq.s64 	%p4, %rd2, 0;
	@%p4 bra 	$L__BB3_7;

	neg.s64 	%rd41, %rd2;

$L__BB3_6:
	.pragma "nounroll";
	add.s64 	%rd44, %rd40, %rd44;
	add.s64 	%rd40, %rd40, 1;
	add.s64 	%rd41, %rd41, 1;
	setp.ne.s64 	%p5, %rd41, 0;
	@%p5 bra 	$L__BB3_6;

$L__BB3_7:
	// begin inline asm
	mov.u64 	%rd33, %clock64;
	// end inline asm
	sub.s64 	%rd34, %rd33, %rd21;
	cvta.to.global.u64 	%rd35, %rd19;
	cvta.to.global.u64 	%rd36, %rd20;
	st.global.u64 	[%rd35], %rd34;
	st.global.u64 	[%rd36], %rd44;
	ret;

}
	// .globl	_Z9gpu_sleepidPl
.visible .entry _Z9gpu_sleepidPl(
	.param .u32 _Z9gpu_sleepidPl_param_0,
	.param .f64 _Z9gpu_sleepidPl_param_1,
	.param .u64 _Z9gpu_sleepidPl_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<2>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<6>;


	ld.param.u32 	%r1, [_Z9gpu_sleepidPl_param_0];
	ld.param.f64 	%fd1, [_Z9gpu_sleepidPl_param_1];
	ld.param.u64 	%rd4, [_Z9gpu_sleepidPl_param_2];
	cvta.to.global.u64 	%rd1, %rd4;
	// begin inline asm
	mov.u64 	%rd3, %clock64;
	// end inline asm
	cvt.rn.f64.s64 	%fd2, %rd3;
	cvt.rn.f64.s32 	%fd3, %r1;
	fma.rn.f64 	%fd4, %fd3, %fd1, %fd2;
	cvt.rzi.s64.f64 	%rd2, %fd4;

$L__BB4_1:
	// begin inline asm
	mov.u64 	%rd5, %clock64;
	// end inline asm
	setp.lt.s64 	%p1, %rd5, %rd2;
	@%p1 bra 	$L__BB4_1;

	st.global.u64 	[%rd1], %rd2;
	ret;

}
	// .globl	_Z21gpu_clock_test_kernelPlS_
.visible .entry _Z21gpu_clock_test_kernelPlS_(
	.param .u64 _Z21gpu_clock_test_kernelPlS__param_0,
	.param .u64 _Z21gpu_clock_test_kernelPlS__param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<87>;
	// demoted variable
	.shared .align 8 .b8 _ZZ21gpu_clock_test_kernelPlS_E2gt[8192];
	// demoted variable
	.shared .align 8 .b8 _ZZ21gpu_clock_test_kernelPlS_E2lt[8192];

	ld.param.u64 	%rd12, [_Z21gpu_clock_test_kernelPlS__param_0];
	ld.param.u64 	%rd14, [_Z21gpu_clock_test_kernelPlS__param_1];
	cvta.to.global.u64 	%rd1, %rd14;
	mov.u64 	%rd83, 1024;
	mov.u32 	%r16, _ZZ21gpu_clock_test_kernelPlS_E2gt;
	mov.u32 	%r15, _ZZ21gpu_clock_test_kernelPlS_E2lt;

$L__BB5_1:
	// begin inline asm
	mov.u64 %rd15, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16], %rd15;
	// begin inline asm
	mov.u64 	%rd16, %clock64;
	// end inline asm
	st.shared.u64 	[%r15], %rd16;
	// begin inline asm
	mov.u64 %rd17, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+8], %rd17;
	// begin inline asm
	mov.u64 	%rd18, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+8], %rd18;
	// begin inline asm
	mov.u64 %rd19, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+16], %rd19;
	// begin inline asm
	mov.u64 	%rd20, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+16], %rd20;
	// begin inline asm
	mov.u64 %rd21, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+24], %rd21;
	// begin inline asm
	mov.u64 	%rd22, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+24], %rd22;
	// begin inline asm
	mov.u64 %rd23, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+32], %rd23;
	// begin inline asm
	mov.u64 	%rd24, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+32], %rd24;
	// begin inline asm
	mov.u64 %rd25, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+40], %rd25;
	// begin inline asm
	mov.u64 	%rd26, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+40], %rd26;
	// begin inline asm
	mov.u64 %rd27, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+48], %rd27;
	// begin inline asm
	mov.u64 	%rd28, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+48], %rd28;
	// begin inline asm
	mov.u64 %rd29, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+56], %rd29;
	// begin inline asm
	mov.u64 	%rd30, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+56], %rd30;
	// begin inline asm
	mov.u64 %rd31, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+64], %rd31;
	// begin inline asm
	mov.u64 	%rd32, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+64], %rd32;
	// begin inline asm
	mov.u64 %rd33, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+72], %rd33;
	// begin inline asm
	mov.u64 	%rd34, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+72], %rd34;
	// begin inline asm
	mov.u64 %rd35, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+80], %rd35;
	// begin inline asm
	mov.u64 	%rd36, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+80], %rd36;
	// begin inline asm
	mov.u64 %rd37, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+88], %rd37;
	// begin inline asm
	mov.u64 	%rd38, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+88], %rd38;
	// begin inline asm
	mov.u64 %rd39, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+96], %rd39;
	// begin inline asm
	mov.u64 	%rd40, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+96], %rd40;
	// begin inline asm
	mov.u64 %rd41, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+104], %rd41;
	// begin inline asm
	mov.u64 	%rd42, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+104], %rd42;
	// begin inline asm
	mov.u64 %rd43, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+112], %rd43;
	// begin inline asm
	mov.u64 	%rd44, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+112], %rd44;
	// begin inline asm
	mov.u64 %rd45, %globaltimer;
	// end inline asm
	st.shared.u64 	[%r16+120], %rd45;
	// begin inline asm
	mov.u64 	%rd46, %clock64;
	// end inline asm
	st.shared.u64 	[%r15+120], %rd46;
	add.s32 	%r16, %r16, 128;
	add.s32 	%r15, %r15, 128;
	add.s64 	%rd83, %rd83, -16;
	setp.ne.s64 	%p1, %rd83, 0;
	@%p1 bra 	$L__BB5_1;

	cvta.to.global.u64 	%rd48, %rd12;
	mov.u32 	%r13, %ctaid.x;
	shl.b32 	%r14, %r13, 10;
	mul.wide.u32 	%rd49, %r14, 8;
	or.b64  	%rd50, %rd49, 64;
	add.s64 	%rd85, %rd1, %rd50;
	add.s64 	%rd84, %rd48, %rd50;
	mov.u64 	%rd86, 1024;
	mov.u32 	%r18, _ZZ21gpu_clock_test_kernelPlS_E2lt;
	mov.u32 	%r17, _ZZ21gpu_clock_test_kernelPlS_E2gt;

$L__BB5_3:
	ld.shared.u64 	%rd51, [%r17];
	st.global.u64 	[%rd84+-64], %rd51;
	ld.shared.u64 	%rd52, [%r18];
	st.global.u64 	[%rd85+-64], %rd52;
	ld.shared.u64 	%rd53, [%r17+8];
	st.global.u64 	[%rd84+-56], %rd53;
	ld.shared.u64 	%rd54, [%r18+8];
	st.global.u64 	[%rd85+-56], %rd54;
	ld.shared.u64 	%rd55, [%r17+16];
	st.global.u64 	[%rd84+-48], %rd55;
	ld.shared.u64 	%rd56, [%r18+16];
	st.global.u64 	[%rd85+-48], %rd56;
	ld.shared.u64 	%rd57, [%r17+24];
	st.global.u64 	[%rd84+-40], %rd57;
	ld.shared.u64 	%rd58, [%r18+24];
	st.global.u64 	[%rd85+-40], %rd58;
	ld.shared.u64 	%rd59, [%r17+32];
	st.global.u64 	[%rd84+-32], %rd59;
	ld.shared.u64 	%rd60, [%r18+32];
	st.global.u64 	[%rd85+-32], %rd60;
	ld.shared.u64 	%rd61, [%r17+40];
	st.global.u64 	[%rd84+-24], %rd61;
	ld.shared.u64 	%rd62, [%r18+40];
	st.global.u64 	[%rd85+-24], %rd62;
	ld.shared.u64 	%rd63, [%r17+48];
	st.global.u64 	[%rd84+-16], %rd63;
	ld.shared.u64 	%rd64, [%r18+48];
	st.global.u64 	[%rd85+-16], %rd64;
	ld.shared.u64 	%rd65, [%r17+56];
	st.global.u64 	[%rd84+-8], %rd65;
	ld.shared.u64 	%rd66, [%r18+56];
	st.global.u64 	[%rd85+-8], %rd66;
	ld.shared.u64 	%rd67, [%r17+64];
	st.global.u64 	[%rd84], %rd67;
	ld.shared.u64 	%rd68, [%r18+64];
	st.global.u64 	[%rd85], %rd68;
	ld.shared.u64 	%rd69, [%r17+72];
	st.global.u64 	[%rd84+8], %rd69;
	ld.shared.u64 	%rd70, [%r18+72];
	st.global.u64 	[%rd85+8], %rd70;
	ld.shared.u64 	%rd71, [%r17+80];
	st.global.u64 	[%rd84+16], %rd71;
	ld.shared.u64 	%rd72, [%r18+80];
	st.global.u64 	[%rd85+16], %rd72;
	ld.shared.u64 	%rd73, [%r17+88];
	st.global.u64 	[%rd84+24], %rd73;
	ld.shared.u64 	%rd74, [%r18+88];
	st.global.u64 	[%rd85+24], %rd74;
	ld.shared.u64 	%rd75, [%r17+96];
	st.global.u64 	[%rd84+32], %rd75;
	ld.shared.u64 	%rd76, [%r18+96];
	st.global.u64 	[%rd85+32], %rd76;
	ld.shared.u64 	%rd77, [%r17+104];
	st.global.u64 	[%rd84+40], %rd77;
	ld.shared.u64 	%rd78, [%r18+104];
	st.global.u64 	[%rd85+40], %rd78;
	ld.shared.u64 	%rd79, [%r17+112];
	st.global.u64 	[%rd84+48], %rd79;
	ld.shared.u64 	%rd80, [%r18+112];
	st.global.u64 	[%rd85+48], %rd80;
	ld.shared.u64 	%rd81, [%r17+120];
	st.global.u64 	[%rd84+56], %rd81;
	ld.shared.u64 	%rd82, [%r18+120];
	st.global.u64 	[%rd85+56], %rd82;
	add.s64 	%rd85, %rd85, 128;
	add.s64 	%rd84, %rd84, 128;
	add.s32 	%r18, %r18, 128;
	add.s32 	%r17, %r17, 128;
	add.s64 	%rd86, %rd86, -16;
	setp.ne.s64 	%p2, %rd86, 0;
	@%p2 bra 	$L__BB5_3;

	ret;

}
	// .globl	_Z31device_write_preparation_kernelPhm
.visible .entry _Z31device_write_preparation_kernelPhm(
	.param .u64 _Z31device_write_preparation_kernelPhm_param_0,
	.param .u64 _Z31device_write_preparation_kernelPhm_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b16 	%rs<2>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd6, [_Z31device_write_preparation_kernelPhm_param_0];
	ld.param.u64 	%rd7, [_Z31device_write_preparation_kernelPhm_param_1];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	mul.wide.u32 	%rd9, %r4, 32;
	setp.ge.u64 	%p1, %rd9, %rd7;
	@%p1 bra 	$L__BB6_3;

	mov.u32 	%r5, %nctaid.x;
	mul.lo.s32 	%r6, %r5, %r1;
	shl.b32 	%r7, %r6, 5;
	cvt.u64.u32 	%rd2, %r7;
	cvta.to.global.u64 	%rd3, %rd6;

$L__BB6_2:
	add.s64 	%rd8, %rd3, %rd9;
	mov.u16 	%rs1, 0;
	st.global.u8 	[%rd8], %rs1;
	add.s64 	%rd9, %rd9, %rd2;
	setp.lt.u64 	%p2, %rd9, %rd7;
	@%p2 bra 	$L__BB6_2;

$L__BB6_3:
	ret;

}
	// .globl	_Z30device_read_preparation_kernelPhm
.visible .entry _Z30device_read_preparation_kernelPhm(
	.param .u64 _Z30device_read_preparation_kernelPhm_param_0,
	.param .u64 _Z30device_read_preparation_kernelPhm_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<8>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd5, [_Z30device_read_preparation_kernelPhm_param_1];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mad.lo.s32 	%r4, %r3, %r1, %r2;
	mul.wide.u32 	%rd6, %r4, 32;
	setp.ge.u64 	%p1, %rd6, %rd5;
	@%p1 bra 	$L__BB7_3;

	mov.u32 	%r5, %nctaid.x;
	mul.lo.s32 	%r6, %r5, %r1;
	shl.b32 	%r7, %r6, 5;
	cvt.u64.u32 	%rd2, %r7;

$L__BB7_2:
	add.s64 	%rd6, %rd6, %rd2;
	setp.lt.u64 	%p2, %rd6, %rd5;
	@%p2 bra 	$L__BB7_2;

$L__BB7_3:
	ret;

}
	// .globl	_Z27device_modified_init_kernelPhm
.visible .entry _Z27device_modified_init_kernelPhm(
	.param .u64 _Z27device_modified_init_kernelPhm_param_0,
	.param .u64 _Z27device_modified_init_kernelPhm_param_1
)
{
	.reg .b64 	%rd<3>;


	ld.param.u64 	%rd1, [_Z27device_modified_init_kernelPhm_param_0];
	ld.param.u64 	%rd2, [_Z27device_modified_init_kernelPhm_param_1];
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd1;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd2;
	call.uni 
	_Z9dumb_copyPVhS0_m, 
	(
	param0, 
	param1, 
	param2
	);
	} // callseq 0
	ret;

}
	// .globl	_Z24loopy_write_kernel_clockPhmPlS0_
.visible .entry _Z24loopy_write_kernel_clockPhmPlS0_(
	.param .u64 _Z24loopy_write_kernel_clockPhmPlS0__param_0,
	.param .u64 _Z24loopy_write_kernel_clockPhmPlS0__param_1,
	.param .u64 _Z24loopy_write_kernel_clockPhmPlS0__param_2,
	.param .u64 _Z24loopy_write_kernel_clockPhmPlS0__param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd36, [_Z24loopy_write_kernel_clockPhmPlS0__param_0];
	ld.param.u64 	%rd19, [_Z24loopy_write_kernel_clockPhmPlS0__param_1];
	ld.param.u64 	%rd16, [_Z24loopy_write_kernel_clockPhmPlS0__param_2];
	ld.param.u64 	%rd17, [_Z24loopy_write_kernel_clockPhmPlS0__param_3];
	// begin inline asm
	mov.u64 	%rd18, %clock64;
	// end inline asm
	shr.u64 	%rd2, %rd19, 6;
	setp.eq.s64 	%p1, %rd2, 0;
	@%p1 bra 	$L__BB9_7;

	add.s64 	%rd20, %rd2, -1;
	and.b64  	%rd3, %rd2, 7;
	setp.lt.u64 	%p2, %rd20, 7;
	@%p2 bra 	$L__BB9_4;

	sub.s64 	%rd34, %rd3, %rd2;

$L__BB9_3:
	.pragma "nounroll";
	ld.u64 	%rd21, [%rd36];
	mov.u16 	%rs1, 0;
	st.volatile.u8 	[%rd36], %rs1;
	ld.u64 	%rd22, [%rd21];
	st.volatile.u8 	[%rd21], %rs1;
	ld.u64 	%rd23, [%rd22];
	st.volatile.u8 	[%rd22], %rs1;
	ld.u64 	%rd24, [%rd23];
	st.volatile.u8 	[%rd23], %rs1;
	ld.u64 	%rd25, [%rd24];
	st.volatile.u8 	[%rd24], %rs1;
	ld.u64 	%rd26, [%rd25];
	st.volatile.u8 	[%rd25], %rs1;
	ld.u64 	%rd27, [%rd26];
	st.volatile.u8 	[%rd26], %rs1;
	ld.u64 	%rd36, [%rd27];
	st.volatile.u8 	[%rd27], %rs1;
	add.s64 	%rd34, %rd34, 8;
	setp.ne.s64 	%p3, %rd34, 0;
	@%p3 bra 	$L__BB9_3;

$L__BB9_4:
	setp.eq.s64 	%p4, %rd3, 0;
	@%p4 bra 	$L__BB9_7;

	neg.s64 	%rd37, %rd3;

$L__BB9_6:
	.pragma "nounroll";
	ld.u64 	%rd13, [%rd36];
	mov.u16 	%rs2, 0;
	st.volatile.u8 	[%rd36], %rs2;
	add.s64 	%rd37, %rd37, 1;
	setp.ne.s64 	%p5, %rd37, 0;
	mov.u64 	%rd36, %rd13;
	@%p5 bra 	$L__BB9_6;

$L__BB9_7:
	membar.sys;
	// begin inline asm
	mov.u64 	%rd28, %clock64;
	// end inline asm
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	cvta.to.global.u64 	%rd29, %rd16;
	mul.wide.s32 	%rd30, %r4, 8;
	add.s64 	%rd31, %rd29, %rd30;
	cvta.to.global.u64 	%rd32, %rd17;
	add.s64 	%rd33, %rd32, %rd30;
	st.global.u64 	[%rd31], %rd18;
	st.global.u64 	[%rd33], %rd28;
	ret;

}
	// .globl	_Z20pointer_chase_kernelPy
.visible .entry _Z20pointer_chase_kernelPy(
	.param .u64 _Z20pointer_chase_kernelPy_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd5, [_Z20pointer_chase_kernelPy_param_0];
	setp.eq.s64 	%p1, %rd5, 0;
	@%p1 bra 	$L__BB10_2;

$L__BB10_1:
	cvta.to.global.u64 	%rd4, %rd5;
	ld.global.nc.u64 	%rd5, [%rd4];
	setp.ne.s64 	%p2, %rd5, 0;
	@%p2 bra 	$L__BB10_1;

$L__BB10_2:
	ret;

}
	// .globl	_Z31atomic_cas_pointer_chase_kernelPy
.visible .entry _Z31atomic_cas_pointer_chase_kernelPy(
	.param .u64 _Z31atomic_cas_pointer_chase_kernelPy_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd5, [_Z31atomic_cas_pointer_chase_kernelPy_param_0];
	setp.eq.s64 	%p1, %rd5, 0;
	@%p1 bra 	$L__BB11_2;

$L__BB11_1:
	mov.u64 	%rd4, 0;
	atom.cas.b64 	%rd5, [%rd5], %rd4, %rd4;
	setp.ne.s64 	%p2, %rd5, 0;
	@%p2 bra 	$L__BB11_1;

$L__BB11_2:
	ret;

}
	// .globl	_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m
.visible .entry _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m(
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_0,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_1,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_2,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_3,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_4,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_5,
	.param .u64 _Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_6
)
{
	.reg .pred 	%p<7>;
	.reg .b16 	%rs<3>;
	.reg .b32 	%r<11>;
	.reg .b64 	%rd<34>;


	ld.param.u64 	%rd12, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_0];
	ld.param.u64 	%rd13, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_1];
	ld.param.u64 	%rd14, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_2];
	ld.param.u64 	%rd15, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_3];
	ld.param.u64 	%rd16, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_4];
	ld.param.u64 	%rd17, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_5];
	ld.param.u64 	%rd18, [_Z30ping_pong_receive_first_kernelPvS_S_PbS_S0_m_param_6];
	mov.u32 	%r1, %ntid.y;
	mov.u32 	%r4, %tid.z;
	mov.u32 	%r5, %tid.y;
	mad.lo.s32 	%r6, %r1, %r4, %r5;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r3, %r6, %r2, %r7;
	setp.ne.s32 	%p1, %r3, 0;
	@%p1 bra 	$L__BB12_2;

	cvta.to.global.u64 	%rd20, %rd17;
	ld.global.u8 	%rs1, [%rd20];
	setp.eq.s16 	%p2, %rs1, 0;
	@%p2 bra 	$L__BB12_9;

$L__BB12_2:
	bar.sync 	0;
	shr.u64 	%rd1, %rd18, 3;
	cvt.u64.u32 	%rd33, %r3;
	setp.le.u64 	%p3, %rd1, %rd33;
	@%p3 bra 	$L__BB12_6;

	mul.lo.s32 	%r8, %r2, %r1;
	mov.u32 	%r9, %ntid.z;
	mul.lo.s32 	%r10, %r8, %r9;
	cvt.u64.u32 	%rd3, %r10;
	cvta.to.global.u64 	%rd4, %rd13;
	cvta.to.global.u64 	%rd5, %rd16;
	cvta.to.global.u64 	%rd6, %rd14;
	cvta.to.global.u64 	%rd7, %rd12;
	mov.u64 	%rd32, %rd33;

$L__BB12_4:
	shl.b64 	%rd22, %rd32, 3;
	add.s64 	%rd23, %rd5, %rd22;
	ld.global.u64 	%rd24, [%rd23];
	add.s64 	%rd25, %rd4, %rd22;
	st.global.u64 	[%rd25], %rd24;
	add.s64 	%rd32, %rd32, %rd3;
	setp.lt.u64 	%p4, %rd32, %rd1;
	@%p4 bra 	$L__BB12_4;

$L__BB12_5:
	shl.b64 	%rd27, %rd33, 3;
	add.s64 	%rd28, %rd7, %rd27;
	ld.global.u64 	%rd29, [%rd28];
	add.s64 	%rd30, %rd6, %rd27;
	st.global.u64 	[%rd30], %rd29;
	add.s64 	%rd33, %rd33, %rd3;
	setp.lt.u64 	%p5, %rd33, %rd1;
	@%p5 bra 	$L__BB12_5;

$L__BB12_6:
	membar.sys;
	bar.sync 	0;
	@%p1 bra 	$L__BB12_8;

	cvta.to.global.u64 	%rd31, %rd15;
	mov.u16 	%rs2, 1;
	st.global.u8 	[%rd31], %rs2;

$L__BB12_8:
	ret;

$L__BB12_9:
	bra.uni 	$L__BB12_9;

}
	// .globl	_Z18device_pong_kernelPN4cuda3std3__46atomicIiEE
.visible .entry _Z18device_pong_kernelPN4cuda3std3__46atomicIiEE(
	.param .u64 _Z18device_pong_kernelPN4cuda3std3__46atomicIiEE_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd1, [_Z18device_pong_kernelPN4cuda3std3__46atomicIiEE_param_0];
	// begin inline asm
	fence.sc.sys;
	// end inline asm
	mov.u32 	%r8, 0;
	// begin inline asm
	st.relaxed.sys.b32 [%rd1], %r8;
	// end inline asm

$L__BB13_1:
	mov.u32 	%r6, 1;
	mov.u32 	%r7, 0;
	// begin inline asm
	atom.cas.relaxed.sys.b32 %r5,[%rd1],%r6,%r7;
	// end inline asm
	setp.ne.s32 	%p1, %r5, 1;
	@%p1 bra 	$L__BB13_1;

	add.s32 	%r8, %r8, 1;
	setp.lt.u32 	%p2, %r8, 10000;
	@%p2 bra 	$L__BB13_1;

	ret;

}
	// .globl	_Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl
.visible .entry _Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl(
	.param .u64 _Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl_param_0,
	.param .u64 _Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd3, [_Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl_param_0];
	ld.param.u64 	%rd4, [_Z18device_ping_kernelPN4cuda3std3__46atomicIiEEPl_param_1];
	cvta.to.global.u64 	%rd1, %rd4;

$L__BB14_1:
	// begin inline asm
	fence.sc.sys;
	// end inline asm
	// begin inline asm
	ld.acquire.sys.b32 %r3,[%rd3];
	// end inline asm
	setp.eq.s32 	%p1, %r3, 1;
	@%p1 bra 	$L__BB14_1;

	// begin inline asm
	mov.u64 	%rd6, %clock64;
	// end inline asm
	mov.u32 	%r8, 0;

$L__BB14_3:
	mov.u32 	%r6, 0;
	mov.u32 	%r7, 1;
	// begin inline asm
	atom.cas.relaxed.sys.b32 %r5,[%rd3],%r6,%r7;
	// end inline asm
	setp.ne.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB14_3;

	add.s32 	%r8, %r8, 1;
	setp.lt.u32 	%p3, %r8, 10000;
	@%p3 bra 	$L__BB14_3;

	// begin inline asm
	mov.u64 	%rd8, %clock64;
	// end inline asm
	sub.s64 	%rd9, %rd8, %rd6;
	st.global.u64 	[%rd1], %rd9;
	ret;

}
	// .globl	_Z24device_write_kernel_flatPd
.visible .entry _Z24device_write_kernel_flatPd(
	.param .u64 _Z24device_write_kernel_flatPd_param_0
)
{
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<6>;


	ld.param.u64 	%rd1, [_Z24device_write_kernel_flatPd_param_0];
	cvta.to.global.u64 	%rd2, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	mul.wide.u32 	%rd3, %r4, 8;
	add.s64 	%rd4, %rd2, %rd3;
	mov.u64 	%rd5, 0;
	st.global.u64 	[%rd4], %rd5;
	ret;

}
	// .globl	_Z23device_copy_kernel_flatPdS_
.visible .entry _Z23device_copy_kernel_flatPdS_(
	.param .u64 _Z23device_copy_kernel_flatPdS__param_0,
	.param .u64 _Z23device_copy_kernel_flatPdS__param_1
)
{
	.reg .b32 	%r<5>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<8>;


	ld.param.u64 	%rd1, [_Z23device_copy_kernel_flatPdS__param_0];
	ld.param.u64 	%rd2, [_Z23device_copy_kernel_flatPdS__param_1];
	cvta.to.global.u64 	%rd3, %rd2;
	cvta.to.global.u64 	%rd4, %rd1;
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %ctaid.x;
	mad.lo.s32 	%r4, %r2, %r3, %r1;
	mul.wide.u32 	%rd5, %r4, 8;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f64 	%fd1, [%rd6];
	add.s64 	%rd7, %rd3, %rd5;
	st.global.f64 	[%rd7], %fd1;
	ret;

}
	// .globl	_Z27device_read_kernel_detailedPdmmPl
.visible .entry _Z27device_read_kernel_detailedPdmmPl(
	.param .u64 _Z27device_read_kernel_detailedPdmmPl_param_0,
	.param .u64 _Z27device_read_kernel_detailedPdmmPl_param_1,
	.param .u64 _Z27device_read_kernel_detailedPdmmPl_param_2,
	.param .u64 _Z27device_read_kernel_detailedPdmmPl_param_3
)
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<24>;
	.reg .b64 	%rd<75>;
	// demoted variable
	.shared .align 8 .b8 _ZZ27device_read_kernel_detailedPdmmPlE12times_vector[8192];

	ld.param.u64 	%rd36, [_Z27device_read_kernel_detailedPdmmPl_param_1];
	ld.param.u64 	%rd37, [_Z27device_read_kernel_detailedPdmmPl_param_2];
	ld.param.u64 	%rd38, [_Z27device_read_kernel_detailedPdmmPl_param_3];
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mul.lo.s32 	%r3, %r2, %r1;
	mov.u32 	%r4, %tid.x;
	add.s32 	%r9, %r3, %r4;
	cvt.u64.u32 	%rd1, %r9;
	setp.eq.s64 	%p1, %rd37, 0;
	@%p1 bra 	$L__BB17_30;

	cvt.u32.u64 	%r10, %rd1;
	neg.s32 	%r5, %r3;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r12, %r2, %r11;
	cvt.u64.u32 	%rd2, %r12;
	shl.b32 	%r13, %r10, 3;
	mov.u32 	%r14, _ZZ27device_read_kernel_detailedPdmmPlE12times_vector;
	add.s32 	%r6, %r14, %r13;
	cvt.u64.u32 	%rd3, %r11;
	cvt.u64.u32 	%rd4, %r1;
	cvt.u64.u32 	%rd40, %r2;
	add.s64 	%rd5, %rd40, -2;
	add.s32 	%r15, %r2, -1;
	and.b32  	%r7, %r15, 3;
	cvt.u64.u32 	%rd41, %r7;
	not.b64 	%rd42, %rd41;
	add.s64 	%rd6, %rd42, %rd40;
	cvta.to.global.u64 	%rd7, %rd38;
	mov.u64 	%rd65, 0;

$L__BB17_2:
	setp.ne.s32 	%p2, %r10, 0;
	@%p2 bra 	$L__BB17_4;

	mov.u64 	%rd43, 0;
	st.shared.u64 	[_ZZ27device_read_kernel_detailedPdmmPlE12times_vector], %rd43;

$L__BB17_4:
	setp.eq.s32 	%p3, %r4, %r5;
	bar.sync 	0;
	@%p3 bra 	$L__BB17_7;
	bra.uni 	$L__BB17_5;

$L__BB17_7:
	// begin inline asm
	mov.u64 	%rd44, %clock64;
	// end inline asm
	add.s64 	%rd66, %rd44, 1979999;
	st.shared.u64 	[_ZZ27device_read_kernel_detailedPdmmPlE12times_vector], %rd66;
	bra.uni 	$L__BB17_8;

$L__BB17_5:
	ld.shared.u64 	%rd66, [_ZZ27device_read_kernel_detailedPdmmPlE12times_vector];
	setp.ne.s64 	%p4, %rd66, 0;
	@%p4 bra 	$L__BB17_8;
	bra.uni 	$L__BB17_6;

$L__BB17_8:
	// begin inline asm
	mov.u64 	%rd45, %clock64;
	// end inline asm
	setp.lt.u64 	%p5, %rd45, %rd66;
	@%p5 bra 	$L__BB17_8;

	setp.ge.u64 	%p6, %rd1, %rd36;
	@%p6 bra 	$L__BB17_19;

	mov.u64 	%rd67, %rd1;

$L__BB17_11:
	.pragma "nounroll";
	add.s64 	%rd13, %rd67, %rd2;
	setp.ge.u64 	%p7, %rd13, %rd36;
	@%p7 bra 	$L__BB17_19;

	add.s64 	%rd14, %rd13, %rd2;
	setp.ge.u64 	%p8, %rd14, %rd36;
	@%p8 bra 	$L__BB17_19;

	add.s64 	%rd15, %rd14, %rd2;
	setp.ge.u64 	%p9, %rd15, %rd36;
	@%p9 bra 	$L__BB17_19;

	add.s64 	%rd16, %rd15, %rd2;
	setp.ge.u64 	%p10, %rd16, %rd36;
	@%p10 bra 	$L__BB17_19;

	add.s64 	%rd17, %rd16, %rd2;
	setp.ge.u64 	%p11, %rd17, %rd36;
	@%p11 bra 	$L__BB17_19;

	add.s64 	%rd18, %rd17, %rd2;
	setp.ge.u64 	%p12, %rd18, %rd36;
	@%p12 bra 	$L__BB17_19;

	add.s64 	%rd19, %rd18, %rd2;
	setp.ge.u64 	%p13, %rd19, %rd36;
	@%p13 bra 	$L__BB17_19;

	add.s64 	%rd67, %rd19, %rd2;
	setp.lt.u64 	%p14, %rd67, %rd36;
	@%p14 bra 	$L__BB17_11;

$L__BB17_19:
	setp.ne.s32 	%p15, %r4, 0;
	// begin inline asm
	mov.u64 	%rd46, %clock64;
	// end inline asm
	sub.s64 	%rd47, %rd46, %rd66;
	st.shared.u64 	[%r6], %rd47;
	bar.sync 	0;
	@%p15 bra 	$L__BB17_29;

	setp.lt.u32 	%p16, %r2, 2;
	ld.shared.u64 	%rd74, [_ZZ27device_read_kernel_detailedPdmmPlE12times_vector];
	@%p16 bra 	$L__BB17_28;

	setp.lt.u64 	%p17, %rd5, 3;
	mov.u64 	%rd72, 1;
	@%p17 bra 	$L__BB17_24;

	mov.u64 	%rd72, 1;
	mov.u64 	%rd70, %rd6;

$L__BB17_23:
	cvt.u32.u64 	%r17, %rd72;
	shl.b32 	%r18, %r17, 3;
	add.s32 	%r20, %r14, %r18;
	ld.shared.u64 	%rd51, [%r20];
	max.s64 	%rd52, %rd74, %rd51;
	ld.shared.u64 	%rd53, [%r20+8];
	max.s64 	%rd54, %rd52, %rd53;
	ld.shared.u64 	%rd55, [%r20+16];
	max.s64 	%rd56, %rd54, %rd55;
	ld.shared.u64 	%rd57, [%r20+24];
	max.s64 	%rd74, %rd56, %rd57;
	add.s64 	%rd72, %rd72, 4;
	add.s64 	%rd70, %rd70, -4;
	setp.ne.s64 	%p18, %rd70, 0;
	@%p18 bra 	$L__BB17_23;

$L__BB17_24:
	setp.eq.s32 	%p19, %r7, 0;
	@%p19 bra 	$L__BB17_28;

	setp.eq.s32 	%p20, %r7, 1;
	cvt.u32.u64 	%r21, %rd72;
	shl.b32 	%r22, %r21, 3;
	add.s32 	%r8, %r14, %r22;
	ld.shared.u64 	%rd58, [%r8];
	max.s64 	%rd74, %rd74, %rd58;
	@%p20 bra 	$L__BB17_28;

	setp.eq.s32 	%p21, %r7, 2;
	ld.shared.u64 	%rd59, [%r8+8];
	max.s64 	%rd74, %rd74, %rd59;
	@%p21 bra 	$L__BB17_28;

	ld.shared.u64 	%rd60, [%r8+16];
	max.s64 	%rd74, %rd74, %rd60;

$L__BB17_28:
	mul.lo.s64 	%rd61, %rd65, %rd3;
	add.s64 	%rd62, %rd61, %rd4;
	shl.b64 	%rd63, %rd62, 3;
	add.s64 	%rd64, %rd7, %rd63;
	st.global.u64 	[%rd64], %rd74;

$L__BB17_29:
	add.s64 	%rd65, %rd65, 1;
	setp.lt.u64 	%p22, %rd65, %rd37;
	@%p22 bra 	$L__BB17_2;

$L__BB17_30:
	ret;

$L__BB17_6:
	bra.uni 	$L__BB17_6;

}
	// .globl	_Z18device_read_kernelPdm
.visible .entry _Z18device_read_kernelPdm(
	.param .u64 _Z18device_read_kernelPdm_param_0,
	.param .u64 _Z18device_read_kernelPdm_param_1
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd12, [_Z18device_read_kernelPdm_param_1];
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r4, %r1, %r3, %r2;
	cvt.u64.u32 	%rd13, %r4;
	setp.ge.u64 	%p1, %rd13, %rd12;
	@%p1 bra 	$L__BB18_10;

	mov.u32 	%r5, %nctaid.x;
	mul.lo.s32 	%r6, %r1, %r5;
	cvt.u64.u32 	%rd2, %r6;

$L__BB18_2:
	.pragma "nounroll";
	add.s64 	%rd4, %rd13, %rd2;
	setp.ge.u64 	%p2, %rd4, %rd12;
	@%p2 bra 	$L__BB18_10;

	add.s64 	%rd5, %rd4, %rd2;
	setp.ge.u64 	%p3, %rd5, %rd12;
	@%p3 bra 	$L__BB18_10;

	add.s64 	%rd6, %rd5, %rd2;
	setp.ge.u64 	%p4, %rd6, %rd12;
	@%p4 bra 	$L__BB18_10;

	add.s64 	%rd7, %rd6, %rd2;
	setp.ge.u64 	%p5, %rd7, %rd12;
	@%p5 bra 	$L__BB18_10;

	add.s64 	%rd8, %rd7, %rd2;
	setp.ge.u64 	%p6, %rd8, %rd12;
	@%p6 bra 	$L__BB18_10;

	add.s64 	%rd9, %rd8, %rd2;
	setp.ge.u64 	%p7, %rd9, %rd12;
	@%p7 bra 	$L__BB18_10;

	add.s64 	%rd10, %rd9, %rd2;
	setp.ge.u64 	%p8, %rd10, %rd12;
	@%p8 bra 	$L__BB18_10;

	add.s64 	%rd13, %rd10, %rd2;
	setp.lt.u64 	%p9, %rd13, %rd12;
	@%p9 bra 	$L__BB18_2;

$L__BB18_10:
	ret;

}
	// .globl	_Z19device_write_kernelPdm
.visible .entry _Z19device_write_kernelPdm(
	.param .u64 _Z19device_write_kernelPdm_param_0,
	.param .u64 _Z19device_write_kernelPdm_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd6, [_Z19device_write_kernelPdm_param_0];
	ld.param.u64 	%rd7, [_Z19device_write_kernelPdm_param_1];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.u64.u32 	%rd11, %r4;
	setp.ge.u64 	%p1, %rd11, %rd7;
	@%p1 bra 	$L__BB19_3;

	mov.u32 	%r5, %nctaid.x;
	mul.lo.s32 	%r6, %r1, %r5;
	cvt.u64.u32 	%rd2, %r6;
	cvta.to.global.u64 	%rd3, %rd6;

$L__BB19_2:
	shl.b64 	%rd8, %rd11, 3;
	add.s64 	%rd9, %rd3, %rd8;
	mov.u64 	%rd10, 0;
	st.global.u64 	[%rd9], %rd10;
	add.s64 	%rd11, %rd11, %rd2;
	setp.lt.u64 	%p2, %rd11, %rd7;
	@%p2 bra 	$L__BB19_2;

$L__BB19_3:
	ret;

}
	// .globl	_Z18device_copy_kernelPdS_m
.visible .entry _Z18device_copy_kernelPdS_m(
	.param .u64 _Z18device_copy_kernelPdS_m_param_0,
	.param .u64 _Z18device_copy_kernelPdS_m_param_1,
	.param .u64 _Z18device_copy_kernelPdS_m_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd7, [_Z18device_copy_kernelPdS_m_param_0];
	ld.param.u64 	%rd8, [_Z18device_copy_kernelPdS_m_param_1];
	ld.param.u64 	%rd9, [_Z18device_copy_kernelPdS_m_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r4, %r2, %r1, %r3;
	cvt.u64.u32 	%rd13, %r4;
	setp.ge.u64 	%p1, %rd13, %rd9;
	@%p1 bra 	$L__BB20_3;

	mov.u32 	%r5, %nctaid.x;
	mul.lo.s32 	%r6, %r1, %r5;
	cvt.u64.u32 	%rd2, %r6;
	cvta.to.global.u64 	%rd3, %rd7;
	cvta.to.global.u64 	%rd4, %rd8;

$L__BB20_2:
	shl.b64 	%rd10, %rd13, 3;
	add.s64 	%rd11, %rd3, %rd10;
	ld.global.f64 	%fd1, [%rd11];
	add.s64 	%rd12, %rd4, %rd10;
	st.global.f64 	[%rd12], %fd1;
	add.s64 	%rd13, %rd13, %rd2;
	setp.lt.u64 	%p2, %rd13, %rd9;
	@%p2 bra 	$L__BB20_2;

$L__BB20_3:
	ret;

}
	// .globl	_Z23device_read_kernel_syncPdmmPlS0_
.visible .entry _Z23device_read_kernel_syncPdmmPlS0_(
	.param .u64 _Z23device_read_kernel_syncPdmmPlS0__param_0,
	.param .u64 _Z23device_read_kernel_syncPdmmPlS0__param_1,
	.param .u64 _Z23device_read_kernel_syncPdmmPlS0__param_2,
	.param .u64 _Z23device_read_kernel_syncPdmmPlS0__param_3,
	.param .u64 _Z23device_read_kernel_syncPdmmPlS0__param_4
)
{
	.local .align 8 .b8 	__local_depot21[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<24>;
	.reg .b32 	%r<53>;
	.reg .b64 	%rd<97>;
	// demoted variable
	.shared .align 8 .b8 _ZZ23device_read_kernel_syncPdmmPlS0_E6clocks[8192];

	mov.u64 	%SPL, __local_depot21;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd35, [_Z23device_read_kernel_syncPdmmPlS0__param_0];
	ld.param.u64 	%rd36, [_Z23device_read_kernel_syncPdmmPlS0__param_1];
	ld.param.u64 	%rd37, [_Z23device_read_kernel_syncPdmmPlS0__param_2];
	ld.param.u64 	%rd38, [_Z23device_read_kernel_syncPdmmPlS0__param_3];
	ld.param.u64 	%rd40, [_Z23device_read_kernel_syncPdmmPlS0__param_4];
	cvta.to.global.u64 	%rd1, %rd40;
	mov.u32 	%r1, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r15, %r2, %r1, %r3;
	cvt.u64.u32 	%rd2, %r15;
	// begin inline asm
	mov.u32 %r13, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd41, %r13;
	// begin inline asm
	mov.u32 %r14, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd42, %r14;
	bfi.b64 	%rd3, %rd42, %rd41, 32, 32;
	setp.eq.s64 	%p1, %rd37, 0;
	@%p1 bra 	$L__BB21_33;

	add.s64 	%rd4, %rd3, 4;
	mov.u32 	%r16, %tid.y;
	add.s32 	%r4, %r3, %r16;
	mov.u32 	%r17, %tid.z;
	neg.s32 	%r5, %r17;
	mov.u32 	%r18, %nctaid.y;
	mov.u32 	%r19, %nctaid.x;
	mul.lo.s32 	%r20, %r19, %r18;
	mov.u32 	%r21, %nctaid.z;
	mul.lo.s32 	%r22, %r20, %r21;
	mov.u32 	%r23, %ctaid.y;
	add.s32 	%r24, %r1, %r23;
	mov.u32 	%r25, %ctaid.z;
	neg.s32 	%r26, %r25;
	setp.eq.s32 	%p2, %r24, %r26;
	mov.u32 	%r27, -2147483647;
	sub.s32 	%r28, %r27, %r22;
	selp.b32 	%r6, %r28, 1, %p2;
	shl.b32 	%r29, %r3, 3;
	mov.u32 	%r30, _ZZ23device_read_kernel_syncPdmmPlS0_E6clocks;
	add.s32 	%r7, %r30, %r29;
	mul.lo.s32 	%r31, %r2, %r19;
	cvt.u64.u32 	%rd5, %r31;
	cvt.u64.u32 	%rd6, %r19;
	cvt.u64.u32 	%rd7, %r1;
	cvt.u64.u32 	%rd45, %r2;
	add.s64 	%rd8, %rd45, -2;
	add.s32 	%r32, %r2, -1;
	and.b32  	%r8, %r32, 3;
	cvt.u64.u32 	%rd46, %r8;
	not.b64 	%rd47, %rd46;
	add.s64 	%rd9, %rd47, %rd45;
	cvta.to.global.u64 	%rd10, %rd38;
	mov.u64 	%rd84, 0;

$L__BB21_2:
	setp.ne.s64 	%p3, %rd3, 0;
	@%p3 bra 	$L__BB21_4;

	// begin inline asm
	trap;
	// end inline asm

$L__BB21_4:
	setp.ne.s32 	%p4, %r4, %r5;
	barrier.sync 	0;
	@%p4 bra 	$L__BB21_7;

	// begin inline asm
	atom.add.release.gpu.u32 %r33,[%rd4],%r6;
	// end inline asm

$L__BB21_6:
	// begin inline asm
	ld.acquire.gpu.u32 %r35,[%rd4];
	// end inline asm
	xor.b32  	%r36, %r35, %r33;
	setp.gt.s32 	%p5, %r36, -1;
	@%p5 bra 	$L__BB21_6;

$L__BB21_7:
	barrier.sync 	0;
	// begin inline asm
	mov.u64 %rd50, %globaltimer;
	// end inline asm
	add.s64 	%rd51, %rd50, 1000000;
	st.global.u64 	[%rd1], %rd51;
	@%p3 bra 	$L__BB21_9;

	// begin inline asm
	trap;
	// end inline asm

$L__BB21_9:
	barrier.sync 	0;
	@%p4 bra 	$L__BB21_12;

	// begin inline asm
	atom.add.release.gpu.u32 %r37,[%rd4],%r6;
	// end inline asm

$L__BB21_11:
	// begin inline asm
	ld.acquire.gpu.u32 %r39,[%rd4];
	// end inline asm
	xor.b32  	%r40, %r39, %r37;
	setp.gt.s32 	%p8, %r40, -1;
	@%p8 bra 	$L__BB21_11;

$L__BB21_12:
	barrier.sync 	0;
	bar.sync 	0;
	ld.global.u64 	%rd13, [%rd1];

$L__BB21_13:
	// begin inline asm
	mov.u64 %rd54, %globaltimer;
	// end inline asm
	setp.lt.s64 	%p9, %rd54, %rd13;
	@%p9 bra 	$L__BB21_13;

	setp.ge.u64 	%p10, %rd2, %rd36;
	@%p10 bra 	$L__BB21_17;

	mov.u64 	%rd86, %rd2;

$L__BB21_16:
	shl.b64 	%rd57, %rd86, 3;
	add.s64 	%rd56, %rd35, %rd57;
	// begin inline asm
	ld.ca.u64 %rd55, [%rd56];
	// end inline asm
	xor.b64  	%rd88, %rd55, %rd88;
	add.s64 	%rd86, %rd86, %rd5;
	setp.lt.u64 	%p11, %rd86, %rd36;
	@%p11 bra 	$L__BB21_16;

$L__BB21_17:
	// begin inline asm
	mov.u64 %rd58, %globaltimer;
	// end inline asm
	sub.s64 	%rd59, %rd58, %rd13;
	st.shared.u64 	[%r7], %rd59;
	@%p3 bra 	$L__BB21_19;

	// begin inline asm
	trap;
	// end inline asm

$L__BB21_19:
	barrier.sync 	0;
	@%p4 bra 	$L__BB21_22;

	// begin inline asm
	atom.add.release.gpu.u32 %r41,[%rd4],%r6;
	// end inline asm

$L__BB21_21:
	// begin inline asm
	ld.acquire.gpu.u32 %r43,[%rd4];
	// end inline asm
	xor.b32  	%r44, %r43, %r41;
	setp.gt.s32 	%p14, %r44, -1;
	@%p14 bra 	$L__BB21_21;

$L__BB21_22:
	setp.ne.s32 	%p15, %r3, 0;
	barrier.sync 	0;
	@%p15 bra 	$L__BB21_32;

	setp.lt.u32 	%p16, %r2, 2;
	ld.shared.u64 	%rd95, [_ZZ23device_read_kernel_syncPdmmPlS0_E6clocks];
	@%p16 bra 	$L__BB21_31;

	setp.lt.u64 	%p17, %rd8, 3;
	mov.u64 	%rd93, 1;
	@%p17 bra 	$L__BB21_27;

	mov.u64 	%rd93, 1;
	mov.u64 	%rd91, %rd9;

$L__BB21_26:
	cvt.u32.u64 	%r45, %rd93;
	shl.b32 	%r46, %r45, 3;
	add.s32 	%r48, %r30, %r46;
	ld.shared.u64 	%rd65, [%r48];
	max.s64 	%rd66, %rd95, %rd65;
	ld.shared.u64 	%rd67, [%r48+8];
	max.s64 	%rd68, %rd66, %rd67;
	ld.shared.u64 	%rd69, [%r48+16];
	max.s64 	%rd70, %rd68, %rd69;
	ld.shared.u64 	%rd71, [%r48+24];
	max.s64 	%rd95, %rd70, %rd71;
	add.s64 	%rd93, %rd93, 4;
	add.s64 	%rd91, %rd91, -4;
	setp.ne.s64 	%p18, %rd91, 0;
	@%p18 bra 	$L__BB21_26;

$L__BB21_27:
	setp.eq.s32 	%p19, %r8, 0;
	@%p19 bra 	$L__BB21_31;

	setp.eq.s32 	%p20, %r8, 1;
	cvt.u32.u64 	%r49, %rd93;
	shl.b32 	%r50, %r49, 3;
	add.s32 	%r12, %r30, %r50;
	ld.shared.u64 	%rd72, [%r12];
	max.s64 	%rd95, %rd95, %rd72;
	@%p20 bra 	$L__BB21_31;

	setp.eq.s32 	%p21, %r8, 2;
	ld.shared.u64 	%rd73, [%r12+8];
	max.s64 	%rd95, %rd95, %rd73;
	@%p21 bra 	$L__BB21_31;

	ld.shared.u64 	%rd74, [%r12+16];
	max.s64 	%rd95, %rd95, %rd74;

$L__BB21_31:
	mul.lo.s64 	%rd75, %rd84, %rd6;
	add.s64 	%rd76, %rd75, %rd7;
	shl.b64 	%rd77, %rd76, 3;
	add.s64 	%rd78, %rd10, %rd77;
	st.global.u64 	[%rd78], %rd95;

$L__BB21_32:
	add.s64 	%rd84, %rd84, 1;
	setp.lt.u64 	%p22, %rd84, %rd37;
	@%p22 bra 	$L__BB21_2;

$L__BB21_33:
	ld.global.u64 	%rd79, [%rd1];
	setp.ne.s64 	%p23, %rd79, 0;
	@%p23 bra 	$L__BB21_35;

	add.u64 	%rd80, %SP, 0;
	add.u64 	%rd81, %SPL, 0;
	st.local.u64 	[%rd81], %rd88;
	mov.u64 	%rd82, $str$2;
	cvta.global.u64 	%rd83, %rd82;
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd83;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd80;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r52, [retval0+0];
	} // callseq 1

$L__BB21_35:
	ret;

}
	// .globl	_Z24device_write_kernel_syncPdmmPlS0_
.visible .entry _Z24device_write_kernel_syncPdmmPlS0_(
	.param .u64 _Z24device_write_kernel_syncPdmmPlS0__param_0,
	.param .u64 _Z24device_write_kernel_syncPdmmPlS0__param_1,
	.param .u64 _Z24device_write_kernel_syncPdmmPlS0__param_2,
	.param .u64 _Z24device_write_kernel_syncPdmmPlS0__param_3,
	.param .u64 _Z24device_write_kernel_syncPdmmPlS0__param_4
)
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<52>;
	.reg .b64 	%rd<82>;
	// demoted variable
	.shared .align 8 .b8 _ZZ24device_write_kernel_syncPdmmPlS0_E6clocks[8192];

	ld.param.u64 	%rd31, [_Z24device_write_kernel_syncPdmmPlS0__param_0];
	ld.param.u64 	%rd32, [_Z24device_write_kernel_syncPdmmPlS0__param_1];
	ld.param.u64 	%rd33, [_Z24device_write_kernel_syncPdmmPlS0__param_2];
	ld.param.u64 	%rd34, [_Z24device_write_kernel_syncPdmmPlS0__param_3];
	ld.param.u64 	%rd35, [_Z24device_write_kernel_syncPdmmPlS0__param_4];
	cvta.to.global.u64 	%rd1, %rd35;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r15, %r2, %r1, %r3;
	cvt.u64.u32 	%rd2, %r15;
	// begin inline asm
	mov.u32 %r13, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd36, %r13;
	// begin inline asm
	mov.u32 %r14, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd37, %r14;
	bfi.b64 	%rd3, %rd37, %rd36, 32, 32;
	setp.eq.s64 	%p1, %rd33, 0;
	@%p1 bra 	$L__BB22_33;

	add.s64 	%rd4, %rd3, 4;
	mov.u32 	%r16, %tid.y;
	add.s32 	%r4, %r3, %r16;
	mov.u32 	%r17, %tid.z;
	neg.s32 	%r5, %r17;
	mov.u32 	%r18, %nctaid.y;
	mov.u32 	%r19, %nctaid.x;
	mul.lo.s32 	%r20, %r19, %r18;
	mov.u32 	%r21, %nctaid.z;
	mul.lo.s32 	%r22, %r20, %r21;
	mov.u32 	%r23, %ctaid.y;
	add.s32 	%r24, %r2, %r23;
	mov.u32 	%r25, %ctaid.z;
	neg.s32 	%r26, %r25;
	setp.eq.s32 	%p2, %r24, %r26;
	mov.u32 	%r27, -2147483647;
	sub.s32 	%r28, %r27, %r22;
	selp.b32 	%r6, %r28, 1, %p2;
	shl.b32 	%r29, %r3, 3;
	mov.u32 	%r30, _ZZ24device_write_kernel_syncPdmmPlS0_E6clocks;
	add.s32 	%r7, %r30, %r29;
	mul.lo.s32 	%r31, %r1, %r19;
	cvt.u64.u32 	%rd5, %r31;
	cvt.u64.u32 	%rd6, %r19;
	cvt.u64.u32 	%rd7, %r2;
	cvt.u64.u32 	%rd39, %r1;
	add.s64 	%rd8, %rd39, -2;
	add.s32 	%r32, %r1, -1;
	and.b32  	%r8, %r32, 3;
	cvt.u64.u32 	%rd40, %r8;
	not.b64 	%rd41, %rd40;
	add.s64 	%rd9, %rd41, %rd39;
	cvta.to.global.u64 	%rd10, %rd34;
	cvta.to.global.u64 	%rd11, %rd31;
	mov.u64 	%rd73, 0;

$L__BB22_2:
	setp.ne.s64 	%p3, %rd3, 0;
	@%p3 bra 	$L__BB22_4;

	// begin inline asm
	trap;
	// end inline asm

$L__BB22_4:
	setp.ne.s32 	%p4, %r4, %r5;
	barrier.sync 	0;
	@%p4 bra 	$L__BB22_7;

	// begin inline asm
	atom.add.release.gpu.u32 %r33,[%rd4],%r6;
	// end inline asm

$L__BB22_6:
	// begin inline asm
	ld.acquire.gpu.u32 %r35,[%rd4];
	// end inline asm
	xor.b32  	%r36, %r35, %r33;
	setp.gt.s32 	%p5, %r36, -1;
	@%p5 bra 	$L__BB22_6;

$L__BB22_7:
	barrier.sync 	0;
	// begin inline asm
	mov.u64 %rd44, %globaltimer;
	// end inline asm
	add.s64 	%rd45, %rd44, 1000000;
	st.global.u64 	[%rd1], %rd45;
	@%p3 bra 	$L__BB22_9;

	// begin inline asm
	trap;
	// end inline asm

$L__BB22_9:
	barrier.sync 	0;
	@%p4 bra 	$L__BB22_12;

	// begin inline asm
	atom.add.release.gpu.u32 %r37,[%rd4],%r6;
	// end inline asm

$L__BB22_11:
	// begin inline asm
	ld.acquire.gpu.u32 %r39,[%rd4];
	// end inline asm
	xor.b32  	%r40, %r39, %r37;
	setp.gt.s32 	%p8, %r40, -1;
	@%p8 bra 	$L__BB22_11;

$L__BB22_12:
	barrier.sync 	0;
	bar.sync 	0;
	ld.global.u64 	%rd13, [%rd1];

$L__BB22_13:
	// begin inline asm
	mov.u64 %rd48, %globaltimer;
	// end inline asm
	setp.lt.s64 	%p9, %rd48, %rd13;
	@%p9 bra 	$L__BB22_13;

	setp.ge.u64 	%p10, %rd2, %rd32;
	@%p10 bra 	$L__BB22_17;

	mov.u64 	%rd74, %rd2;

$L__BB22_16:
	shl.b64 	%rd49, %rd74, 3;
	add.s64 	%rd50, %rd11, %rd49;
	mov.u64 	%rd51, 0;
	st.global.u64 	[%rd50], %rd51;
	add.s64 	%rd74, %rd74, %rd5;
	setp.lt.u64 	%p11, %rd74, %rd32;
	@%p11 bra 	$L__BB22_16;

$L__BB22_17:
	// begin inline asm
	mov.u64 %rd52, %globaltimer;
	// end inline asm
	sub.s64 	%rd53, %rd52, %rd13;
	st.shared.u64 	[%r7], %rd53;
	@%p3 bra 	$L__BB22_19;

	// begin inline asm
	trap;
	// end inline asm

$L__BB22_19:
	barrier.sync 	0;
	@%p4 bra 	$L__BB22_22;

	// begin inline asm
	atom.add.release.gpu.u32 %r41,[%rd4],%r6;
	// end inline asm

$L__BB22_21:
	// begin inline asm
	ld.acquire.gpu.u32 %r43,[%rd4];
	// end inline asm
	xor.b32  	%r44, %r43, %r41;
	setp.gt.s32 	%p14, %r44, -1;
	@%p14 bra 	$L__BB22_21;

$L__BB22_22:
	setp.ne.s32 	%p15, %r3, 0;
	barrier.sync 	0;
	@%p15 bra 	$L__BB22_32;

	setp.lt.u32 	%p16, %r1, 2;
	ld.shared.u64 	%rd81, [_ZZ24device_write_kernel_syncPdmmPlS0_E6clocks];
	@%p16 bra 	$L__BB22_31;

	setp.lt.u64 	%p17, %rd8, 3;
	mov.u64 	%rd79, 1;
	@%p17 bra 	$L__BB22_27;

	mov.u64 	%rd79, 1;
	mov.u64 	%rd77, %rd9;

$L__BB22_26:
	cvt.u32.u64 	%r45, %rd79;
	shl.b32 	%r46, %r45, 3;
	add.s32 	%r48, %r30, %r46;
	ld.shared.u64 	%rd59, [%r48];
	max.s64 	%rd60, %rd81, %rd59;
	ld.shared.u64 	%rd61, [%r48+8];
	max.s64 	%rd62, %rd60, %rd61;
	ld.shared.u64 	%rd63, [%r48+16];
	max.s64 	%rd64, %rd62, %rd63;
	ld.shared.u64 	%rd65, [%r48+24];
	max.s64 	%rd81, %rd64, %rd65;
	add.s64 	%rd79, %rd79, 4;
	add.s64 	%rd77, %rd77, -4;
	setp.ne.s64 	%p18, %rd77, 0;
	@%p18 bra 	$L__BB22_26;

$L__BB22_27:
	setp.eq.s32 	%p19, %r8, 0;
	@%p19 bra 	$L__BB22_31;

	setp.eq.s32 	%p20, %r8, 1;
	cvt.u32.u64 	%r49, %rd79;
	shl.b32 	%r50, %r49, 3;
	add.s32 	%r12, %r30, %r50;
	ld.shared.u64 	%rd66, [%r12];
	max.s64 	%rd81, %rd81, %rd66;
	@%p20 bra 	$L__BB22_31;

	setp.eq.s32 	%p21, %r8, 2;
	ld.shared.u64 	%rd67, [%r12+8];
	max.s64 	%rd81, %rd81, %rd67;
	@%p21 bra 	$L__BB22_31;

	ld.shared.u64 	%rd68, [%r12+16];
	max.s64 	%rd81, %rd81, %rd68;

$L__BB22_31:
	mul.lo.s64 	%rd69, %rd73, %rd6;
	add.s64 	%rd70, %rd69, %rd7;
	shl.b64 	%rd71, %rd70, 3;
	add.s64 	%rd72, %rd10, %rd71;
	st.global.u64 	[%rd72], %rd81;

$L__BB22_32:
	add.s64 	%rd73, %rd73, 1;
	setp.lt.u64 	%p22, %rd73, %rd33;
	@%p22 bra 	$L__BB22_2;

$L__BB22_33:
	ret;

}
	// .globl	_Z33device_write_kernel_time_analysisPdmmPlS0_S0_
.visible .entry _Z33device_write_kernel_time_analysisPdmmPlS0_S0_(
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_0,
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_1,
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_2,
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_3,
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_4,
	.param .u64 _Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_5
)
{
	.reg .pred 	%p<16>;
	.reg .b32 	%r<39>;
	.reg .b64 	%rd<48>;


	ld.param.u64 	%rd17, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_0];
	ld.param.u64 	%rd18, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_1];
	ld.param.u64 	%rd19, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_2];
	ld.param.u64 	%rd20, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_3];
	ld.param.u64 	%rd21, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_4];
	ld.param.u64 	%rd22, [_Z33device_write_kernel_time_analysisPdmmPlS0_S0__param_5];
	cvta.to.global.u64 	%rd1, %rd22;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r12, %r2, %r1, %r3;
	cvt.u64.u32 	%rd2, %r12;
	// begin inline asm
	mov.u32 %r10, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd23, %r10;
	// begin inline asm
	mov.u32 %r11, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd24, %r11;
	bfi.b64 	%rd3, %rd24, %rd23, 32, 32;
	setp.eq.s64 	%p1, %rd19, 0;
	@%p1 bra 	$L__BB23_23;

	add.s64 	%rd4, %rd3, 4;
	mov.u32 	%r13, %tid.y;
	add.s32 	%r4, %r3, %r13;
	mov.u32 	%r14, %tid.z;
	neg.s32 	%r5, %r14;
	mov.u32 	%r15, %nctaid.y;
	mov.u32 	%r16, %nctaid.x;
	mul.lo.s32 	%r17, %r16, %r15;
	mov.u32 	%r18, %nctaid.z;
	mul.lo.s32 	%r19, %r17, %r18;
	mov.u32 	%r20, %ctaid.y;
	add.s32 	%r21, %r2, %r20;
	mov.u32 	%r22, %ctaid.z;
	neg.s32 	%r23, %r22;
	setp.eq.s32 	%p2, %r21, %r23;
	mov.u32 	%r24, -2147483647;
	sub.s32 	%r25, %r24, %r19;
	selp.b32 	%r6, %r25, 1, %p2;
	mul.lo.s32 	%r26, %r1, %r16;
	cvt.u64.u32 	%rd5, %r26;
	mul.wide.u32 	%rd6, %r1, %r16;
	cvta.to.global.u64 	%rd7, %rd20;
	cvta.to.global.u64 	%rd8, %rd21;
	cvta.to.global.u64 	%rd9, %rd17;
	mov.u64 	%rd46, 0;

$L__BB23_2:
	setp.ne.s64 	%p3, %rd3, 0;
	@%p3 bra 	$L__BB23_4;

	// begin inline asm
	trap;
	// end inline asm

$L__BB23_4:
	setp.ne.s32 	%p4, %r4, %r5;
	barrier.sync 	0;
	@%p4 bra 	$L__BB23_7;

	// begin inline asm
	atom.add.release.gpu.u32 %r27,[%rd4],%r6;
	// end inline asm

$L__BB23_6:
	// begin inline asm
	ld.acquire.gpu.u32 %r29,[%rd4];
	// end inline asm
	xor.b32  	%r30, %r29, %r27;
	setp.gt.s32 	%p5, %r30, -1;
	@%p5 bra 	$L__BB23_6;

$L__BB23_7:
	barrier.sync 	0;
	// begin inline asm
	mov.u64 %rd28, %globaltimer;
	// end inline asm
	add.s64 	%rd29, %rd28, 1000000;
	st.global.u64 	[%rd1], %rd29;
	@%p3 bra 	$L__BB23_9;

	// begin inline asm
	trap;
	// end inline asm

$L__BB23_9:
	barrier.sync 	0;
	@%p4 bra 	$L__BB23_12;

	// begin inline asm
	atom.add.release.gpu.u32 %r31,[%rd4],%r6;
	// end inline asm

$L__BB23_11:
	// begin inline asm
	ld.acquire.gpu.u32 %r33,[%rd4];
	// end inline asm
	xor.b32  	%r34, %r33, %r31;
	setp.gt.s32 	%p8, %r34, -1;
	@%p8 bra 	$L__BB23_11;

$L__BB23_12:
	barrier.sync 	0;
	bar.sync 	0;
	ld.global.u64 	%rd11, [%rd1];

$L__BB23_13:
	// begin inline asm
	mov.u64 %rd32, %globaltimer;
	// end inline asm
	setp.lt.s64 	%p9, %rd32, %rd11;
	@%p9 bra 	$L__BB23_13;

	setp.ge.u64 	%p10, %rd2, %rd18;
	@%p10 bra 	$L__BB23_17;

	mov.u64 	%rd47, %rd2;

$L__BB23_16:
	shl.b64 	%rd33, %rd47, 3;
	add.s64 	%rd34, %rd9, %rd33;
	mov.u64 	%rd35, 0;
	st.global.u64 	[%rd34], %rd35;
	add.s64 	%rd47, %rd47, %rd5;
	setp.lt.u64 	%p11, %rd47, %rd18;
	@%p11 bra 	$L__BB23_16;

$L__BB23_17:
	// begin inline asm
	mov.u64 %rd36, %globaltimer;
	// end inline asm
	@%p3 bra 	$L__BB23_19;

	// begin inline asm
	trap;
	// end inline asm

$L__BB23_19:
	barrier.sync 	0;
	@%p4 bra 	$L__BB23_22;

	// begin inline asm
	atom.add.release.gpu.u32 %r35,[%rd4],%r6;
	// end inline asm

$L__BB23_21:
	// begin inline asm
	ld.acquire.gpu.u32 %r37,[%rd4];
	// end inline asm
	xor.b32  	%r38, %r37, %r35;
	setp.gt.s32 	%p14, %r38, -1;
	@%p14 bra 	$L__BB23_21;

$L__BB23_22:
	barrier.sync 	0;
	mul.lo.s64 	%rd39, %rd6, %rd46;
	add.s64 	%rd40, %rd39, %rd2;
	shl.b64 	%rd41, %rd40, 3;
	add.s64 	%rd42, %rd7, %rd41;
	sub.s64 	%rd43, %rd32, %rd11;
	st.global.u64 	[%rd42], %rd43;
	add.s64 	%rd44, %rd8, %rd41;
	sub.s64 	%rd45, %rd36, %rd11;
	st.global.u64 	[%rd44], %rd45;
	add.s64 	%rd46, %rd46, 1;
	setp.lt.u64 	%p15, %rd46, %rd19;
	@%p15 bra 	$L__BB23_2;

$L__BB23_23:
	ret;

}
	// .globl	_Z23device_copy_kernel_syncPdS_mmPlS0_
.visible .entry _Z23device_copy_kernel_syncPdS_mmPlS0_(
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_0,
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_1,
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_2,
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_3,
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_4,
	.param .u64 _Z23device_copy_kernel_syncPdS_mmPlS0__param_5
)
{
	.reg .pred 	%p<23>;
	.reg .b32 	%r<52>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<84>;
	// demoted variable
	.shared .align 8 .b8 _ZZ23device_copy_kernel_syncPdS_mmPlS0_E6clocks[8192];

	ld.param.u64 	%rd32, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_0];
	ld.param.u64 	%rd33, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_1];
	ld.param.u64 	%rd34, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_2];
	ld.param.u64 	%rd35, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_3];
	ld.param.u64 	%rd36, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_4];
	ld.param.u64 	%rd37, [_Z23device_copy_kernel_syncPdS_mmPlS0__param_5];
	cvta.to.global.u64 	%rd1, %rd37;
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %tid.x;
	mad.lo.s32 	%r15, %r2, %r1, %r3;
	cvt.u64.u32 	%rd2, %r15;
	// begin inline asm
	mov.u32 %r13, %envreg2;
	// end inline asm
	cvt.u64.u32 	%rd38, %r13;
	// begin inline asm
	mov.u32 %r14, %envreg1;
	// end inline asm
	cvt.u64.u32 	%rd39, %r14;
	bfi.b64 	%rd3, %rd39, %rd38, 32, 32;
	setp.eq.s64 	%p1, %rd35, 0;
	@%p1 bra 	$L__BB24_33;

	add.s64 	%rd4, %rd3, 4;
	mov.u32 	%r16, %tid.y;
	add.s32 	%r4, %r3, %r16;
	mov.u32 	%r17, %tid.z;
	neg.s32 	%r5, %r17;
	mov.u32 	%r18, %nctaid.y;
	mov.u32 	%r19, %nctaid.x;
	mul.lo.s32 	%r20, %r19, %r18;
	mov.u32 	%r21, %nctaid.z;
	mul.lo.s32 	%r22, %r20, %r21;
	mov.u32 	%r23, %ctaid.y;
	add.s32 	%r24, %r2, %r23;
	mov.u32 	%r25, %ctaid.z;
	neg.s32 	%r26, %r25;
	setp.eq.s32 	%p2, %r24, %r26;
	mov.u32 	%r27, -2147483647;
	sub.s32 	%r28, %r27, %r22;
	selp.b32 	%r6, %r28, 1, %p2;
	shl.b32 	%r29, %r3, 3;
	mov.u32 	%r30, _ZZ23device_copy_kernel_syncPdS_mmPlS0_E6clocks;
	add.s32 	%r7, %r30, %r29;
	mul.lo.s32 	%r31, %r1, %r19;
	cvt.u64.u32 	%rd5, %r31;
	cvt.u64.u32 	%rd6, %r19;
	cvt.u64.u32 	%rd7, %r2;
	cvt.u64.u32 	%rd41, %r1;
	add.s64 	%rd8, %rd41, -2;
	add.s32 	%r32, %r1, -1;
	and.b32  	%r8, %r32, 3;
	cvt.u64.u32 	%rd42, %r8;
	not.b64 	%rd43, %rd42;
	add.s64 	%rd9, %rd43, %rd41;
	cvta.to.global.u64 	%rd10, %rd36;
	cvta.to.global.u64 	%rd11, %rd32;
	cvta.to.global.u64 	%rd12, %rd33;
	mov.u64 	%rd75, 0;

$L__BB24_2:
	setp.ne.s64 	%p3, %rd3, 0;
	@%p3 bra 	$L__BB24_4;

	// begin inline asm
	trap;
	// end inline asm

$L__BB24_4:
	setp.ne.s32 	%p4, %r4, %r5;
	barrier.sync 	0;
	@%p4 bra 	$L__BB24_7;

	// begin inline asm
	atom.add.release.gpu.u32 %r33,[%rd4],%r6;
	// end inline asm

$L__BB24_6:
	// begin inline asm
	ld.acquire.gpu.u32 %r35,[%rd4];
	// end inline asm
	xor.b32  	%r36, %r35, %r33;
	setp.gt.s32 	%p5, %r36, -1;
	@%p5 bra 	$L__BB24_6;

$L__BB24_7:
	barrier.sync 	0;
	// begin inline asm
	mov.u64 %rd46, %globaltimer;
	// end inline asm
	add.s64 	%rd47, %rd46, 1000000;
	st.global.u64 	[%rd1], %rd47;
	@%p3 bra 	$L__BB24_9;

	// begin inline asm
	trap;
	// end inline asm

$L__BB24_9:
	barrier.sync 	0;
	@%p4 bra 	$L__BB24_12;

	// begin inline asm
	atom.add.release.gpu.u32 %r37,[%rd4],%r6;
	// end inline asm

$L__BB24_11:
	// begin inline asm
	ld.acquire.gpu.u32 %r39,[%rd4];
	// end inline asm
	xor.b32  	%r40, %r39, %r37;
	setp.gt.s32 	%p8, %r40, -1;
	@%p8 bra 	$L__BB24_11;

$L__BB24_12:
	barrier.sync 	0;
	bar.sync 	0;
	ld.global.u64 	%rd14, [%rd1];

$L__BB24_13:
	// begin inline asm
	mov.u64 %rd50, %globaltimer;
	// end inline asm
	setp.lt.s64 	%p9, %rd50, %rd14;
	@%p9 bra 	$L__BB24_13;

	setp.ge.u64 	%p10, %rd2, %rd34;
	@%p10 bra 	$L__BB24_17;

	mov.u64 	%rd76, %rd2;

$L__BB24_16:
	shl.b64 	%rd51, %rd76, 3;
	add.s64 	%rd52, %rd11, %rd51;
	ld.global.f64 	%fd1, [%rd52];
	add.s64 	%rd53, %rd12, %rd51;
	st.global.f64 	[%rd53], %fd1;
	add.s64 	%rd76, %rd76, %rd5;
	setp.lt.u64 	%p11, %rd76, %rd34;
	@%p11 bra 	$L__BB24_16;

$L__BB24_17:
	// begin inline asm
	mov.u64 %rd54, %globaltimer;
	// end inline asm
	sub.s64 	%rd55, %rd54, %rd14;
	st.shared.u64 	[%r7], %rd55;
	@%p3 bra 	$L__BB24_19;

	// begin inline asm
	trap;
	// end inline asm

$L__BB24_19:
	barrier.sync 	0;
	@%p4 bra 	$L__BB24_22;

	// begin inline asm
	atom.add.release.gpu.u32 %r41,[%rd4],%r6;
	// end inline asm

$L__BB24_21:
	// begin inline asm
	ld.acquire.gpu.u32 %r43,[%rd4];
	// end inline asm
	xor.b32  	%r44, %r43, %r41;
	setp.gt.s32 	%p14, %r44, -1;
	@%p14 bra 	$L__BB24_21;

$L__BB24_22:
	setp.ne.s32 	%p15, %r3, 0;
	barrier.sync 	0;
	@%p15 bra 	$L__BB24_32;

	setp.lt.u32 	%p16, %r1, 2;
	ld.shared.u64 	%rd83, [_ZZ23device_copy_kernel_syncPdS_mmPlS0_E6clocks];
	@%p16 bra 	$L__BB24_31;

	setp.lt.u64 	%p17, %rd8, 3;
	mov.u64 	%rd81, 1;
	@%p17 bra 	$L__BB24_27;

	mov.u64 	%rd81, 1;
	mov.u64 	%rd79, %rd9;

$L__BB24_26:
	cvt.u32.u64 	%r45, %rd81;
	shl.b32 	%r46, %r45, 3;
	add.s32 	%r48, %r30, %r46;
	ld.shared.u64 	%rd61, [%r48];
	max.s64 	%rd62, %rd83, %rd61;
	ld.shared.u64 	%rd63, [%r48+8];
	max.s64 	%rd64, %rd62, %rd63;
	ld.shared.u64 	%rd65, [%r48+16];
	max.s64 	%rd66, %rd64, %rd65;
	ld.shared.u64 	%rd67, [%r48+24];
	max.s64 	%rd83, %rd66, %rd67;
	add.s64 	%rd81, %rd81, 4;
	add.s64 	%rd79, %rd79, -4;
	setp.ne.s64 	%p18, %rd79, 0;
	@%p18 bra 	$L__BB24_26;

$L__BB24_27:
	setp.eq.s32 	%p19, %r8, 0;
	@%p19 bra 	$L__BB24_31;

	setp.eq.s32 	%p20, %r8, 1;
	cvt.u32.u64 	%r49, %rd81;
	shl.b32 	%r50, %r49, 3;
	add.s32 	%r12, %r30, %r50;
	ld.shared.u64 	%rd68, [%r12];
	max.s64 	%rd83, %rd83, %rd68;
	@%p20 bra 	$L__BB24_31;

	setp.eq.s32 	%p21, %r8, 2;
	ld.shared.u64 	%rd69, [%r12+8];
	max.s64 	%rd83, %rd83, %rd69;
	@%p21 bra 	$L__BB24_31;

	ld.shared.u64 	%rd70, [%r12+16];
	max.s64 	%rd83, %rd83, %rd70;

$L__BB24_31:
	mul.lo.s64 	%rd71, %rd75, %rd6;
	add.s64 	%rd72, %rd71, %rd7;
	shl.b64 	%rd73, %rd72, 3;
	add.s64 	%rd74, %rd10, %rd73;
	st.global.u64 	[%rd74], %rd83;

$L__BB24_32:
	add.s64 	%rd75, %rd75, 1;
	setp.lt.u64 	%p22, %rd75, %rd35;
	@%p22 bra 	$L__BB24_2;

$L__BB24_33:
	ret;

}
	// .globl	_Z24device_read_kernel_blockPmmmPl
.visible .entry _Z24device_read_kernel_blockPmmmPl(
	.param .u64 _Z24device_read_kernel_blockPmmmPl_param_0,
	.param .u64 _Z24device_read_kernel_blockPmmmPl_param_1,
	.param .u64 _Z24device_read_kernel_blockPmmmPl_param_2,
	.param .u64 _Z24device_read_kernel_blockPmmmPl_param_3
)
{
	.local .align 16 .b8 	__local_depot25[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<24>;
	.reg .b32 	%r<29>;
	.reg .b64 	%rd<356>;
	// demoted variable
	.shared .align 8 .b8 _ZZ24device_read_kernel_blockPmmmPlE6clocks[8200];

	mov.u64 	%SPL, __local_depot25;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd136, [_Z24device_read_kernel_blockPmmmPl_param_0];
	ld.param.u64 	%rd133, [_Z24device_read_kernel_blockPmmmPl_param_1];
	ld.param.u64 	%rd134, [_Z24device_read_kernel_blockPmmmPl_param_2];
	ld.param.u64 	%rd135, [_Z24device_read_kernel_blockPmmmPl_param_3];
	cvta.to.global.u64 	%rd1, %rd136;
	add.u64 	%rd2, %SPL, 0;
	mov.u32 	%r5, %ctaid.x;
	setp.eq.s32 	%p1, %r5, 0;
	@%p1 bra 	$L__BB25_2;

	mov.u64 	%rd138, $str$3;
	cvta.global.u64 	%rd139, %rd138;
	mov.u64 	%rd140, $str$4;
	cvta.global.u64 	%rd141, %rd140;
	mov.u64 	%rd142, __unnamed_1;
	cvta.global.u64 	%rd143, %rd142;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd139;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd141;
	.param .b32 param2;
	st.param.b32 	[param2+0], 296;
	.param .b64 param3;
	st.param.b64 	[param3+0], %rd143;
	.param .b64 param4;
	st.param.b64 	[param4+0], 1;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	} // callseq 2

$L__BB25_2:
	mov.u32 	%r6, %tid.x;
	cvt.u64.u32 	%rd3, %r6;
	shr.u64 	%rd4, %rd133, 10;
	setp.ge.u64 	%p2, %rd3, %rd133;
	@%p2 bra 	$L__BB25_6;

	mov.u64 	%rd285, %rd3;

$L__BB25_4:
	shl.b64 	%rd146, %rd285, 3;
	add.s64 	%rd147, %rd1, %rd146;
	ld.global.u64 	%rd148, [%rd147];
	xor.b64  	%rd333, %rd333, %rd148;
	add.s64 	%rd285, %rd285, 1024;
	setp.lt.u64 	%p3, %rd285, %rd133;
	@%p3 bra 	$L__BB25_4;

	st.local.u64 	[%rd2], %rd333;

$L__BB25_6:
	cvt.u32.u64 	%r7, %rd3;
	shl.b32 	%r8, %r7, 3;
	mov.u32 	%r9, _ZZ24device_read_kernel_blockPmmmPlE6clocks;
	add.s32 	%r1, %r9, %r8;
	setp.eq.s64 	%p4, %rd134, 0;
	@%p4 bra 	$L__BB25_34;

	mov.u32 	%r2, %ntid.x;
	cvt.u64.u32 	%rd151, %r2;
	add.s64 	%rd11, %rd4, -1;
	shr.u64 	%rd152, %rd11, 3;
	add.s64 	%rd153, %rd152, 1;
	add.s64 	%rd12, %rd151, -2;
	and.b64  	%rd13, %rd153, 3;
	add.s32 	%r10, %r2, -1;
	and.b32  	%r3, %r10, 3;
	cvt.u64.u32 	%rd154, %r3;
	not.b64 	%rd155, %rd154;
	add.s64 	%rd14, %rd155, %rd151;
	add.s64 	%rd156, %rd13, -1;
	sub.s64 	%rd15, %rd156, %rd152;
	shl.b64 	%rd157, %rd3, 3;
	add.s64 	%rd158, %rd1, %rd157;
	add.s64 	%rd16, %rd158, 128;
	cvta.to.global.u64 	%rd17, %rd135;
	mov.u64 	%rd295, 0;

$L__BB25_8:
	cvt.u32.u64 	%r22, %rd3;
	setp.ne.s32 	%p5, %r22, 0;
	bar.sync 	0;
	@%p5 bra 	$L__BB25_10;

	// begin inline asm
	mov.u64 	%rd159, %clock64;
	// end inline asm
	add.s64 	%rd160, %rd159, 19799997;
	st.shared.u64 	[_ZZ24device_read_kernel_blockPmmmPlE6clocks+8192], %rd160;

$L__BB25_10:
	bar.sync 	0;
	ld.shared.u64 	%rd27, [_ZZ24device_read_kernel_blockPmmmPlE6clocks+8192];

$L__BB25_11:
	// begin inline asm
	mov.u64 	%rd161, %clock64;
	// end inline asm
	setp.lt.s64 	%p6, %rd161, %rd27;
	@%p6 bra 	$L__BB25_11;

	setp.eq.s64 	%p7, %rd4, 0;
	@%p7 bra 	$L__BB25_22;

	mov.u64 	%rd304, 0;

$L__BB25_14:
	mov.u64 	%rd332, 0;
	setp.lt.u64 	%p8, %rd11, 24;
	@%p8 bra 	$L__BB25_17;

	mov.u64 	%rd332, 0;
	mov.u64 	%rd305, %rd16;
	mov.u64 	%rd306, %rd15;

$L__BB25_16:
	ld.global.u64 	%rd166, [%rd305+-128];
	xor.b64  	%rd167, %rd333, %rd166;
	ld.global.u64 	%rd168, [%rd305+-120];
	xor.b64  	%rd169, %rd334, %rd168;
	ld.global.u64 	%rd170, [%rd305+-112];
	xor.b64  	%rd171, %rd335, %rd170;
	ld.global.u64 	%rd172, [%rd305+-104];
	xor.b64  	%rd173, %rd336, %rd172;
	ld.global.u64 	%rd174, [%rd305+-96];
	xor.b64  	%rd175, %rd337, %rd174;
	ld.global.u64 	%rd176, [%rd305+-88];
	xor.b64  	%rd177, %rd338, %rd176;
	ld.global.u64 	%rd178, [%rd305+-80];
	xor.b64  	%rd179, %rd339, %rd178;
	ld.global.u64 	%rd180, [%rd305+-72];
	xor.b64  	%rd181, %rd340, %rd180;
	ld.global.u64 	%rd182, [%rd305+-64];
	xor.b64  	%rd183, %rd167, %rd182;
	ld.global.u64 	%rd184, [%rd305+-56];
	xor.b64  	%rd185, %rd169, %rd184;
	ld.global.u64 	%rd186, [%rd305+-48];
	xor.b64  	%rd187, %rd171, %rd186;
	ld.global.u64 	%rd188, [%rd305+-40];
	xor.b64  	%rd189, %rd173, %rd188;
	ld.global.u64 	%rd190, [%rd305+-32];
	xor.b64  	%rd191, %rd175, %rd190;
	ld.global.u64 	%rd192, [%rd305+-24];
	xor.b64  	%rd193, %rd177, %rd192;
	ld.global.u64 	%rd194, [%rd305+-16];
	xor.b64  	%rd195, %rd179, %rd194;
	ld.global.u64 	%rd196, [%rd305+-8];
	xor.b64  	%rd197, %rd181, %rd196;
	ld.global.u64 	%rd198, [%rd305];
	xor.b64  	%rd199, %rd183, %rd198;
	ld.global.u64 	%rd200, [%rd305+8];
	xor.b64  	%rd201, %rd185, %rd200;
	ld.global.u64 	%rd202, [%rd305+16];
	xor.b64  	%rd203, %rd187, %rd202;
	ld.global.u64 	%rd204, [%rd305+24];
	xor.b64  	%rd205, %rd189, %rd204;
	ld.global.u64 	%rd206, [%rd305+32];
	xor.b64  	%rd207, %rd191, %rd206;
	ld.global.u64 	%rd208, [%rd305+40];
	xor.b64  	%rd209, %rd193, %rd208;
	ld.global.u64 	%rd210, [%rd305+48];
	xor.b64  	%rd211, %rd195, %rd210;
	ld.global.u64 	%rd212, [%rd305+56];
	xor.b64  	%rd213, %rd197, %rd212;
	ld.global.u64 	%rd214, [%rd305+64];
	xor.b64  	%rd333, %rd199, %rd214;
	ld.global.u64 	%rd215, [%rd305+72];
	xor.b64  	%rd334, %rd201, %rd215;
	ld.global.u64 	%rd216, [%rd305+80];
	xor.b64  	%rd335, %rd203, %rd216;
	ld.global.u64 	%rd217, [%rd305+88];
	xor.b64  	%rd336, %rd205, %rd217;
	ld.global.u64 	%rd218, [%rd305+96];
	xor.b64  	%rd337, %rd207, %rd218;
	ld.global.u64 	%rd219, [%rd305+104];
	xor.b64  	%rd338, %rd209, %rd219;
	ld.global.u64 	%rd220, [%rd305+112];
	xor.b64  	%rd339, %rd211, %rd220;
	ld.global.u64 	%rd221, [%rd305+120];
	xor.b64  	%rd340, %rd213, %rd221;
	add.s64 	%rd332, %rd332, 32;
	add.s64 	%rd305, %rd305, 256;
	add.s64 	%rd306, %rd306, 4;
	setp.ne.s64 	%p9, %rd306, 0;
	@%p9 bra 	$L__BB25_16;

$L__BB25_17:
	setp.eq.s64 	%p10, %rd13, 0;
	@%p10 bra 	$L__BB25_21;

	setp.eq.s64 	%p11, %rd13, 1;
	add.s64 	%rd222, %rd332, %rd3;
	shl.b64 	%rd223, %rd222, 3;
	add.s64 	%rd76, %rd1, %rd223;
	ld.global.u64 	%rd224, [%rd76];
	xor.b64  	%rd333, %rd333, %rd224;
	ld.global.u64 	%rd225, [%rd76+8];
	xor.b64  	%rd334, %rd334, %rd225;
	ld.global.u64 	%rd226, [%rd76+16];
	xor.b64  	%rd335, %rd335, %rd226;
	ld.global.u64 	%rd227, [%rd76+24];
	xor.b64  	%rd336, %rd336, %rd227;
	ld.global.u64 	%rd228, [%rd76+32];
	xor.b64  	%rd337, %rd337, %rd228;
	ld.global.u64 	%rd229, [%rd76+40];
	xor.b64  	%rd338, %rd338, %rd229;
	ld.global.u64 	%rd230, [%rd76+48];
	xor.b64  	%rd339, %rd339, %rd230;
	ld.global.u64 	%rd231, [%rd76+56];
	xor.b64  	%rd340, %rd340, %rd231;
	@%p11 bra 	$L__BB25_21;

	setp.eq.s64 	%p12, %rd13, 2;
	ld.global.u64 	%rd232, [%rd76+64];
	xor.b64  	%rd333, %rd333, %rd232;
	ld.global.u64 	%rd233, [%rd76+72];
	xor.b64  	%rd334, %rd334, %rd233;
	ld.global.u64 	%rd234, [%rd76+80];
	xor.b64  	%rd335, %rd335, %rd234;
	ld.global.u64 	%rd235, [%rd76+88];
	xor.b64  	%rd336, %rd336, %rd235;
	ld.global.u64 	%rd236, [%rd76+96];
	xor.b64  	%rd337, %rd337, %rd236;
	ld.global.u64 	%rd237, [%rd76+104];
	xor.b64  	%rd338, %rd338, %rd237;
	ld.global.u64 	%rd238, [%rd76+112];
	xor.b64  	%rd339, %rd339, %rd238;
	ld.global.u64 	%rd239, [%rd76+120];
	xor.b64  	%rd340, %rd340, %rd239;
	@%p12 bra 	$L__BB25_21;

	ld.global.u64 	%rd240, [%rd76+128];
	xor.b64  	%rd333, %rd333, %rd240;
	ld.global.u64 	%rd241, [%rd76+136];
	xor.b64  	%rd334, %rd334, %rd241;
	ld.global.u64 	%rd242, [%rd76+144];
	xor.b64  	%rd335, %rd335, %rd242;
	ld.global.u64 	%rd243, [%rd76+152];
	xor.b64  	%rd336, %rd336, %rd243;
	ld.global.u64 	%rd244, [%rd76+160];
	xor.b64  	%rd337, %rd337, %rd244;
	ld.global.u64 	%rd245, [%rd76+168];
	xor.b64  	%rd338, %rd338, %rd245;
	ld.global.u64 	%rd246, [%rd76+176];
	xor.b64  	%rd339, %rd339, %rd246;
	ld.global.u64 	%rd247, [%rd76+184];
	xor.b64  	%rd340, %rd340, %rd247;

$L__BB25_21:
	add.s64 	%rd304, %rd304, 1;
	setp.lt.u64 	%p13, %rd304, 8192;
	@%p13 bra 	$L__BB25_14;

$L__BB25_22:
	cvt.u32.u64 	%r21, %rd3;
	setp.ne.s32 	%p23, %r21, 0;
	// begin inline asm
	mov.u64 	%rd248, %clock64;
	// end inline asm
	st.shared.u64 	[%r1], %rd248;
	bar.sync 	0;
	@%p23 bra 	$L__BB25_32;

	setp.lt.u32 	%p15, %r2, 2;
	ld.shared.u64 	%rd355, [_ZZ24device_read_kernel_blockPmmmPlE6clocks];
	@%p15 bra 	$L__BB25_31;

	setp.lt.u64 	%p16, %rd12, 3;
	mov.u64 	%rd353, 1;
	@%p16 bra 	$L__BB25_27;

	mov.u64 	%rd353, 1;
	mov.u64 	%rd351, %rd14;

$L__BB25_26:
	cvt.u32.u64 	%r13, %rd353;
	shl.b32 	%r14, %r13, 3;
	add.s32 	%r16, %r9, %r14;
	ld.shared.u64 	%rd252, [%r16];
	max.s64 	%rd253, %rd355, %rd252;
	ld.shared.u64 	%rd254, [%r16+8];
	max.s64 	%rd255, %rd253, %rd254;
	ld.shared.u64 	%rd256, [%r16+16];
	max.s64 	%rd257, %rd255, %rd256;
	ld.shared.u64 	%rd258, [%r16+24];
	max.s64 	%rd355, %rd257, %rd258;
	add.s64 	%rd353, %rd353, 4;
	add.s64 	%rd351, %rd351, -4;
	setp.ne.s64 	%p17, %rd351, 0;
	@%p17 bra 	$L__BB25_26;

$L__BB25_27:
	setp.eq.s32 	%p18, %r3, 0;
	@%p18 bra 	$L__BB25_31;

	setp.eq.s32 	%p19, %r3, 1;
	cvt.u32.u64 	%r17, %rd353;
	shl.b32 	%r18, %r17, 3;
	add.s32 	%r4, %r9, %r18;
	ld.shared.u64 	%rd259, [%r4];
	max.s64 	%rd355, %rd355, %rd259;
	@%p19 bra 	$L__BB25_31;

	cvt.u32.u64 	%r25, %rd353;
	shl.b32 	%r24, %r25, 3;
	add.s32 	%r23, %r9, %r24;
	setp.eq.s32 	%p20, %r3, 2;
	ld.shared.u64 	%rd260, [%r23+8];
	max.s64 	%rd355, %rd355, %rd260;
	@%p20 bra 	$L__BB25_31;

	cvt.u32.u64 	%r28, %rd353;
	shl.b32 	%r27, %r28, 3;
	add.s32 	%r26, %r9, %r27;
	ld.shared.u64 	%rd261, [%r26+16];
	max.s64 	%rd355, %rd355, %rd261;

$L__BB25_31:
	sub.s64 	%rd262, %rd355, %rd27;
	shr.s64 	%rd263, %rd262, 63;
	shr.u64 	%rd264, %rd263, 51;
	add.s64 	%rd265, %rd262, %rd264;
	shr.s64 	%rd266, %rd265, 13;
	shl.b64 	%rd267, %rd295, 3;
	add.s64 	%rd268, %rd17, %rd267;
	st.global.u64 	[%rd268], %rd266;

$L__BB25_32:
	ld.param.u64 	%rd278, [_Z24device_read_kernel_blockPmmmPl_param_2];
	add.s64 	%rd295, %rd295, 1;
	setp.lt.u64 	%p21, %rd295, %rd278;
	@%p21 bra 	$L__BB25_8;

	add.u64 	%rd279, %SPL, 0;
	st.local.v2.u64 	[%rd279], {%rd333, %rd334};
	st.local.v2.u64 	[%rd279+16], {%rd335, %rd336};
	st.local.v2.u64 	[%rd279+32], {%rd337, %rd338};
	st.local.v2.u64 	[%rd279+48], {%rd339, %rd340};

$L__BB25_34:
	ld.shared.u64 	%rd269, [%r1];
	setp.ge.u64 	%p22, %rd269, %rd3;
	@%p22 bra 	$L__BB25_36;

	add.u64 	%rd281, %SPL, 0;
	shl.b64 	%rd270, %rd3, 3;
	and.b64  	%rd271, %rd270, 56;
	add.s64 	%rd272, %rd281, %rd271;
	ld.local.u64 	%rd273, [%rd272];
	add.u64 	%rd274, %SP, 64;
	add.u64 	%rd275, %SPL, 64;
	st.local.u64 	[%rd275], %rd273;
	mov.u64 	%rd276, $str$2;
	cvta.global.u64 	%rd277, %rd276;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd277;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd274;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r20, [retval0+0];
	} // callseq 3

$L__BB25_36:
	ret;

}
	// .globl	_Z25device_write_kernel_blockPdmmPl
.visible .entry _Z25device_write_kernel_blockPdmmPl(
	.param .u64 _Z25device_write_kernel_blockPdmmPl_param_0,
	.param .u64 _Z25device_write_kernel_blockPdmmPl_param_1,
	.param .u64 _Z25device_write_kernel_blockPdmmPl_param_2,
	.param .u64 _Z25device_write_kernel_blockPdmmPl_param_3
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<21>;
	.reg .b64 	%rd<66>;
	// demoted variable
	.shared .align 8 .b8 _ZZ25device_write_kernel_blockPdmmPlE6clocks[8200];

	ld.param.u64 	%rd26, [_Z25device_write_kernel_blockPdmmPl_param_0];
	ld.param.u64 	%rd27, [_Z25device_write_kernel_blockPdmmPl_param_1];
	ld.param.u64 	%rd28, [_Z25device_write_kernel_blockPdmmPl_param_2];
	ld.param.u64 	%rd29, [_Z25device_write_kernel_blockPdmmPl_param_3];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r8, %r7, %r1, %r2;
	cvt.u64.u32 	%rd1, %r8;
	setp.eq.s64 	%p1, %rd28, 0;
	@%p1 bra 	$L__BB26_20;

	cvt.u32.u64 	%r3, %rd1;
	shl.b32 	%r9, %r2, 3;
	mov.u32 	%r10, _ZZ25device_write_kernel_blockPdmmPlE6clocks;
	add.s32 	%r4, %r10, %r9;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r12, %r1, %r11;
	cvt.u64.u32 	%rd2, %r12;
	cvt.u64.u32 	%rd31, %r1;
	add.s64 	%rd3, %rd31, -2;
	add.s32 	%r13, %r1, -1;
	and.b32  	%r5, %r13, 3;
	cvt.u64.u32 	%rd32, %r5;
	not.b64 	%rd33, %rd32;
	add.s64 	%rd4, %rd33, %rd31;
	cvta.to.global.u64 	%rd5, %rd29;
	cvta.to.global.u64 	%rd6, %rd26;
	mov.u64 	%rd57, 0;

$L__BB26_2:
	bar.sync 	0;
	setp.ne.s32 	%p2, %r3, 0;
	@%p2 bra 	$L__BB26_4;

	// begin inline asm
	mov.u64 	%rd34, %clock64;
	// end inline asm
	add.s64 	%rd35, %rd34, 19799997;
	st.shared.u64 	[_ZZ25device_write_kernel_blockPdmmPlE6clocks+8192], %rd35;

$L__BB26_4:
	bar.sync 	0;
	ld.shared.u64 	%rd8, [_ZZ25device_write_kernel_blockPdmmPlE6clocks+8192];

$L__BB26_5:
	// begin inline asm
	mov.u64 	%rd36, %clock64;
	// end inline asm
	setp.lt.s64 	%p3, %rd36, %rd8;
	@%p3 bra 	$L__BB26_5;

	setp.ge.u64 	%p4, %rd1, %rd27;
	@%p4 bra 	$L__BB26_9;

	mov.u64 	%rd58, %rd1;

$L__BB26_8:
	shl.b64 	%rd37, %rd58, 3;
	add.s64 	%rd38, %rd6, %rd37;
	mov.u64 	%rd39, 0;
	st.global.u64 	[%rd38], %rd39;
	add.s64 	%rd58, %rd58, %rd2;
	setp.lt.u64 	%p5, %rd58, %rd27;
	@%p5 bra 	$L__BB26_8;

$L__BB26_9:
	// begin inline asm
	mov.u64 	%rd40, %clock64;
	// end inline asm
	sub.s64 	%rd41, %rd40, %rd8;
	st.shared.u64 	[%r4], %rd41;
	bar.sync 	0;
	@%p2 bra 	$L__BB26_19;

	setp.lt.u32 	%p7, %r1, 2;
	ld.shared.u64 	%rd65, [_ZZ25device_write_kernel_blockPdmmPlE6clocks];
	@%p7 bra 	$L__BB26_18;

	setp.lt.u64 	%p8, %rd3, 3;
	mov.u64 	%rd63, 1;
	@%p8 bra 	$L__BB26_14;

	mov.u64 	%rd63, 1;
	mov.u64 	%rd61, %rd4;

$L__BB26_13:
	cvt.u32.u64 	%r14, %rd63;
	shl.b32 	%r15, %r14, 3;
	add.s32 	%r17, %r10, %r15;
	ld.shared.u64 	%rd45, [%r17];
	max.s64 	%rd46, %rd65, %rd45;
	ld.shared.u64 	%rd47, [%r17+8];
	max.s64 	%rd48, %rd46, %rd47;
	ld.shared.u64 	%rd49, [%r17+16];
	max.s64 	%rd50, %rd48, %rd49;
	ld.shared.u64 	%rd51, [%r17+24];
	max.s64 	%rd65, %rd50, %rd51;
	add.s64 	%rd63, %rd63, 4;
	add.s64 	%rd61, %rd61, -4;
	setp.ne.s64 	%p9, %rd61, 0;
	@%p9 bra 	$L__BB26_13;

$L__BB26_14:
	setp.eq.s32 	%p10, %r5, 0;
	@%p10 bra 	$L__BB26_18;

	setp.eq.s32 	%p11, %r5, 1;
	cvt.u32.u64 	%r18, %rd63;
	shl.b32 	%r19, %r18, 3;
	add.s32 	%r6, %r10, %r19;
	ld.shared.u64 	%rd52, [%r6];
	max.s64 	%rd65, %rd65, %rd52;
	@%p11 bra 	$L__BB26_18;

	setp.eq.s32 	%p12, %r5, 2;
	ld.shared.u64 	%rd53, [%r6+8];
	max.s64 	%rd65, %rd65, %rd53;
	@%p12 bra 	$L__BB26_18;

	ld.shared.u64 	%rd54, [%r6+16];
	max.s64 	%rd65, %rd65, %rd54;

$L__BB26_18:
	shl.b64 	%rd55, %rd57, 3;
	add.s64 	%rd56, %rd5, %rd55;
	st.global.u64 	[%rd56], %rd65;

$L__BB26_19:
	add.s64 	%rd57, %rd57, 1;
	setp.lt.u64 	%p13, %rd57, %rd28;
	@%p13 bra 	$L__BB26_2;

$L__BB26_20:
	ret;

}
	// .globl	_Z24device_copy_kernel_blockPdS_mmPl
.visible .entry _Z24device_copy_kernel_blockPdS_mmPl(
	.param .u64 _Z24device_copy_kernel_blockPdS_mmPl_param_0,
	.param .u64 _Z24device_copy_kernel_blockPdS_mmPl_param_1,
	.param .u64 _Z24device_copy_kernel_blockPdS_mmPl_param_2,
	.param .u64 _Z24device_copy_kernel_blockPdS_mmPl_param_3,
	.param .u64 _Z24device_copy_kernel_blockPdS_mmPl_param_4
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<68>;
	// demoted variable
	.shared .align 8 .b8 _ZZ24device_copy_kernel_blockPdS_mmPlE6clocks[8200];

	ld.param.u64 	%rd27, [_Z24device_copy_kernel_blockPdS_mmPl_param_0];
	ld.param.u64 	%rd28, [_Z24device_copy_kernel_blockPdS_mmPl_param_1];
	ld.param.u64 	%rd29, [_Z24device_copy_kernel_blockPdS_mmPl_param_2];
	ld.param.u64 	%rd30, [_Z24device_copy_kernel_blockPdS_mmPl_param_3];
	ld.param.u64 	%rd31, [_Z24device_copy_kernel_blockPdS_mmPl_param_4];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r7, %ctaid.x;
	mov.u32 	%r2, %tid.x;
	mad.lo.s32 	%r8, %r7, %r1, %r2;
	cvt.u64.u32 	%rd1, %r8;
	setp.eq.s64 	%p1, %rd30, 0;
	@%p1 bra 	$L__BB27_20;

	cvt.u32.u64 	%r3, %rd1;
	shl.b32 	%r9, %r2, 3;
	mov.u32 	%r10, _ZZ24device_copy_kernel_blockPdS_mmPlE6clocks;
	add.s32 	%r4, %r10, %r9;
	mov.u32 	%r11, %nctaid.x;
	mul.lo.s32 	%r12, %r1, %r11;
	cvt.u64.u32 	%rd2, %r12;
	cvt.u64.u32 	%rd33, %r1;
	add.s64 	%rd3, %rd33, -2;
	add.s32 	%r13, %r1, -1;
	and.b32  	%r5, %r13, 3;
	cvt.u64.u32 	%rd34, %r5;
	not.b64 	%rd35, %rd34;
	add.s64 	%rd4, %rd35, %rd33;
	cvta.to.global.u64 	%rd5, %rd31;
	cvta.to.global.u64 	%rd6, %rd27;
	cvta.to.global.u64 	%rd7, %rd28;
	mov.u64 	%rd59, 0;

$L__BB27_2:
	bar.sync 	0;
	setp.ne.s32 	%p2, %r3, 0;
	@%p2 bra 	$L__BB27_4;

	// begin inline asm
	mov.u64 	%rd36, %clock64;
	// end inline asm
	add.s64 	%rd37, %rd36, 19799997;
	st.shared.u64 	[_ZZ24device_copy_kernel_blockPdS_mmPlE6clocks+8192], %rd37;

$L__BB27_4:
	bar.sync 	0;
	ld.shared.u64 	%rd9, [_ZZ24device_copy_kernel_blockPdS_mmPlE6clocks+8192];

$L__BB27_5:
	// begin inline asm
	mov.u64 	%rd38, %clock64;
	// end inline asm
	setp.lt.s64 	%p3, %rd38, %rd9;
	@%p3 bra 	$L__BB27_5;

	setp.ge.u64 	%p4, %rd1, %rd29;
	@%p4 bra 	$L__BB27_9;

	mov.u64 	%rd60, %rd1;

$L__BB27_8:
	shl.b64 	%rd39, %rd60, 3;
	add.s64 	%rd40, %rd6, %rd39;
	ld.global.f64 	%fd1, [%rd40];
	add.s64 	%rd41, %rd7, %rd39;
	st.global.f64 	[%rd41], %fd1;
	add.s64 	%rd60, %rd60, %rd2;
	setp.lt.u64 	%p5, %rd60, %rd29;
	@%p5 bra 	$L__BB27_8;

$L__BB27_9:
	// begin inline asm
	mov.u64 	%rd42, %clock64;
	// end inline asm
	sub.s64 	%rd43, %rd42, %rd9;
	st.shared.u64 	[%r4], %rd43;
	bar.sync 	0;
	@%p2 bra 	$L__BB27_19;

	setp.lt.u32 	%p7, %r1, 2;
	ld.shared.u64 	%rd67, [_ZZ24device_copy_kernel_blockPdS_mmPlE6clocks];
	@%p7 bra 	$L__BB27_18;

	setp.lt.u64 	%p8, %rd3, 3;
	mov.u64 	%rd65, 1;
	@%p8 bra 	$L__BB27_14;

	mov.u64 	%rd65, 1;
	mov.u64 	%rd63, %rd4;

$L__BB27_13:
	cvt.u32.u64 	%r14, %rd65;
	shl.b32 	%r15, %r14, 3;
	add.s32 	%r17, %r10, %r15;
	ld.shared.u64 	%rd47, [%r17];
	max.s64 	%rd48, %rd67, %rd47;
	ld.shared.u64 	%rd49, [%r17+8];
	max.s64 	%rd50, %rd48, %rd49;
	ld.shared.u64 	%rd51, [%r17+16];
	max.s64 	%rd52, %rd50, %rd51;
	ld.shared.u64 	%rd53, [%r17+24];
	max.s64 	%rd67, %rd52, %rd53;
	add.s64 	%rd65, %rd65, 4;
	add.s64 	%rd63, %rd63, -4;
	setp.ne.s64 	%p9, %rd63, 0;
	@%p9 bra 	$L__BB27_13;

$L__BB27_14:
	setp.eq.s32 	%p10, %r5, 0;
	@%p10 bra 	$L__BB27_18;

	setp.eq.s32 	%p11, %r5, 1;
	cvt.u32.u64 	%r18, %rd65;
	shl.b32 	%r19, %r18, 3;
	add.s32 	%r6, %r10, %r19;
	ld.shared.u64 	%rd54, [%r6];
	max.s64 	%rd67, %rd67, %rd54;
	@%p11 bra 	$L__BB27_18;

	setp.eq.s32 	%p12, %r5, 2;
	ld.shared.u64 	%rd55, [%r6+8];
	max.s64 	%rd67, %rd67, %rd55;
	@%p12 bra 	$L__BB27_18;

	ld.shared.u64 	%rd56, [%r6+16];
	max.s64 	%rd67, %rd67, %rd56;

$L__BB27_18:
	shl.b64 	%rd57, %rd59, 3;
	add.s64 	%rd58, %rd5, %rd57;
	st.global.u64 	[%rd58], %rd67;

$L__BB27_19:
	add.s64 	%rd59, %rd59, 1;
	setp.lt.u64 	%p13, %rd59, %rd30;
	@%p13 bra 	$L__BB27_2;

$L__BB27_20:
	ret;

}
	// .globl	_Z25device_read_kernel_singlePmmmPVl
.visible .entry _Z25device_read_kernel_singlePmmmPVl(
	.param .u64 _Z25device_read_kernel_singlePmmmPVl_param_0,
	.param .u64 _Z25device_read_kernel_singlePmmmPVl_param_1,
	.param .u64 _Z25device_read_kernel_singlePmmmPVl_param_2,
	.param .u64 _Z25device_read_kernel_singlePmmmPVl_param_3
)
{
	.local .align 16 .b8 	__local_depot28[80];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b32 	%r<2>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot28;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd44, [_Z25device_read_kernel_singlePmmmPVl_param_0];
	ld.param.u64 	%rd45, [_Z25device_read_kernel_singlePmmmPVl_param_1];
	ld.param.u64 	%rd46, [_Z25device_read_kernel_singlePmmmPVl_param_2];
	ld.param.u64 	%rd47, [_Z25device_read_kernel_singlePmmmPVl_param_3];
	cvta.to.global.u64 	%rd1, %rd47;
	add.u64 	%rd2, %SPL, 0;
	setp.eq.s64 	%p1, %rd46, 0;
	@%p1 bra 	$L__BB28_9;

	add.u64 	%rd51, %SP, 64;
	add.u64 	%rd3, %SPL, 64;
	cvta.to.global.u64 	%rd4, %rd44;
	mov.u64 	%rd82, 0;

$L__BB28_2:
	// begin inline asm
	mov.u64 	%rd52, %clock64;
	// end inline asm
	setp.eq.s64 	%p2, %rd45, 0;
	@%p2 bra 	$L__BB28_6;

	mov.u64 	%rd92, 0;
	mov.u64 	%rd83, %rd4;

$L__BB28_4:
	ld.global.u64 	%rd54, [%rd83];
	xor.b64  	%rd100, %rd100, %rd54;
	ld.global.u64 	%rd55, [%rd83+8];
	xor.b64  	%rd99, %rd99, %rd55;
	ld.global.u64 	%rd56, [%rd83+16];
	xor.b64  	%rd98, %rd98, %rd56;
	ld.global.u64 	%rd57, [%rd83+24];
	xor.b64  	%rd97, %rd97, %rd57;
	ld.global.u64 	%rd58, [%rd83+32];
	xor.b64  	%rd96, %rd96, %rd58;
	ld.global.u64 	%rd59, [%rd83+40];
	xor.b64  	%rd95, %rd95, %rd59;
	ld.global.u64 	%rd60, [%rd83+48];
	xor.b64  	%rd94, %rd94, %rd60;
	ld.global.u64 	%rd61, [%rd83+56];
	xor.b64  	%rd93, %rd93, %rd61;
	add.s64 	%rd83, %rd83, 64;
	add.s64 	%rd92, %rd92, 8;
	setp.lt.u64 	%p3, %rd92, %rd45;
	@%p3 bra 	$L__BB28_4;

	st.local.v2.u64 	[%rd2], {%rd100, %rd99};
	st.local.v2.u64 	[%rd2+16], {%rd98, %rd97};
	st.local.v2.u64 	[%rd2+32], {%rd96, %rd95};
	st.local.v2.u64 	[%rd2+48], {%rd94, %rd93};

$L__BB28_6:
	// begin inline asm
	mov.u64 	%rd62, %clock64;
	// end inline asm
	sub.s64 	%rd63, %rd62, %rd52;
	shl.b64 	%rd64, %rd82, 3;
	add.s64 	%rd65, %rd1, %rd64;
	st.volatile.global.u64 	[%rd65], %rd63;
	ld.volatile.global.u64 	%rd66, [%rd1];
	setp.gt.s64 	%p4, %rd66, 7;
	@%p4 bra 	$L__BB28_8;

	ld.volatile.global.u64 	%rd67, [%rd1];
	shl.b64 	%rd68, %rd67, 3;
	add.s64 	%rd69, %rd2, %rd68;
	ld.local.u64 	%rd70, [%rd69];
	st.local.u64 	[%rd3], %rd70;
	mov.u64 	%rd71, $str$2;
	cvta.global.u64 	%rd72, %rd71;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd72;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r1, [retval0+0];
	} // callseq 4

$L__BB28_8:
	add.s64 	%rd82, %rd82, 1;
	setp.lt.u64 	%p5, %rd82, %rd46;
	@%p5 bra 	$L__BB28_2;

$L__BB28_9:
	ret;

}
	// .globl	_Z26device_write_kernel_singlePdmmPl
.visible .entry _Z26device_write_kernel_singlePdmmPl(
	.param .u64 _Z26device_write_kernel_singlePdmmPl_param_0,
	.param .u64 _Z26device_write_kernel_singlePdmmPl_param_1,
	.param .u64 _Z26device_write_kernel_singlePdmmPl_param_2,
	.param .u64 _Z26device_write_kernel_singlePdmmPl_param_3
)
{
	.reg .pred 	%p<5>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<24>;


	ld.param.u64 	%rd10, [_Z26device_write_kernel_singlePdmmPl_param_0];
	ld.param.u64 	%rd11, [_Z26device_write_kernel_singlePdmmPl_param_1];
	ld.param.u64 	%rd12, [_Z26device_write_kernel_singlePdmmPl_param_2];
	ld.param.u64 	%rd13, [_Z26device_write_kernel_singlePdmmPl_param_3];
	setp.eq.s64 	%p1, %rd12, 0;
	@%p1 bra 	$L__BB29_6;

	cvta.to.global.u64 	%rd1, %rd13;
	cvta.to.global.u64 	%rd2, %rd10;
	mov.u64 	%rd21, 0;

$L__BB29_2:
	// begin inline asm
	mov.u64 	%rd15, %clock64;
	// end inline asm
	setp.eq.s64 	%p2, %rd11, 0;
	@%p2 bra 	$L__BB29_5;

	mov.u64 	%rd23, 0;
	mov.u64 	%rd22, %rd2;

$L__BB29_4:
	cvt.rn.f64.u64 	%fd1, %rd23;
	st.global.f64 	[%rd22], %fd1;
	st.global.f64 	[%rd22+8], %fd1;
	st.global.f64 	[%rd22+16], %fd1;
	st.global.f64 	[%rd22+24], %fd1;
	st.global.f64 	[%rd22+32], %fd1;
	st.global.f64 	[%rd22+40], %fd1;
	st.global.f64 	[%rd22+48], %fd1;
	st.global.f64 	[%rd22+56], %fd1;
	add.s64 	%rd22, %rd22, 64;
	add.s64 	%rd23, %rd23, 8;
	setp.lt.u64 	%p3, %rd23, %rd11;
	@%p3 bra 	$L__BB29_4;

$L__BB29_5:
	// begin inline asm
	mov.u64 	%rd17, %clock64;
	// end inline asm
	sub.s64 	%rd18, %rd17, %rd15;
	shl.b64 	%rd19, %rd21, 3;
	add.s64 	%rd20, %rd1, %rd19;
	st.global.u64 	[%rd20], %rd18;
	add.s64 	%rd21, %rd21, 1;
	setp.lt.u64 	%p4, %rd21, %rd12;
	@%p4 bra 	$L__BB29_2;

$L__BB29_6:
	ret;

}
	// .globl	_Z25device_copy_kernel_singlePdS_mmPl
.visible .entry _Z25device_copy_kernel_singlePdS_mmPl(
	.param .u64 _Z25device_copy_kernel_singlePdS_mmPl_param_0,
	.param .u64 _Z25device_copy_kernel_singlePdS_mmPl_param_1,
	.param .u64 _Z25device_copy_kernel_singlePdS_mmPl_param_2,
	.param .u64 _Z25device_copy_kernel_singlePdS_mmPl_param_3,
	.param .u64 _Z25device_copy_kernel_singlePdS_mmPl_param_4
)
{
	.reg .pred 	%p<5>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<29>;


	ld.param.u64 	%rd13, [_Z25device_copy_kernel_singlePdS_mmPl_param_0];
	ld.param.u64 	%rd14, [_Z25device_copy_kernel_singlePdS_mmPl_param_1];
	ld.param.u64 	%rd15, [_Z25device_copy_kernel_singlePdS_mmPl_param_2];
	ld.param.u64 	%rd16, [_Z25device_copy_kernel_singlePdS_mmPl_param_3];
	ld.param.u64 	%rd17, [_Z25device_copy_kernel_singlePdS_mmPl_param_4];
	setp.eq.s64 	%p1, %rd16, 0;
	@%p1 bra 	$L__BB30_6;

	cvta.to.global.u64 	%rd1, %rd17;
	cvta.to.global.u64 	%rd2, %rd13;
	cvta.to.global.u64 	%rd3, %rd14;
	mov.u64 	%rd25, 0;

$L__BB30_2:
	// begin inline asm
	mov.u64 	%rd19, %clock64;
	// end inline asm
	setp.eq.s64 	%p2, %rd15, 0;
	@%p2 bra 	$L__BB30_5;

	mov.u64 	%rd28, 0;
	mov.u64 	%rd26, %rd2;
	mov.u64 	%rd27, %rd3;

$L__BB30_4:
	ld.global.f64 	%fd1, [%rd26];
	st.global.f64 	[%rd27], %fd1;
	ld.global.f64 	%fd2, [%rd26+8];
	st.global.f64 	[%rd27+8], %fd2;
	ld.global.f64 	%fd3, [%rd26+16];
	st.global.f64 	[%rd27+16], %fd3;
	ld.global.f64 	%fd4, [%rd26+24];
	st.global.f64 	[%rd27+24], %fd4;
	ld.global.f64 	%fd5, [%rd26+32];
	st.global.f64 	[%rd27+32], %fd5;
	ld.global.f64 	%fd6, [%rd26+40];
	st.global.f64 	[%rd27+40], %fd6;
	ld.global.f64 	%fd7, [%rd26+48];
	st.global.f64 	[%rd27+48], %fd7;
	ld.global.f64 	%fd8, [%rd26+56];
	st.global.f64 	[%rd27+56], %fd8;
	add.s64 	%rd27, %rd27, 64;
	add.s64 	%rd26, %rd26, 64;
	add.s64 	%rd28, %rd28, 8;
	setp.lt.u64 	%p3, %rd28, %rd15;
	@%p3 bra 	$L__BB30_4;

$L__BB30_5:
	// begin inline asm
	mov.u64 	%rd21, %clock64;
	// end inline asm
	sub.s64 	%rd22, %rd21, %rd19;
	shl.b64 	%rd23, %rd25, 3;
	add.s64 	%rd24, %rd1, %rd23;
	st.global.u64 	[%rd24], %rd22;
	add.s64 	%rd25, %rd25, 1;
	setp.lt.u64 	%p4, %rd25, %rd16;
	@%p4 bra 	$L__BB30_2;

$L__BB30_6:
	ret;

}
	// .globl	_Z14latency_kernelPhmmPd
.visible .entry _Z14latency_kernelPhmmPd(
	.param .u64 _Z14latency_kernelPhmmPd_param_0,
	.param .u64 _Z14latency_kernelPhmmPd_param_1,
	.param .u64 _Z14latency_kernelPhmmPd_param_2,
	.param .u64 _Z14latency_kernelPhmmPd_param_3
)
{
	.local .align 8 .b8 	__local_depot31[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<93>;


	mov.u64 	%SPL, __local_depot31;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd20, [_Z14latency_kernelPhmmPd_param_0];
	ld.param.u64 	%rd21, [_Z14latency_kernelPhmmPd_param_1];
	ld.param.u64 	%rd22, [_Z14latency_kernelPhmmPd_param_2];
	ld.param.u64 	%rd23, [_Z14latency_kernelPhmmPd_param_3];
	setp.eq.s64 	%p1, %rd22, 0;
	@%p1 bra 	$L__BB31_13;

	shr.u64 	%rd1, %rd21, 3;
	add.s64 	%rd2, %rd1, -1;
	and.b64  	%rd3, %rd1, 3;
	sub.s64 	%rd4, %rd3, %rd1;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	add.u64 	%rd25, %SP, 0;
	add.u64 	%rd5, %SPL, 0;
	cvta.to.global.u64 	%rd6, %rd23;
	mov.u64 	%rd87, 0;

$L__BB31_2:
	// begin inline asm
	mov.u64 	%rd26, %clock64;
	// end inline asm
	setp.eq.s64 	%p2, %rd1, 0;
	mov.u64 	%rd92, %rd20;
	@%p2 bra 	$L__BB31_10;

	setp.lt.u64 	%p3, %rd2, 3;
	mov.u64 	%rd92, %rd20;
	@%p3 bra 	$L__BB31_6;

	mov.u64 	%rd88, %rd4;
	mov.u64 	%rd92, %rd20;

$L__BB31_5:
	ld.u64 	%rd28, [%rd92];
	ld.u64 	%rd29, [%rd28];
	ld.u64 	%rd30, [%rd29];
	ld.u64 	%rd31, [%rd30];
	ld.u64 	%rd32, [%rd31];
	ld.u64 	%rd33, [%rd32];
	ld.u64 	%rd34, [%rd33];
	ld.u64 	%rd35, [%rd34];
	ld.u64 	%rd36, [%rd35];
	ld.u64 	%rd37, [%rd36];
	ld.u64 	%rd38, [%rd37];
	ld.u64 	%rd39, [%rd38];
	ld.u64 	%rd40, [%rd39];
	ld.u64 	%rd41, [%rd40];
	ld.u64 	%rd42, [%rd41];
	ld.u64 	%rd43, [%rd42];
	ld.u64 	%rd44, [%rd43];
	ld.u64 	%rd45, [%rd44];
	ld.u64 	%rd46, [%rd45];
	ld.u64 	%rd47, [%rd46];
	ld.u64 	%rd48, [%rd47];
	ld.u64 	%rd49, [%rd48];
	ld.u64 	%rd50, [%rd49];
	ld.u64 	%rd51, [%rd50];
	ld.u64 	%rd52, [%rd51];
	ld.u64 	%rd53, [%rd52];
	ld.u64 	%rd54, [%rd53];
	ld.u64 	%rd55, [%rd54];
	ld.u64 	%rd56, [%rd55];
	ld.u64 	%rd57, [%rd56];
	ld.u64 	%rd58, [%rd57];
	ld.u64 	%rd92, [%rd58];
	add.s64 	%rd88, %rd88, 4;
	setp.ne.s64 	%p4, %rd88, 0;
	@%p4 bra 	$L__BB31_5;

$L__BB31_6:
	setp.eq.s64 	%p5, %rd3, 0;
	@%p5 bra 	$L__BB31_10;

	setp.eq.s64 	%p6, %rd3, 1;
	ld.u64 	%rd59, [%rd92];
	ld.u64 	%rd60, [%rd59];
	ld.u64 	%rd61, [%rd60];
	ld.u64 	%rd62, [%rd61];
	ld.u64 	%rd63, [%rd62];
	ld.u64 	%rd64, [%rd63];
	ld.u64 	%rd65, [%rd64];
	ld.u64 	%rd92, [%rd65];
	@%p6 bra 	$L__BB31_10;

	setp.eq.s64 	%p7, %rd3, 2;
	ld.u64 	%rd66, [%rd92];
	ld.u64 	%rd67, [%rd66];
	ld.u64 	%rd68, [%rd67];
	ld.u64 	%rd69, [%rd68];
	ld.u64 	%rd70, [%rd69];
	ld.u64 	%rd71, [%rd70];
	ld.u64 	%rd72, [%rd71];
	ld.u64 	%rd92, [%rd72];
	@%p7 bra 	$L__BB31_10;

	ld.u64 	%rd73, [%rd92];
	ld.u64 	%rd74, [%rd73];
	ld.u64 	%rd75, [%rd74];
	ld.u64 	%rd76, [%rd75];
	ld.u64 	%rd77, [%rd76];
	ld.u64 	%rd78, [%rd77];
	ld.u64 	%rd79, [%rd78];
	ld.u64 	%rd92, [%rd79];

$L__BB31_10:
	// begin inline asm
	mov.u64 	%rd80, %clock64;
	// end inline asm
	sub.s64 	%rd81, %rd80, %rd26;
	cvt.rn.f64.s64 	%fd1, %rd81;
	shl.b64 	%rd82, %rd87, 3;
	add.s64 	%rd83, %rd6, %rd82;
	st.global.f64 	[%rd83], %fd1;
	setp.lt.s32 	%p8, %r1, 2;
	@%p8 bra 	$L__BB31_12;

	ld.u8 	%r5, [%rd92];
	st.local.u32 	[%rd5], %r5;
	mov.u64 	%rd84, $str$5;
	cvta.global.u64 	%rd85, %rd84;
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd25;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r6, [retval0+0];
	} // callseq 5

$L__BB31_12:
	add.s64 	%rd87, %rd87, 1;
	setp.lt.u64 	%p9, %rd87, %rd22;
	@%p9 bra 	$L__BB31_2;

$L__BB31_13:
	ret;

}
	// .globl	_Z20latency_write_kernelPhmmPd
.visible .entry _Z20latency_write_kernelPhmmPd(
	.param .u64 _Z20latency_write_kernelPhmmPd_param_0,
	.param .u64 _Z20latency_write_kernelPhmmPd_param_1,
	.param .u64 _Z20latency_write_kernelPhmmPd_param_2,
	.param .u64 _Z20latency_write_kernelPhmmPd_param_3
)
{
	.local .align 8 .b8 	__local_depot32[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<10>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<98>;


	mov.u64 	%SPL, __local_depot32;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd22, [_Z20latency_write_kernelPhmmPd_param_0];
	ld.param.u64 	%rd23, [_Z20latency_write_kernelPhmmPd_param_1];
	ld.param.u64 	%rd24, [_Z20latency_write_kernelPhmmPd_param_2];
	ld.param.u64 	%rd25, [_Z20latency_write_kernelPhmmPd_param_3];
	setp.eq.s64 	%p1, %rd24, 0;
	@%p1 bra 	$L__BB32_13;

	shr.u64 	%rd1, %rd23, 3;
	add.s64 	%rd2, %rd1, -1;
	and.b64  	%rd3, %rd1, 3;
	sub.s64 	%rd4, %rd1, %rd3;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r2;
	cvta.to.global.u64 	%rd6, %rd25;
	mov.u64 	%rd92, 0;

$L__BB32_2:
	// begin inline asm
	mov.u64 	%rd28, %clock64;
	// end inline asm
	setp.eq.s64 	%p2, %rd1, 0;
	mov.u64 	%rd97, %rd22;
	@%p2 bra 	$L__BB32_10;

	setp.lt.u64 	%p3, %rd2, 3;
	mov.u64 	%rd97, %rd22;
	@%p3 bra 	$L__BB32_6;

	mov.u64 	%rd97, %rd22;
	mov.u64 	%rd94, %rd4;

$L__BB32_5:
	ld.u64 	%rd30, [%rd97];
	st.u64 	[%rd30+8], %rd24;
	ld.u64 	%rd31, [%rd30];
	st.u64 	[%rd31+8], %rd24;
	ld.u64 	%rd32, [%rd31];
	st.u64 	[%rd32+8], %rd24;
	ld.u64 	%rd33, [%rd32];
	st.u64 	[%rd33+8], %rd24;
	ld.u64 	%rd34, [%rd33];
	st.u64 	[%rd34+8], %rd24;
	ld.u64 	%rd35, [%rd34];
	st.u64 	[%rd35+8], %rd24;
	ld.u64 	%rd36, [%rd35];
	st.u64 	[%rd36+8], %rd24;
	ld.u64 	%rd37, [%rd36];
	st.u64 	[%rd37+8], %rd24;
	ld.u64 	%rd38, [%rd37];
	st.u64 	[%rd38+8], %rd24;
	ld.u64 	%rd39, [%rd38];
	st.u64 	[%rd39+8], %rd24;
	ld.u64 	%rd40, [%rd39];
	st.u64 	[%rd40+8], %rd24;
	ld.u64 	%rd41, [%rd40];
	st.u64 	[%rd41+8], %rd24;
	ld.u64 	%rd42, [%rd41];
	st.u64 	[%rd42+8], %rd24;
	ld.u64 	%rd43, [%rd42];
	st.u64 	[%rd43+8], %rd24;
	ld.u64 	%rd44, [%rd43];
	st.u64 	[%rd44+8], %rd24;
	ld.u64 	%rd45, [%rd44];
	st.u64 	[%rd45+8], %rd24;
	ld.u64 	%rd46, [%rd45];
	st.u64 	[%rd46+8], %rd24;
	ld.u64 	%rd47, [%rd46];
	st.u64 	[%rd47+8], %rd24;
	ld.u64 	%rd48, [%rd47];
	st.u64 	[%rd48+8], %rd24;
	ld.u64 	%rd49, [%rd48];
	st.u64 	[%rd49+8], %rd24;
	ld.u64 	%rd50, [%rd49];
	st.u64 	[%rd50+8], %rd24;
	ld.u64 	%rd51, [%rd50];
	st.u64 	[%rd51+8], %rd24;
	ld.u64 	%rd52, [%rd51];
	st.u64 	[%rd52+8], %rd24;
	ld.u64 	%rd53, [%rd52];
	st.u64 	[%rd53+8], %rd24;
	ld.u64 	%rd54, [%rd53];
	st.u64 	[%rd54+8], %rd24;
	ld.u64 	%rd55, [%rd54];
	st.u64 	[%rd55+8], %rd24;
	ld.u64 	%rd56, [%rd55];
	st.u64 	[%rd56+8], %rd24;
	ld.u64 	%rd57, [%rd56];
	st.u64 	[%rd57+8], %rd24;
	ld.u64 	%rd58, [%rd57];
	st.u64 	[%rd58+8], %rd24;
	ld.u64 	%rd59, [%rd58];
	st.u64 	[%rd59+8], %rd24;
	ld.u64 	%rd60, [%rd59];
	st.u64 	[%rd60+8], %rd24;
	ld.u64 	%rd97, [%rd60];
	st.u64 	[%rd97+8], %rd24;
	add.s64 	%rd94, %rd94, -4;
	setp.ne.s64 	%p4, %rd94, 0;
	@%p4 bra 	$L__BB32_5;

$L__BB32_6:
	setp.eq.s64 	%p5, %rd3, 0;
	@%p5 bra 	$L__BB32_10;

	setp.eq.s64 	%p6, %rd3, 1;
	ld.u64 	%rd61, [%rd97];
	st.u64 	[%rd61+8], %rd24;
	ld.u64 	%rd62, [%rd61];
	st.u64 	[%rd62+8], %rd24;
	ld.u64 	%rd63, [%rd62];
	st.u64 	[%rd63+8], %rd24;
	ld.u64 	%rd64, [%rd63];
	st.u64 	[%rd64+8], %rd24;
	ld.u64 	%rd65, [%rd64];
	st.u64 	[%rd65+8], %rd24;
	ld.u64 	%rd66, [%rd65];
	st.u64 	[%rd66+8], %rd24;
	ld.u64 	%rd67, [%rd66];
	st.u64 	[%rd67+8], %rd24;
	ld.u64 	%rd97, [%rd67];
	st.u64 	[%rd97+8], %rd24;
	@%p6 bra 	$L__BB32_10;

	setp.eq.s64 	%p7, %rd3, 2;
	ld.u64 	%rd68, [%rd97];
	st.u64 	[%rd68+8], %rd24;
	ld.u64 	%rd69, [%rd68];
	st.u64 	[%rd69+8], %rd24;
	ld.u64 	%rd70, [%rd69];
	st.u64 	[%rd70+8], %rd24;
	ld.u64 	%rd71, [%rd70];
	st.u64 	[%rd71+8], %rd24;
	ld.u64 	%rd72, [%rd71];
	st.u64 	[%rd72+8], %rd24;
	ld.u64 	%rd73, [%rd72];
	st.u64 	[%rd73+8], %rd24;
	ld.u64 	%rd74, [%rd73];
	st.u64 	[%rd74+8], %rd24;
	ld.u64 	%rd97, [%rd74];
	st.u64 	[%rd97+8], %rd24;
	@%p7 bra 	$L__BB32_10;

	ld.u64 	%rd75, [%rd97];
	st.u64 	[%rd75+8], %rd24;
	ld.u64 	%rd76, [%rd75];
	st.u64 	[%rd76+8], %rd24;
	ld.u64 	%rd77, [%rd76];
	st.u64 	[%rd77+8], %rd24;
	ld.u64 	%rd78, [%rd77];
	st.u64 	[%rd78+8], %rd24;
	ld.u64 	%rd79, [%rd78];
	st.u64 	[%rd79+8], %rd24;
	ld.u64 	%rd80, [%rd79];
	st.u64 	[%rd80+8], %rd24;
	ld.u64 	%rd81, [%rd80];
	st.u64 	[%rd81+8], %rd24;
	ld.u64 	%rd97, [%rd81];
	st.u64 	[%rd97+8], %rd24;

$L__BB32_10:
	// begin inline asm
	mov.u64 	%rd82, %clock64;
	// end inline asm
	sub.s64 	%rd83, %rd82, %rd28;
	cvt.rn.f64.s64 	%fd1, %rd83;
	shl.b64 	%rd84, %rd92, 3;
	add.s64 	%rd85, %rd6, %rd84;
	st.global.f64 	[%rd85], %fd1;
	setp.lt.s32 	%p8, %r1, 2;
	@%p8 bra 	$L__BB32_12;

	add.u64 	%rd91, %SP, 0;
	add.u64 	%rd90, %SP, 0;
	add.u64 	%rd89, %SPL, 0;
	ld.u8 	%r5, [%rd97];
	st.local.u32 	[%rd89], %r5;
	mov.u64 	%rd86, $str$5;
	cvta.global.u64 	%rd87, %rd86;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd90;
	.param .b32 retval0;
	call.uni (retval0), 
	vprintf, 
	(
	param0, 
	param1
	);
	ld.param.b32 	%r6, [retval0+0];
	} // callseq 6

$L__BB32_12:
	add.s64 	%rd92, %rd92, 1;
	setp.lt.u64 	%p9, %rd92, %rd24;
	@%p9 bra 	$L__BB32_2;

$L__BB32_13:
	ret;

}
	// .globl	_Z12cache_kernelPm
.visible .entry _Z12cache_kernelPm(
	.param .u64 _Z12cache_kernelPm_param_0
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<17>;
	.reg .b64 	%rd<133>;


	ld.param.u64 	%rd1, [_Z12cache_kernelPm_param_0];
	mov.u32 	%r7, %ctaid.x;
	shl.b32 	%r8, %r7, 10;
	mov.u32 	%r9, %tid.x;
	add.s32 	%r16, %r8, %r9;
	mov.u32 	%r15, 0;

$L__BB33_1:
	mul.wide.s32 	%rd130, %r16, 8;
	add.s64 	%rd3, %rd1, %rd130;
	// begin inline asm
	ld.ca.u64 %rd2, [%rd3];
	// end inline asm
	xor.b64  	%rd5, %rd2, %rd3;
	// begin inline asm
	ld.ca.u64 %rd4, [%rd5];
	// end inline asm
	xor.b64  	%rd7, %rd4, %rd5;
	// begin inline asm
	ld.ca.u64 %rd6, [%rd7];
	// end inline asm
	xor.b64  	%rd9, %rd6, %rd7;
	// begin inline asm
	ld.ca.u64 %rd8, [%rd9];
	// end inline asm
	xor.b64  	%rd11, %rd8, %rd9;
	// begin inline asm
	ld.ca.u64 %rd10, [%rd11];
	// end inline asm
	xor.b64  	%rd13, %rd10, %rd11;
	// begin inline asm
	ld.ca.u64 %rd12, [%rd13];
	// end inline asm
	xor.b64  	%rd15, %rd12, %rd13;
	// begin inline asm
	ld.ca.u64 %rd14, [%rd15];
	// end inline asm
	xor.b64  	%rd17, %rd14, %rd15;
	// begin inline asm
	ld.ca.u64 %rd16, [%rd17];
	// end inline asm
	xor.b64  	%rd19, %rd16, %rd17;
	// begin inline asm
	ld.ca.u64 %rd18, [%rd19];
	// end inline asm
	xor.b64  	%rd21, %rd18, %rd19;
	// begin inline asm
	ld.ca.u64 %rd20, [%rd21];
	// end inline asm
	xor.b64  	%rd23, %rd20, %rd21;
	// begin inline asm
	ld.ca.u64 %rd22, [%rd23];
	// end inline asm
	xor.b64  	%rd25, %rd22, %rd23;
	// begin inline asm
	ld.ca.u64 %rd24, [%rd25];
	// end inline asm
	xor.b64  	%rd27, %rd24, %rd25;
	// begin inline asm
	ld.ca.u64 %rd26, [%rd27];
	// end inline asm
	xor.b64  	%rd29, %rd26, %rd27;
	// begin inline asm
	ld.ca.u64 %rd28, [%rd29];
	// end inline asm
	xor.b64  	%rd31, %rd28, %rd29;
	// begin inline asm
	ld.ca.u64 %rd30, [%rd31];
	// end inline asm
	xor.b64  	%rd33, %rd30, %rd31;
	// begin inline asm
	ld.ca.u64 %rd32, [%rd33];
	// end inline asm
	xor.b64  	%rd35, %rd32, %rd33;
	// begin inline asm
	ld.ca.u64 %rd34, [%rd35];
	// end inline asm
	xor.b64  	%rd37, %rd34, %rd35;
	// begin inline asm
	ld.ca.u64 %rd36, [%rd37];
	// end inline asm
	xor.b64  	%rd39, %rd36, %rd37;
	// begin inline asm
	ld.ca.u64 %rd38, [%rd39];
	// end inline asm
	xor.b64  	%rd41, %rd38, %rd39;
	// begin inline asm
	ld.ca.u64 %rd40, [%rd41];
	// end inline asm
	xor.b64  	%rd43, %rd40, %rd41;
	// begin inline asm
	ld.ca.u64 %rd42, [%rd43];
	// end inline asm
	xor.b64  	%rd45, %rd42, %rd43;
	// begin inline asm
	ld.ca.u64 %rd44, [%rd45];
	// end inline asm
	xor.b64  	%rd47, %rd44, %rd45;
	// begin inline asm
	ld.ca.u64 %rd46, [%rd47];
	// end inline asm
	xor.b64  	%rd49, %rd46, %rd47;
	// begin inline asm
	ld.ca.u64 %rd48, [%rd49];
	// end inline asm
	xor.b64  	%rd51, %rd48, %rd49;
	// begin inline asm
	ld.ca.u64 %rd50, [%rd51];
	// end inline asm
	xor.b64  	%rd53, %rd50, %rd51;
	// begin inline asm
	ld.ca.u64 %rd52, [%rd53];
	// end inline asm
	xor.b64  	%rd55, %rd52, %rd53;
	// begin inline asm
	ld.ca.u64 %rd54, [%rd55];
	// end inline asm
	xor.b64  	%rd57, %rd54, %rd55;
	// begin inline asm
	ld.ca.u64 %rd56, [%rd57];
	// end inline asm
	xor.b64  	%rd59, %rd56, %rd57;
	// begin inline asm
	ld.ca.u64 %rd58, [%rd59];
	// end inline asm
	xor.b64  	%rd61, %rd58, %rd59;
	// begin inline asm
	ld.ca.u64 %rd60, [%rd61];
	// end inline asm
	xor.b64  	%rd63, %rd60, %rd61;
	// begin inline asm
	ld.ca.u64 %rd62, [%rd63];
	// end inline asm
	xor.b64  	%rd65, %rd62, %rd63;
	// begin inline asm
	ld.ca.u64 %rd64, [%rd65];
	// end inline asm
	xor.b64  	%rd67, %rd64, %rd65;
	// begin inline asm
	ld.ca.u64 %rd66, [%rd67];
	// end inline asm
	xor.b64  	%rd69, %rd66, %rd67;
	// begin inline asm
	ld.ca.u64 %rd68, [%rd69];
	// end inline asm
	xor.b64  	%rd71, %rd68, %rd69;
	// begin inline asm
	ld.ca.u64 %rd70, [%rd71];
	// end inline asm
	xor.b64  	%rd73, %rd70, %rd71;
	// begin inline asm
	ld.ca.u64 %rd72, [%rd73];
	// end inline asm
	xor.b64  	%rd75, %rd72, %rd73;
	// begin inline asm
	ld.ca.u64 %rd74, [%rd75];
	// end inline asm
	xor.b64  	%rd77, %rd74, %rd75;
	// begin inline asm
	ld.ca.u64 %rd76, [%rd77];
	// end inline asm
	xor.b64  	%rd79, %rd76, %rd77;
	// begin inline asm
	ld.ca.u64 %rd78, [%rd79];
	// end inline asm
	xor.b64  	%rd81, %rd78, %rd79;
	// begin inline asm
	ld.ca.u64 %rd80, [%rd81];
	// end inline asm
	xor.b64  	%rd83, %rd80, %rd81;
	// begin inline asm
	ld.ca.u64 %rd82, [%rd83];
	// end inline asm
	xor.b64  	%rd85, %rd82, %rd83;
	// begin inline asm
	ld.ca.u64 %rd84, [%rd85];
	// end inline asm
	xor.b64  	%rd87, %rd84, %rd85;
	// begin inline asm
	ld.ca.u64 %rd86, [%rd87];
	// end inline asm
	xor.b64  	%rd89, %rd86, %rd87;
	// begin inline asm
	ld.ca.u64 %rd88, [%rd89];
	// end inline asm
	xor.b64  	%rd91, %rd88, %rd89;
	// begin inline asm
	ld.ca.u64 %rd90, [%rd91];
	// end inline asm
	xor.b64  	%rd93, %rd90, %rd91;
	// begin inline asm
	ld.ca.u64 %rd92, [%rd93];
	// end inline asm
	xor.b64  	%rd95, %rd92, %rd93;
	// begin inline asm
	ld.ca.u64 %rd94, [%rd95];
	// end inline asm
	xor.b64  	%rd97, %rd94, %rd95;
	// begin inline asm
	ld.ca.u64 %rd96, [%rd97];
	// end inline asm
	xor.b64  	%rd99, %rd96, %rd97;
	// begin inline asm
	ld.ca.u64 %rd98, [%rd99];
	// end inline asm
	xor.b64  	%rd101, %rd98, %rd99;
	// begin inline asm
	ld.ca.u64 %rd100, [%rd101];
	// end inline asm
	xor.b64  	%rd103, %rd100, %rd101;
	// begin inline asm
	ld.ca.u64 %rd102, [%rd103];
	// end inline asm
	xor.b64  	%rd105, %rd102, %rd103;
	// begin inline asm
	ld.ca.u64 %rd104, [%rd105];
	// end inline asm
	xor.b64  	%rd107, %rd104, %rd105;
	// begin inline asm
	ld.ca.u64 %rd106, [%rd107];
	// end inline asm
	xor.b64  	%rd109, %rd106, %rd107;
	// begin inline asm
	ld.ca.u64 %rd108, [%rd109];
	// end inline asm
	xor.b64  	%rd111, %rd108, %rd109;
	// begin inline asm
	ld.ca.u64 %rd110, [%rd111];
	// end inline asm
	xor.b64  	%rd113, %rd110, %rd111;
	// begin inline asm
	ld.ca.u64 %rd112, [%rd113];
	// end inline asm
	xor.b64  	%rd115, %rd112, %rd113;
	// begin inline asm
	ld.ca.u64 %rd114, [%rd115];
	// end inline asm
	xor.b64  	%rd117, %rd114, %rd115;
	// begin inline asm
	ld.ca.u64 %rd116, [%rd117];
	// end inline asm
	xor.b64  	%rd119, %rd116, %rd117;
	// begin inline asm
	ld.ca.u64 %rd118, [%rd119];
	// end inline asm
	xor.b64  	%rd121, %rd118, %rd119;
	// begin inline asm
	ld.ca.u64 %rd120, [%rd121];
	// end inline asm
	xor.b64  	%rd123, %rd120, %rd121;
	// begin inline asm
	ld.ca.u64 %rd122, [%rd123];
	// end inline asm
	xor.b64  	%rd125, %rd122, %rd123;
	// begin inline asm
	ld.ca.u64 %rd124, [%rd125];
	// end inline asm
	xor.b64  	%rd127, %rd124, %rd125;
	// begin inline asm
	ld.ca.u64 %rd126, [%rd127];
	// end inline asm
	xor.b64  	%rd129, %rd126, %rd127;
	// begin inline asm
	ld.ca.u64 %rd128, [%rd129];
	// end inline asm
	cvt.u32.u64 	%r10, %rd128;
	add.s32 	%r16, %r16, %r10;
	add.s32 	%r15, %r15, 1;
	setp.ne.s32 	%p1, %r15, 8192;
	@%p1 bra 	$L__BB33_1;

	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r13, %tid.x;
	shl.b32 	%r12, %r14, 10;
	add.s32 	%r11, %r12, %r13;
	setp.eq.s32 	%p2, %r16, %r11;
	@%p2 bra 	$L__BB33_4;

	cvta.to.global.u64 	%rd131, %rd1;
	cvt.s64.s32 	%rd132, %r16;
	st.global.u64 	[%rd131], %rd132;

$L__BB33_4:
	ret;

}
	// .globl	_Z11stream_copyIdEvPT_S1_m
.visible .entry _Z11stream_copyIdEvPT_S1_m(
	.param .u64 _Z11stream_copyIdEvPT_S1_m_param_0,
	.param .u64 _Z11stream_copyIdEvPT_S1_m_param_1,
	.param .u64 _Z11stream_copyIdEvPT_S1_m_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<10>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd6, [_Z11stream_copyIdEvPT_S1_m_param_0];
	ld.param.u64 	%rd7, [_Z11stream_copyIdEvPT_S1_m_param_1];
	ld.param.u64 	%rd8, [_Z11stream_copyIdEvPT_S1_m_param_2];
	mov.u32 	%r1, %ntid.x;
	mov.u32 	%r6, %ctaid.x;
	mov.u32 	%r7, %tid.x;
	mad.lo.s32 	%r9, %r6, %r1, %r7;
	cvt.u64.u32 	%rd12, %r9;
	setp.ge.u64 	%p1, %rd12, %rd8;
	@%p1 bra 	$L__BB34_3;

	mov.u32 	%r8, %nctaid.x;
	mul.lo.s32 	%r3, %r1, %r8;
	cvta.to.global.u64 	%rd2, %rd7;
	cvta.to.global.u64 	%rd3, %rd6;

$L__BB34_2:
	shl.b64 	%rd9, %rd12, 3;
	add.s64 	%rd10, %rd2, %rd9;
	ld.global.f64 	%fd1, [%rd10];
	add.s64 	%rd11, %rd3, %rd9;
	st.global.f64 	[%rd11], %fd1;
	add.s32 	%r9, %r9, %r3;
	cvt.u64.u32 	%rd12, %r9;
	setp.lt.u64 	%p2, %rd12, %rd8;
	@%p2 bra 	$L__BB34_2;

$L__BB34_3:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS11EmptyKernelIvEEvv
.visible .entry _ZN3cub17CUB_200200_900_NS11EmptyKernelIvEEvv()
{



	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_
.visible .entry _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_(
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_1,
	.param .u32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_2,
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_3[1],
	.param .f32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_4
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<97>;
	.reg .f32 	%f<417>;
	.reg .b32 	%r<455>;
	.reg .b64 	%rd<125>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage[44];

	ld.param.u64 	%rd14, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_0];
	ld.param.u64 	%rd15, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_1];
	ld.param.u32 	%r74, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_2];
	ld.param.f32 	%f56, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4__param_4];
	setp.eq.s32 	%p1, %r74, 0;
	@%p1 bra 	$L__BB36_72;

	and.b64  	%rd16, %rd14, 15;
	setp.eq.s64 	%p2, %rd16, 0;
	mov.u32 	%r454, %tid.x;
	@%p2 bra 	$L__BB36_36;

	setp.lt.u32 	%p3, %r74, 4096;
	@%p3 bra 	$L__BB36_19;
	bra.uni 	$L__BB36_3;

$L__BB36_19:
	setp.ge.s32 	%p20, %r454, %r74;
	mov.f32 	%f402, 0f00000000;
	mov.u32 	%r438, %r454;
	@%p20 bra 	$L__BB36_21;

	mul.wide.u32 	%rd64, %r454, 4;
	add.s64 	%rd63, %rd14, %rd64;
	// begin inline asm
	ld.global.nc.u32 %r162, [%rd63];
	// end inline asm
	mov.b32 	%f402, %r162;
	add.s32 	%r438, %r454, 256;

$L__BB36_21:
	setp.ge.s32 	%p21, %r438, %r74;
	@%p21 bra 	$L__BB36_26;

	not.b32 	%r163, %r438;
	add.s32 	%r29, %r163, %r74;
	shr.u32 	%r164, %r29, 8;
	add.s32 	%r165, %r164, 1;
	and.b32  	%r437, %r165, 3;
	setp.eq.s32 	%p22, %r437, 0;
	@%p22 bra 	$L__BB36_24;

$L__BB36_23:
	.pragma "nounroll";
	mul.wide.u32 	%rd66, %r438, 4;
	add.s64 	%rd65, %rd14, %rd66;
	// begin inline asm
	ld.global.nc.u32 %r166, [%rd65];
	// end inline asm
	mov.b32 	%f156, %r166;
	add.f32 	%f402, %f402, %f156;
	add.s32 	%r438, %r438, 256;
	add.s32 	%r437, %r437, -1;
	setp.ne.s32 	%p23, %r437, 0;
	@%p23 bra 	$L__BB36_23;

$L__BB36_24:
	setp.lt.u32 	%p24, %r29, 768;
	@%p24 bra 	$L__BB36_26;

$L__BB36_25:
	mul.wide.u32 	%rd71, %r438, 4;
	add.s64 	%rd67, %rd14, %rd71;
	// begin inline asm
	ld.global.nc.u32 %r167, [%rd67];
	// end inline asm
	mov.b32 	%f157, %r167;
	add.f32 	%f158, %f402, %f157;
	add.s32 	%r171, %r438, 256;
	mul.wide.u32 	%rd72, %r171, 4;
	add.s64 	%rd68, %rd14, %rd72;
	// begin inline asm
	ld.global.nc.u32 %r168, [%rd68];
	// end inline asm
	mov.b32 	%f159, %r168;
	add.f32 	%f160, %f158, %f159;
	add.s32 	%r172, %r438, 512;
	mul.wide.u32 	%rd73, %r172, 4;
	add.s64 	%rd69, %rd14, %rd73;
	// begin inline asm
	ld.global.nc.u32 %r169, [%rd69];
	// end inline asm
	mov.b32 	%f161, %r169;
	add.f32 	%f162, %f160, %f161;
	add.s32 	%r173, %r438, 768;
	mul.wide.u32 	%rd74, %r173, 4;
	add.s64 	%rd70, %rd14, %rd74;
	// begin inline asm
	ld.global.nc.u32 %r170, [%rd70];
	// end inline asm
	mov.b32 	%f163, %r170;
	add.f32 	%f402, %f162, %f163;
	add.s32 	%r438, %r438, 1024;
	setp.lt.s32 	%p25, %r438, %r74;
	@%p25 bra 	$L__BB36_25;

$L__BB36_26:
	setp.gt.s32 	%p26, %r74, 255;
	@%p26 bra 	$L__BB36_32;
	bra.uni 	$L__BB36_27;

$L__BB36_32:
	// begin inline asm
	mov.u32 %r217, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r218, %laneid;
	// end inline asm
	mov.b32 	%r220, %f402;
	mov.u32 	%r221, 1;
	mov.u32 	%r242, 31;
	mov.u32 	%r243, -1;
	// begin inline asm
	shfl.sync.down.b32 %r219, %r220, %r221, %r242, %r243;
	// end inline asm
	setp.gt.s32 	%p42, %r218, 30;
	mov.b32 	%f196, %r219;
	add.f32 	%f197, %f402, %f196;
	selp.f32 	%f198, %f402, %f197, %p42;
	mov.b32 	%r225, %f198;
	mov.u32 	%r226, 2;
	// begin inline asm
	shfl.sync.down.b32 %r224, %r225, %r226, %r242, %r243;
	// end inline asm
	setp.gt.s32 	%p43, %r218, 29;
	mov.b32 	%f199, %r224;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r230, %f201;
	mov.u32 	%r231, 4;
	// begin inline asm
	shfl.sync.down.b32 %r229, %r230, %r231, %r242, %r243;
	// end inline asm
	setp.gt.s32 	%p44, %r218, 27;
	mov.b32 	%f202, %r229;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r235, %f204;
	mov.u32 	%r236, 8;
	// begin inline asm
	shfl.sync.down.b32 %r234, %r235, %r236, %r242, %r243;
	// end inline asm
	setp.gt.s32 	%p45, %r218, 23;
	mov.b32 	%f205, %r234;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f207, %f204, %f206, %p45;
	mov.b32 	%r240, %f207;
	mov.u32 	%r241, 16;
	// begin inline asm
	shfl.sync.down.b32 %r239, %r240, %r241, %r242, %r243;
	// end inline asm
	setp.gt.s32 	%p46, %r218, 15;
	mov.b32 	%f208, %r239;
	add.f32 	%f209, %f207, %f208;
	selp.f32 	%f416, %f207, %f209, %p46;
	setp.ne.s32 	%p47, %r217, 0;
	@%p47 bra 	$L__BB36_34;

	shr.s32 	%r244, %r454, 31;
	shr.u32 	%r245, %r244, 27;
	add.s32 	%r246, %r454, %r245;
	shr.s32 	%r247, %r246, 5;
	shl.b32 	%r248, %r247, 2;
	mov.u32 	%r249, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r250, %r249, %r248;
	st.shared.f32 	[%r250+8], %f416;

$L__BB36_34:
	bar.sync 	0;
	setp.ne.s32 	%p48, %r454, 0;
	@%p48 bra 	$L__BB36_70;

	mov.u32 	%r454, 0;
	ld.shared.f32 	%f210, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f211, %f416, %f210;
	ld.shared.f32 	%f212, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f213, %f211, %f212;
	ld.shared.f32 	%f214, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f215, %f213, %f214;
	ld.shared.f32 	%f216, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f217, %f215, %f216;
	ld.shared.f32 	%f218, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f219, %f217, %f218;
	ld.shared.f32 	%f220, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f221, %f219, %f220;
	ld.shared.f32 	%f222, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f221, %f222;
	bra.uni 	$L__BB36_70;

$L__BB36_72:
	mov.u32 	%r425, %tid.x;
	setp.ne.s32 	%p96, %r425, 0;
	@%p96 bra 	$L__BB36_74;

	cvta.to.global.u64 	%rd124, %rd15;
	st.global.f32 	[%rd124], %f56;
	bra.uni 	$L__BB36_74;

$L__BB36_36:
	setp.lt.u32 	%p49, %r74, 4096;
	@%p49 bra 	$L__BB36_53;
	bra.uni 	$L__BB36_37;

$L__BB36_53:
	setp.ge.s32 	%p66, %r454, %r74;
	mov.f32 	%f415, 0f00000000;
	mov.u32 	%r452, %r454;
	@%p66 bra 	$L__BB36_55;

	mul.wide.u32 	%rd112, %r454, 4;
	add.s64 	%rd111, %rd14, %rd112;
	// begin inline asm
	ld.global.nc.u32 %r335, [%rd111];
	// end inline asm
	mov.b32 	%f415, %r335;
	add.s32 	%r452, %r454, 256;

$L__BB36_55:
	setp.ge.s32 	%p67, %r452, %r74;
	@%p67 bra 	$L__BB36_60;

	not.b32 	%r336, %r452;
	add.s32 	%r63, %r336, %r74;
	shr.u32 	%r337, %r63, 8;
	add.s32 	%r338, %r337, 1;
	and.b32  	%r451, %r338, 3;
	setp.eq.s32 	%p68, %r451, 0;
	@%p68 bra 	$L__BB36_58;

$L__BB36_57:
	.pragma "nounroll";
	mul.wide.u32 	%rd114, %r452, 4;
	add.s64 	%rd113, %rd14, %rd114;
	// begin inline asm
	ld.global.nc.u32 %r339, [%rd113];
	// end inline asm
	mov.b32 	%f322, %r339;
	add.f32 	%f415, %f415, %f322;
	add.s32 	%r452, %r452, 256;
	add.s32 	%r451, %r451, -1;
	setp.ne.s32 	%p69, %r451, 0;
	@%p69 bra 	$L__BB36_57;

$L__BB36_58:
	setp.lt.u32 	%p70, %r63, 768;
	@%p70 bra 	$L__BB36_60;

$L__BB36_59:
	mul.wide.u32 	%rd119, %r452, 4;
	add.s64 	%rd115, %rd14, %rd119;
	// begin inline asm
	ld.global.nc.u32 %r340, [%rd115];
	// end inline asm
	mov.b32 	%f323, %r340;
	add.f32 	%f324, %f415, %f323;
	add.s32 	%r344, %r452, 256;
	mul.wide.u32 	%rd120, %r344, 4;
	add.s64 	%rd116, %rd14, %rd120;
	// begin inline asm
	ld.global.nc.u32 %r341, [%rd116];
	// end inline asm
	mov.b32 	%f325, %r341;
	add.f32 	%f326, %f324, %f325;
	add.s32 	%r345, %r452, 512;
	mul.wide.u32 	%rd121, %r345, 4;
	add.s64 	%rd117, %rd14, %rd121;
	// begin inline asm
	ld.global.nc.u32 %r342, [%rd117];
	// end inline asm
	mov.b32 	%f327, %r342;
	add.f32 	%f328, %f326, %f327;
	add.s32 	%r346, %r452, 768;
	mul.wide.u32 	%rd122, %r346, 4;
	add.s64 	%rd118, %rd14, %rd122;
	// begin inline asm
	ld.global.nc.u32 %r343, [%rd118];
	// end inline asm
	mov.b32 	%f329, %r343;
	add.f32 	%f415, %f328, %f329;
	add.s32 	%r452, %r452, 1024;
	setp.lt.s32 	%p71, %r452, %r74;
	@%p71 bra 	$L__BB36_59;

$L__BB36_60:
	setp.gt.s32 	%p72, %r74, 255;
	@%p72 bra 	$L__BB36_66;
	bra.uni 	$L__BB36_61;

$L__BB36_66:
	// begin inline asm
	mov.u32 %r390, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r391, %laneid;
	// end inline asm
	mov.b32 	%r393, %f415;
	mov.u32 	%r394, 1;
	mov.u32 	%r415, 31;
	mov.u32 	%r416, -1;
	// begin inline asm
	shfl.sync.down.b32 %r392, %r393, %r394, %r415, %r416;
	// end inline asm
	setp.gt.s32 	%p88, %r391, 30;
	mov.b32 	%f362, %r392;
	add.f32 	%f363, %f415, %f362;
	selp.f32 	%f364, %f415, %f363, %p88;
	mov.b32 	%r398, %f364;
	mov.u32 	%r399, 2;
	// begin inline asm
	shfl.sync.down.b32 %r397, %r398, %r399, %r415, %r416;
	// end inline asm
	setp.gt.s32 	%p89, %r391, 29;
	mov.b32 	%f365, %r397;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r403, %f367;
	mov.u32 	%r404, 4;
	// begin inline asm
	shfl.sync.down.b32 %r402, %r403, %r404, %r415, %r416;
	// end inline asm
	setp.gt.s32 	%p90, %r391, 27;
	mov.b32 	%f368, %r402;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r408, %f370;
	mov.u32 	%r409, 8;
	// begin inline asm
	shfl.sync.down.b32 %r407, %r408, %r409, %r415, %r416;
	// end inline asm
	setp.gt.s32 	%p91, %r391, 23;
	mov.b32 	%f371, %r407;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f373, %f370, %f372, %p91;
	mov.b32 	%r413, %f373;
	mov.u32 	%r414, 16;
	// begin inline asm
	shfl.sync.down.b32 %r412, %r413, %r414, %r415, %r416;
	// end inline asm
	setp.gt.s32 	%p92, %r391, 15;
	mov.b32 	%f374, %r412;
	add.f32 	%f375, %f373, %f374;
	selp.f32 	%f416, %f373, %f375, %p92;
	setp.ne.s32 	%p93, %r390, 0;
	@%p93 bra 	$L__BB36_68;

	shr.s32 	%r417, %r454, 31;
	shr.u32 	%r418, %r417, 27;
	add.s32 	%r419, %r454, %r418;
	shr.s32 	%r420, %r419, 5;
	shl.b32 	%r421, %r420, 2;
	mov.u32 	%r422, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r423, %r422, %r421;
	st.shared.f32 	[%r423+8], %f416;

$L__BB36_68:
	bar.sync 	0;
	setp.ne.s32 	%p94, %r454, 0;
	@%p94 bra 	$L__BB36_70;

	mov.u32 	%r454, 0;
	ld.shared.f32 	%f376, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f377, %f416, %f376;
	ld.shared.f32 	%f378, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f379, %f377, %f378;
	ld.shared.f32 	%f380, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f381, %f379, %f380;
	ld.shared.f32 	%f382, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f383, %f381, %f382;
	ld.shared.f32 	%f384, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f385, %f383, %f384;
	ld.shared.f32 	%f386, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f387, %f385, %f386;
	ld.shared.f32 	%f388, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f387, %f388;
	bra.uni 	$L__BB36_70;

$L__BB36_3:
	mul.wide.s32 	%rd33, %r454, 4;
	add.s64 	%rd17, %rd14, %rd33;
	// begin inline asm
	ld.global.nc.u32 %r75, [%rd17];
	// end inline asm
	add.s64 	%rd18, %rd17, 1024;
	// begin inline asm
	ld.global.nc.u32 %r76, [%rd18];
	// end inline asm
	add.s64 	%rd19, %rd17, 2048;
	// begin inline asm
	ld.global.nc.u32 %r77, [%rd19];
	// end inline asm
	add.s64 	%rd20, %rd17, 3072;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd20];
	// end inline asm
	add.s64 	%rd21, %rd17, 4096;
	// begin inline asm
	ld.global.nc.u32 %r79, [%rd21];
	// end inline asm
	add.s64 	%rd22, %rd17, 5120;
	// begin inline asm
	ld.global.nc.u32 %r80, [%rd22];
	// end inline asm
	add.s64 	%rd23, %rd17, 6144;
	// begin inline asm
	ld.global.nc.u32 %r81, [%rd23];
	// end inline asm
	add.s64 	%rd24, %rd17, 7168;
	// begin inline asm
	ld.global.nc.u32 %r82, [%rd24];
	// end inline asm
	add.s64 	%rd25, %rd17, 8192;
	// begin inline asm
	ld.global.nc.u32 %r83, [%rd25];
	// end inline asm
	add.s64 	%rd26, %rd17, 9216;
	// begin inline asm
	ld.global.nc.u32 %r84, [%rd26];
	// end inline asm
	add.s64 	%rd27, %rd17, 10240;
	// begin inline asm
	ld.global.nc.u32 %r85, [%rd27];
	// end inline asm
	add.s64 	%rd28, %rd17, 11264;
	// begin inline asm
	ld.global.nc.u32 %r86, [%rd28];
	// end inline asm
	add.s64 	%rd29, %rd17, 12288;
	// begin inline asm
	ld.global.nc.u32 %r87, [%rd29];
	// end inline asm
	add.s64 	%rd30, %rd17, 13312;
	// begin inline asm
	ld.global.nc.u32 %r88, [%rd30];
	// end inline asm
	add.s64 	%rd31, %rd17, 14336;
	// begin inline asm
	ld.global.nc.u32 %r89, [%rd31];
	// end inline asm
	add.s64 	%rd32, %rd17, 15360;
	// begin inline asm
	ld.global.nc.u32 %r90, [%rd32];
	// end inline asm
	mov.b32 	%f57, %r75;
	mov.b32 	%f58, %r76;
	add.f32 	%f59, %f57, %f58;
	mov.b32 	%f60, %r77;
	add.f32 	%f61, %f59, %f60;
	mov.b32 	%f62, %r78;
	add.f32 	%f63, %f61, %f62;
	mov.b32 	%f64, %r79;
	add.f32 	%f65, %f63, %f64;
	mov.b32 	%f66, %r80;
	add.f32 	%f67, %f65, %f66;
	mov.b32 	%f68, %r81;
	add.f32 	%f69, %f67, %f68;
	mov.b32 	%f70, %r82;
	add.f32 	%f71, %f69, %f70;
	mov.b32 	%f72, %r83;
	add.f32 	%f73, %f71, %f72;
	mov.b32 	%f74, %r84;
	add.f32 	%f75, %f73, %f74;
	mov.b32 	%f76, %r85;
	add.f32 	%f77, %f75, %f76;
	mov.b32 	%f78, %r86;
	add.f32 	%f79, %f77, %f78;
	mov.b32 	%f80, %r87;
	add.f32 	%f81, %f79, %f80;
	mov.b32 	%f82, %r88;
	add.f32 	%f83, %f81, %f82;
	mov.b32 	%f84, %r89;
	add.f32 	%f85, %f83, %f84;
	mov.b32 	%f86, %r90;
	add.f32 	%f396, %f85, %f86;
	add.s32 	%r426, %r74, -4096;
	setp.lt.u32 	%p4, %r426, 4096;
	mov.u32 	%r428, 4096;
	@%p4 bra 	$L__BB36_7;

	mov.u32 	%r428, 4096;

$L__BB36_5:
	mov.u32 	%r110, %tid.x;
	mul.wide.s32 	%rd50, %r110, 4;
	add.s64 	%rd51, %rd14, %rd50;
	mul.wide.u32 	%rd52, %r428, 4;
	add.s64 	%rd34, %rd51, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r94, [%rd34];
	// end inline asm
	add.s64 	%rd35, %rd34, 1024;
	// begin inline asm
	ld.global.nc.u32 %r95, [%rd35];
	// end inline asm
	add.s64 	%rd36, %rd34, 2048;
	// begin inline asm
	ld.global.nc.u32 %r96, [%rd36];
	// end inline asm
	add.s64 	%rd37, %rd34, 3072;
	// begin inline asm
	ld.global.nc.u32 %r97, [%rd37];
	// end inline asm
	add.s64 	%rd38, %rd21, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r98, [%rd38];
	// end inline asm
	add.s64 	%rd39, %rd22, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r99, [%rd39];
	// end inline asm
	add.s64 	%rd40, %rd23, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r100, [%rd40];
	// end inline asm
	add.s64 	%rd41, %rd24, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r101, [%rd41];
	// end inline asm
	add.s64 	%rd42, %rd25, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r102, [%rd42];
	// end inline asm
	add.s64 	%rd43, %rd26, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r103, [%rd43];
	// end inline asm
	add.s64 	%rd44, %rd27, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r104, [%rd44];
	// end inline asm
	add.s64 	%rd45, %rd28, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r105, [%rd45];
	// end inline asm
	add.s64 	%rd46, %rd29, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r106, [%rd46];
	// end inline asm
	add.s64 	%rd47, %rd30, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r107, [%rd47];
	// end inline asm
	add.s64 	%rd48, %rd31, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r108, [%rd48];
	// end inline asm
	add.s64 	%rd49, %rd32, %rd52;
	// begin inline asm
	ld.global.nc.u32 %r109, [%rd49];
	// end inline asm
	mov.b32 	%f87, %r94;
	add.f32 	%f88, %f396, %f87;
	mov.b32 	%f89, %r95;
	add.f32 	%f90, %f88, %f89;
	mov.b32 	%f91, %r96;
	add.f32 	%f92, %f90, %f91;
	mov.b32 	%f93, %r97;
	add.f32 	%f94, %f92, %f93;
	mov.b32 	%f95, %r98;
	add.f32 	%f96, %f94, %f95;
	mov.b32 	%f97, %r99;
	add.f32 	%f98, %f96, %f97;
	mov.b32 	%f99, %r100;
	add.f32 	%f100, %f98, %f99;
	mov.b32 	%f101, %r101;
	add.f32 	%f102, %f100, %f101;
	mov.b32 	%f103, %r102;
	add.f32 	%f104, %f102, %f103;
	mov.b32 	%f105, %r103;
	add.f32 	%f106, %f104, %f105;
	mov.b32 	%f107, %r104;
	add.f32 	%f108, %f106, %f107;
	mov.b32 	%f109, %r105;
	add.f32 	%f110, %f108, %f109;
	mov.b32 	%f111, %r106;
	add.f32 	%f112, %f110, %f111;
	mov.b32 	%f113, %r107;
	add.f32 	%f114, %f112, %f113;
	mov.b32 	%f115, %r108;
	add.f32 	%f116, %f114, %f115;
	mov.b32 	%f117, %r109;
	add.f32 	%f396, %f116, %f117;
	setp.lt.u32 	%p5, %r426, 4096;
	@%p5 bra 	$L__BB36_15;

	add.s32 	%r428, %r428, 4096;
	add.s32 	%r426, %r426, -4096;
	add.s32 	%r111, %r74, -4096;
	setp.le.u32 	%p6, %r428, %r111;
	@%p6 bra 	$L__BB36_5;

$L__BB36_7:
	setp.ge.u32 	%p7, %r428, %r74;
	@%p7 bra 	$L__BB36_15;

	sub.s32 	%r8, %r74, %r428;
	mov.u32 	%r432, %tid.x;
	setp.ge.s32 	%p8, %r432, %r8;
	@%p8 bra 	$L__BB36_15;

	not.b32 	%r113, %r432;
	add.s32 	%r114, %r113, %r74;
	sub.s32 	%r10, %r114, %r428;
	shr.u32 	%r115, %r10, 8;
	add.s32 	%r116, %r115, 1;
	and.b32  	%r431, %r116, 3;
	setp.eq.s32 	%p9, %r431, 0;
	@%p9 bra 	$L__BB36_12;

	mov.u32 	%r432, %tid.x;
	add.s32 	%r429, %r432, %r428;

$L__BB36_11:
	.pragma "nounroll";
	mul.wide.u32 	%rd54, %r429, 4;
	add.s64 	%rd53, %rd14, %rd54;
	// begin inline asm
	ld.global.nc.u32 %r117, [%rd53];
	// end inline asm
	mov.b32 	%f119, %r117;
	add.f32 	%f396, %f396, %f119;
	add.s32 	%r432, %r432, 256;
	add.s32 	%r429, %r429, 256;
	add.s32 	%r431, %r431, -1;
	setp.ne.s32 	%p10, %r431, 0;
	@%p10 bra 	$L__BB36_11;

$L__BB36_12:
	setp.lt.u32 	%p11, %r10, 768;
	@%p11 bra 	$L__BB36_15;

	add.s32 	%r118, %r432, %r428;
	add.s32 	%r433, %r118, 768;

$L__BB36_14:
	add.s32 	%r123, %r428, %r432;
	mul.wide.u32 	%rd59, %r123, 4;
	add.s64 	%rd55, %rd14, %rd59;
	// begin inline asm
	ld.global.nc.u32 %r119, [%rd55];
	// end inline asm
	mov.b32 	%f120, %r119;
	add.f32 	%f121, %f396, %f120;
	add.s32 	%r124, %r433, -512;
	mul.wide.u32 	%rd60, %r124, 4;
	add.s64 	%rd56, %rd14, %rd60;
	// begin inline asm
	ld.global.nc.u32 %r120, [%rd56];
	// end inline asm
	mov.b32 	%f122, %r120;
	add.f32 	%f123, %f121, %f122;
	add.s32 	%r125, %r433, -256;
	mul.wide.u32 	%rd61, %r125, 4;
	add.s64 	%rd57, %rd14, %rd61;
	// begin inline asm
	ld.global.nc.u32 %r121, [%rd57];
	// end inline asm
	mov.b32 	%f124, %r121;
	add.f32 	%f125, %f123, %f124;
	mul.wide.u32 	%rd62, %r433, 4;
	add.s64 	%rd58, %rd14, %rd62;
	// begin inline asm
	ld.global.nc.u32 %r122, [%rd58];
	// end inline asm
	mov.b32 	%f126, %r122;
	add.f32 	%f396, %f125, %f126;
	add.s32 	%r433, %r433, 1024;
	add.s32 	%r432, %r432, 1024;
	setp.lt.s32 	%p12, %r432, %r8;
	@%p12 bra 	$L__BB36_14;

$L__BB36_15:
	// begin inline asm
	mov.u32 %r126, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r127, %laneid;
	// end inline asm
	mov.b32 	%r129, %f396;
	mov.u32 	%r130, 1;
	mov.u32 	%r151, 31;
	mov.u32 	%r152, -1;
	// begin inline asm
	shfl.sync.down.b32 %r128, %r129, %r130, %r151, %r152;
	// end inline asm
	setp.gt.s32 	%p13, %r127, 30;
	mov.b32 	%f127, %r128;
	add.f32 	%f128, %f396, %f127;
	selp.f32 	%f129, %f396, %f128, %p13;
	mov.b32 	%r134, %f129;
	mov.u32 	%r135, 2;
	// begin inline asm
	shfl.sync.down.b32 %r133, %r134, %r135, %r151, %r152;
	// end inline asm
	setp.gt.s32 	%p14, %r127, 29;
	mov.b32 	%f130, %r133;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r139, %f132;
	mov.u32 	%r140, 4;
	// begin inline asm
	shfl.sync.down.b32 %r138, %r139, %r140, %r151, %r152;
	// end inline asm
	setp.gt.s32 	%p15, %r127, 27;
	mov.b32 	%f133, %r138;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r144, %f135;
	mov.u32 	%r145, 8;
	// begin inline asm
	shfl.sync.down.b32 %r143, %r144, %r145, %r151, %r152;
	// end inline asm
	setp.gt.s32 	%p16, %r127, 23;
	mov.b32 	%f136, %r143;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f138, %f135, %f137, %p16;
	mov.b32 	%r149, %f138;
	mov.u32 	%r150, 16;
	// begin inline asm
	shfl.sync.down.b32 %r148, %r149, %r150, %r151, %r152;
	// end inline asm
	setp.gt.s32 	%p17, %r127, 15;
	mov.b32 	%f139, %r148;
	add.f32 	%f140, %f138, %f139;
	selp.f32 	%f416, %f138, %f140, %p17;
	setp.ne.s32 	%p18, %r126, 0;
	@%p18 bra 	$L__BB36_17;

	mov.u32 	%r153, %tid.x;
	shr.s32 	%r154, %r153, 31;
	shr.u32 	%r155, %r154, 27;
	add.s32 	%r156, %r153, %r155;
	shr.s32 	%r157, %r156, 5;
	shl.b32 	%r158, %r157, 2;
	mov.u32 	%r159, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r160, %r159, %r158;
	st.shared.f32 	[%r160+8], %f416;

$L__BB36_17:
	bar.sync 	0;
	mov.u32 	%r454, %tid.x;
	setp.ne.s32 	%p19, %r454, 0;
	@%p19 bra 	$L__BB36_70;

	mov.u32 	%r454, 0;
	ld.shared.f32 	%f141, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f142, %f416, %f141;
	ld.shared.f32 	%f143, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f144, %f142, %f143;
	ld.shared.f32 	%f145, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f146, %f144, %f145;
	ld.shared.f32 	%f147, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f148, %f146, %f147;
	ld.shared.f32 	%f149, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f150, %f148, %f149;
	ld.shared.f32 	%f151, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f152, %f150, %f151;
	ld.shared.f32 	%f153, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f152, %f153;
	bra.uni 	$L__BB36_70;

$L__BB36_37:
	shl.b32 	%r253, %r454, 2;
	mul.wide.u32 	%rd87, %r253, 4;
	add.s64 	%rd77, %rd14, %rd87;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd75, %rd76}, [%rd77];
	// end inline asm
	mov.b64 	{%r254, %r255}, %rd76;
	mov.b64 	{%r256, %r257}, %rd75;
	add.s64 	%rd80, %rd77, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd78, %rd79}, [%rd80];
	// end inline asm
	mov.b64 	{%r258, %r259}, %rd79;
	mov.b64 	{%r260, %r261}, %rd78;
	add.s64 	%rd83, %rd77, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd81, %rd82}, [%rd83];
	// end inline asm
	mov.b64 	{%r262, %r263}, %rd82;
	mov.b64 	{%r264, %r265}, %rd81;
	add.s64 	%rd86, %rd77, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd84, %rd85}, [%rd86];
	// end inline asm
	mov.b64 	{%r266, %r267}, %rd85;
	mov.b64 	{%r268, %r269}, %rd84;
	mov.b32 	%f223, %r256;
	mov.b32 	%f224, %r257;
	mov.b32 	%f225, %r254;
	mov.b32 	%f226, %r255;
	mov.b32 	%f227, %r260;
	mov.b32 	%f228, %r261;
	mov.b32 	%f229, %r258;
	mov.b32 	%f230, %r259;
	mov.b32 	%f231, %r264;
	mov.b32 	%f232, %r265;
	mov.b32 	%f233, %r262;
	mov.b32 	%f234, %r263;
	mov.b32 	%f235, %r268;
	mov.b32 	%f236, %r269;
	mov.b32 	%f237, %r266;
	mov.b32 	%f238, %r267;
	add.f32 	%f239, %f223, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f250, %f249, %f235;
	add.f32 	%f251, %f250, %f236;
	add.f32 	%f252, %f251, %f237;
	add.f32 	%f409, %f252, %f238;
	add.s32 	%r39, %r74, -4096;
	setp.lt.u32 	%p50, %r39, 4096;
	mov.u32 	%r442, 4096;
	@%p50 bra 	$L__BB36_41;

	mov.u32 	%r442, 4096;
	mov.u32 	%r440, %r39;

$L__BB36_39:
	mul.wide.u32 	%rd100, %r442, 4;
	add.s64 	%rd90, %rd77, %rd100;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd88, %rd89}, [%rd90];
	// end inline asm
	mov.b64 	{%r271, %r272}, %rd89;
	mov.b64 	{%r273, %r274}, %rd88;
	add.s64 	%rd93, %rd90, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd91, %rd92}, [%rd93];
	// end inline asm
	mov.b64 	{%r275, %r276}, %rd92;
	mov.b64 	{%r277, %r278}, %rd91;
	add.s64 	%rd96, %rd90, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd94, %rd95}, [%rd96];
	// end inline asm
	mov.b64 	{%r279, %r280}, %rd95;
	mov.b64 	{%r281, %r282}, %rd94;
	add.s64 	%rd99, %rd90, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd97, %rd98}, [%rd99];
	// end inline asm
	mov.b64 	{%r283, %r284}, %rd98;
	mov.b64 	{%r285, %r286}, %rd97;
	mov.b32 	%f253, %r273;
	mov.b32 	%f254, %r274;
	mov.b32 	%f255, %r271;
	mov.b32 	%f256, %r272;
	mov.b32 	%f257, %r277;
	mov.b32 	%f258, %r278;
	mov.b32 	%f259, %r275;
	mov.b32 	%f260, %r276;
	mov.b32 	%f261, %r281;
	mov.b32 	%f262, %r282;
	mov.b32 	%f263, %r279;
	mov.b32 	%f264, %r280;
	mov.b32 	%f265, %r285;
	mov.b32 	%f266, %r286;
	mov.b32 	%f267, %r283;
	mov.b32 	%f268, %r284;
	add.f32 	%f269, %f409, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f281, %f280, %f265;
	add.f32 	%f282, %f281, %f266;
	add.f32 	%f283, %f282, %f267;
	add.f32 	%f409, %f283, %f268;
	setp.lt.u32 	%p51, %r440, 4096;
	@%p51 bra 	$L__BB36_49;

	add.s32 	%r442, %r442, 4096;
	add.s32 	%r440, %r440, -4096;
	setp.le.u32 	%p52, %r442, %r39;
	@%p52 bra 	$L__BB36_39;

$L__BB36_41:
	setp.ge.u32 	%p53, %r442, %r74;
	@%p53 bra 	$L__BB36_49;

	sub.s32 	%r45, %r74, %r442;
	setp.ge.s32 	%p54, %r454, %r45;
	@%p54 bra 	$L__BB36_49;

	not.b32 	%r287, %r454;
	add.s32 	%r288, %r287, %r74;
	sub.s32 	%r46, %r288, %r442;
	shr.u32 	%r289, %r46, 8;
	add.s32 	%r290, %r289, 1;
	and.b32  	%r445, %r290, 3;
	setp.eq.s32 	%p55, %r445, 0;
	mov.u32 	%r446, %r454;
	@%p55 bra 	$L__BB36_46;

	add.s32 	%r443, %r454, %r442;
	mov.u32 	%r446, %r454;

$L__BB36_45:
	.pragma "nounroll";
	mul.wide.u32 	%rd102, %r443, 4;
	add.s64 	%rd101, %rd14, %rd102;
	// begin inline asm
	ld.global.nc.u32 %r291, [%rd101];
	// end inline asm
	mov.b32 	%f285, %r291;
	add.f32 	%f409, %f409, %f285;
	add.s32 	%r446, %r446, 256;
	add.s32 	%r443, %r443, 256;
	add.s32 	%r445, %r445, -1;
	setp.ne.s32 	%p56, %r445, 0;
	@%p56 bra 	$L__BB36_45;

$L__BB36_46:
	setp.lt.u32 	%p57, %r46, 768;
	@%p57 bra 	$L__BB36_49;

	add.s32 	%r292, %r446, %r442;
	add.s32 	%r447, %r292, 768;

$L__BB36_48:
	add.s32 	%r297, %r442, %r446;
	mul.wide.u32 	%rd107, %r297, 4;
	add.s64 	%rd103, %rd14, %rd107;
	// begin inline asm
	ld.global.nc.u32 %r293, [%rd103];
	// end inline asm
	mov.b32 	%f286, %r293;
	add.f32 	%f287, %f409, %f286;
	add.s32 	%r298, %r447, -512;
	mul.wide.u32 	%rd108, %r298, 4;
	add.s64 	%rd104, %rd14, %rd108;
	// begin inline asm
	ld.global.nc.u32 %r294, [%rd104];
	// end inline asm
	mov.b32 	%f288, %r294;
	add.f32 	%f289, %f287, %f288;
	add.s32 	%r299, %r447, -256;
	mul.wide.u32 	%rd109, %r299, 4;
	add.s64 	%rd105, %rd14, %rd109;
	// begin inline asm
	ld.global.nc.u32 %r295, [%rd105];
	// end inline asm
	mov.b32 	%f290, %r295;
	add.f32 	%f291, %f289, %f290;
	mul.wide.u32 	%rd110, %r447, 4;
	add.s64 	%rd106, %rd14, %rd110;
	// begin inline asm
	ld.global.nc.u32 %r296, [%rd106];
	// end inline asm
	mov.b32 	%f292, %r296;
	add.f32 	%f409, %f291, %f292;
	add.s32 	%r447, %r447, 1024;
	add.s32 	%r446, %r446, 1024;
	setp.lt.s32 	%p58, %r446, %r45;
	@%p58 bra 	$L__BB36_48;

$L__BB36_49:
	// begin inline asm
	mov.u32 %r300, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r301, %laneid;
	// end inline asm
	mov.b32 	%r303, %f409;
	mov.u32 	%r304, 1;
	mov.u32 	%r325, 31;
	mov.u32 	%r326, -1;
	// begin inline asm
	shfl.sync.down.b32 %r302, %r303, %r304, %r325, %r326;
	// end inline asm
	setp.gt.s32 	%p59, %r301, 30;
	mov.b32 	%f293, %r302;
	add.f32 	%f294, %f409, %f293;
	selp.f32 	%f295, %f409, %f294, %p59;
	mov.b32 	%r308, %f295;
	mov.u32 	%r309, 2;
	// begin inline asm
	shfl.sync.down.b32 %r307, %r308, %r309, %r325, %r326;
	// end inline asm
	setp.gt.s32 	%p60, %r301, 29;
	mov.b32 	%f296, %r307;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r313, %f298;
	mov.u32 	%r314, 4;
	// begin inline asm
	shfl.sync.down.b32 %r312, %r313, %r314, %r325, %r326;
	// end inline asm
	setp.gt.s32 	%p61, %r301, 27;
	mov.b32 	%f299, %r312;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r318, %f301;
	mov.u32 	%r319, 8;
	// begin inline asm
	shfl.sync.down.b32 %r317, %r318, %r319, %r325, %r326;
	// end inline asm
	setp.gt.s32 	%p62, %r301, 23;
	mov.b32 	%f302, %r317;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f304, %f301, %f303, %p62;
	mov.b32 	%r323, %f304;
	mov.u32 	%r324, 16;
	// begin inline asm
	shfl.sync.down.b32 %r322, %r323, %r324, %r325, %r326;
	// end inline asm
	setp.gt.s32 	%p63, %r301, 15;
	mov.b32 	%f305, %r322;
	add.f32 	%f306, %f304, %f305;
	selp.f32 	%f416, %f304, %f306, %p63;
	setp.ne.s32 	%p64, %r300, 0;
	@%p64 bra 	$L__BB36_51;

	shr.s32 	%r327, %r454, 31;
	shr.u32 	%r328, %r327, 27;
	add.s32 	%r329, %r454, %r328;
	shr.s32 	%r330, %r329, 5;
	shl.b32 	%r331, %r330, 2;
	mov.u32 	%r332, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r333, %r332, %r331;
	st.shared.f32 	[%r333+8], %f416;

$L__BB36_51:
	bar.sync 	0;
	setp.ne.s32 	%p65, %r454, 0;
	@%p65 bra 	$L__BB36_70;

	mov.u32 	%r454, 0;
	ld.shared.f32 	%f307, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f308, %f416, %f307;
	ld.shared.f32 	%f309, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f310, %f308, %f309;
	ld.shared.f32 	%f311, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f312, %f310, %f311;
	ld.shared.f32 	%f313, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f314, %f312, %f313;
	ld.shared.f32 	%f315, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f316, %f314, %f315;
	ld.shared.f32 	%f317, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f318, %f316, %f317;
	ld.shared.f32 	%f319, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f318, %f319;
	bra.uni 	$L__BB36_70;

$L__BB36_27:
	shr.s32 	%r201, %r454, 31;
	shr.u32 	%r202, %r201, 27;
	add.s32 	%r203, %r454, %r202;
	shr.s32 	%r38, %r203, 5;
	// begin inline asm
	mov.u32 %r174, %laneid;
	// end inline asm
	and.b32  	%r204, %r203, -32;
	add.s32 	%r205, %r204, 32;
	setp.gt.s32 	%p27, %r205, %r74;
	// begin inline asm
	mov.u32 %r175, %laneid;
	// end inline asm
	not.b32 	%r206, %r204;
	mov.u32 	%r200, -1;
	add.s32 	%r207, %r206, %r74;
	selp.b32 	%r199, %r207, 31, %p27;
	mov.b32 	%r177, %f402;
	mov.u32 	%r178, 1;
	// begin inline asm
	shfl.sync.down.b32 %r176, %r177, %r178, %r199, %r200;
	// end inline asm
	setp.lt.s32 	%p28, %r175, %r199;
	mov.b32 	%f164, %r176;
	add.f32 	%f165, %f402, %f164;
	selp.f32 	%f166, %f165, %f402, %p28;
	mov.b32 	%r182, %f166;
	mov.u32 	%r183, 2;
	// begin inline asm
	shfl.sync.down.b32 %r181, %r182, %r183, %r199, %r200;
	// end inline asm
	add.s32 	%r208, %r175, 2;
	setp.gt.s32 	%p29, %r208, %r199;
	mov.b32 	%f167, %r181;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r187, %f169;
	mov.u32 	%r188, 4;
	// begin inline asm
	shfl.sync.down.b32 %r186, %r187, %r188, %r199, %r200;
	// end inline asm
	add.s32 	%r209, %r175, 4;
	setp.gt.s32 	%p30, %r209, %r199;
	mov.b32 	%f170, %r186;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r192, %f172;
	mov.u32 	%r193, 8;
	// begin inline asm
	shfl.sync.down.b32 %r191, %r192, %r193, %r199, %r200;
	// end inline asm
	add.s32 	%r210, %r175, 8;
	setp.gt.s32 	%p31, %r210, %r199;
	mov.b32 	%f173, %r191;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f175, %f172, %f174, %p31;
	mov.b32 	%r197, %f175;
	mov.u32 	%r198, 16;
	// begin inline asm
	shfl.sync.down.b32 %r196, %r197, %r198, %r199, %r200;
	// end inline asm
	add.s32 	%r211, %r175, 16;
	setp.gt.s32 	%p32, %r211, %r199;
	mov.b32 	%f176, %r196;
	add.f32 	%f177, %f175, %f176;
	selp.f32 	%f416, %f175, %f177, %p32;
	setp.ne.s32 	%p33, %r174, 0;
	@%p33 bra 	$L__BB36_29;

	shl.b32 	%r212, %r38, 2;
	mov.u32 	%r213, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r214, %r213, %r212;
	st.shared.f32 	[%r214+8], %f416;

$L__BB36_29:
	bar.sync 	0;
	setp.ne.s32 	%p34, %r454, 0;
	@%p34 bra 	$L__BB36_70;

	setp.gt.s32 	%p35, %r74, 32;
	mov.u32 	%r454, 0;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f179, %f416, %f178;
	selp.f32 	%f180, %f179, %f416, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r74, 64;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r74, 96;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r74, 128;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r74, 160;
	selp.f32 	%f192, %f191, %f189, %p39;
	ld.shared.f32 	%f193, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f194, %f192, %f193;
	setp.gt.s32 	%p40, %r74, 192;
	selp.f32 	%f416, %f194, %f192, %p40;
	setp.lt.s32 	%p41, %r74, 225;
	@%p41 bra 	$L__BB36_70;

	ld.shared.f32 	%f195, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f195;
	bra.uni 	$L__BB36_70;

$L__BB36_61:
	shr.s32 	%r374, %r454, 31;
	shr.u32 	%r375, %r374, 27;
	add.s32 	%r376, %r454, %r375;
	shr.s32 	%r72, %r376, 5;
	// begin inline asm
	mov.u32 %r347, %laneid;
	// end inline asm
	and.b32  	%r377, %r376, -32;
	add.s32 	%r378, %r377, 32;
	setp.gt.s32 	%p73, %r378, %r74;
	// begin inline asm
	mov.u32 %r348, %laneid;
	// end inline asm
	not.b32 	%r379, %r377;
	mov.u32 	%r373, -1;
	add.s32 	%r380, %r379, %r74;
	selp.b32 	%r372, %r380, 31, %p73;
	mov.b32 	%r350, %f415;
	mov.u32 	%r351, 1;
	// begin inline asm
	shfl.sync.down.b32 %r349, %r350, %r351, %r372, %r373;
	// end inline asm
	setp.lt.s32 	%p74, %r348, %r372;
	mov.b32 	%f330, %r349;
	add.f32 	%f331, %f415, %f330;
	selp.f32 	%f332, %f331, %f415, %p74;
	mov.b32 	%r355, %f332;
	mov.u32 	%r356, 2;
	// begin inline asm
	shfl.sync.down.b32 %r354, %r355, %r356, %r372, %r373;
	// end inline asm
	add.s32 	%r381, %r348, 2;
	setp.gt.s32 	%p75, %r381, %r372;
	mov.b32 	%f333, %r354;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r360, %f335;
	mov.u32 	%r361, 4;
	// begin inline asm
	shfl.sync.down.b32 %r359, %r360, %r361, %r372, %r373;
	// end inline asm
	add.s32 	%r382, %r348, 4;
	setp.gt.s32 	%p76, %r382, %r372;
	mov.b32 	%f336, %r359;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r365, %f338;
	mov.u32 	%r366, 8;
	// begin inline asm
	shfl.sync.down.b32 %r364, %r365, %r366, %r372, %r373;
	// end inline asm
	add.s32 	%r383, %r348, 8;
	setp.gt.s32 	%p77, %r383, %r372;
	mov.b32 	%f339, %r364;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f341, %f338, %f340, %p77;
	mov.b32 	%r370, %f341;
	mov.u32 	%r371, 16;
	// begin inline asm
	shfl.sync.down.b32 %r369, %r370, %r371, %r372, %r373;
	// end inline asm
	add.s32 	%r384, %r348, 16;
	setp.gt.s32 	%p78, %r384, %r372;
	mov.b32 	%f342, %r369;
	add.f32 	%f343, %f341, %f342;
	selp.f32 	%f416, %f341, %f343, %p78;
	setp.ne.s32 	%p79, %r347, 0;
	@%p79 bra 	$L__BB36_63;

	shl.b32 	%r385, %r72, 2;
	mov.u32 	%r386, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r387, %r386, %r385;
	st.shared.f32 	[%r387+8], %f416;

$L__BB36_63:
	bar.sync 	0;
	setp.ne.s32 	%p80, %r454, 0;
	@%p80 bra 	$L__BB36_70;

	setp.gt.s32 	%p81, %r74, 32;
	mov.u32 	%r454, 0;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f345, %f416, %f344;
	selp.f32 	%f346, %f345, %f416, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r74, 64;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r74, 96;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r74, 128;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r74, 160;
	selp.f32 	%f358, %f357, %f355, %p85;
	ld.shared.f32 	%f359, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f360, %f358, %f359;
	setp.gt.s32 	%p86, %r74, 192;
	selp.f32 	%f416, %f360, %f358, %p86;
	setp.lt.s32 	%p87, %r74, 225;
	@%p87 bra 	$L__BB36_70;

	ld.shared.f32 	%f361, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_jS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f361;

$L__BB36_70:
	setp.ne.s32 	%p95, %r454, 0;
	@%p95 bra 	$L__BB36_74;

	add.f32 	%f389, %f416, %f56;
	cvta.to.global.u64 	%rd123, %rd15;
	st.global.f32 	[%rd123], %f389;

$L__BB36_74:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_
.visible .entry _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_(
	.param .u64 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_1,
	.param .u32 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_2,
	.param .align 4 .b8 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3[40],
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_4[1]
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<95>;
	.reg .f32 	%f<411>;
	.reg .b32 	%r<548>;
	.reg .b64 	%rd<213>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage[44];

	ld.param.u64 	%rd1, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_0];
	ld.param.u64 	%rd2, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_1];
	ld.param.u32 	%r1, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3+20];
	ld.param.u32 	%r107, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3+24];
	shl.b32 	%r2, %r107, 12;
	mov.u32 	%r108, %ctaid.x;
	shl.b32 	%r532, %r108, 12;
	and.b64  	%rd3, %rd1, 15;
	setp.eq.s64 	%p1, %rd3, 0;
	sub.s32 	%r4, %r1, %r532;
	@%p1 bra 	$L__BB37_37;

	setp.lt.u32 	%p2, %r4, 4096;
	mov.u32 	%r526, %tid.x;
	@%p2 bra 	$L__BB37_18;
	bra.uni 	$L__BB37_2;

$L__BB37_18:
	setp.ge.s32 	%p19, %r526, %r4;
	mov.f32 	%f397, 0f00000000;
	@%p19 bra 	$L__BB37_20;

	shl.b32 	%r230, %r108, 12;
	add.s32 	%r231, %r230, %r526;
	mul.wide.u32 	%rd145, %r231, 4;
	add.s64 	%rd144, %rd1, %rd145;
	// begin inline asm
	ld.global.nc.u32 %r228, [%rd144];
	// end inline asm
	mov.b32 	%f397, %r228;
	add.s32 	%r526, %r526, 256;

$L__BB37_20:
	setp.ge.s32 	%p20, %r526, %r4;
	@%p20 bra 	$L__BB37_27;

	not.b32 	%r232, %r526;
	add.s32 	%r233, %r1, %r232;
	shl.b32 	%r235, %r108, 12;
	sub.s32 	%r35, %r233, %r235;
	shr.u32 	%r236, %r35, 8;
	add.s32 	%r237, %r236, 1;
	and.b32  	%r525, %r237, 3;
	setp.eq.s32 	%p21, %r525, 0;
	@%p21 bra 	$L__BB37_24;

	add.s32 	%r523, %r526, %r235;

$L__BB37_23:
	.pragma "nounroll";
	mul.wide.u32 	%rd147, %r523, 4;
	add.s64 	%rd146, %rd1, %rd147;
	// begin inline asm
	ld.global.nc.u32 %r243, [%rd146];
	// end inline asm
	mov.b32 	%f153, %r243;
	add.f32 	%f397, %f397, %f153;
	add.s32 	%r526, %r526, 256;
	add.s32 	%r523, %r523, 256;
	add.s32 	%r525, %r525, -1;
	setp.ne.s32 	%p22, %r525, 0;
	@%p22 bra 	$L__BB37_23;

$L__BB37_24:
	setp.lt.u32 	%p23, %r35, 768;
	@%p23 bra 	$L__BB37_27;

	add.s32 	%r245, %r526, %r235;
	add.s32 	%r527, %r245, 768;

$L__BB37_26:
	add.s32 	%r250, %r235, %r526;
	mul.wide.u32 	%rd152, %r250, 4;
	add.s64 	%rd148, %rd1, %rd152;
	// begin inline asm
	ld.global.nc.u32 %r246, [%rd148];
	// end inline asm
	mov.b32 	%f154, %r246;
	add.f32 	%f155, %f397, %f154;
	add.s32 	%r251, %r527, -512;
	mul.wide.u32 	%rd153, %r251, 4;
	add.s64 	%rd149, %rd1, %rd153;
	// begin inline asm
	ld.global.nc.u32 %r247, [%rd149];
	// end inline asm
	mov.b32 	%f156, %r247;
	add.f32 	%f157, %f155, %f156;
	add.s32 	%r252, %r527, -256;
	mul.wide.u32 	%rd154, %r252, 4;
	add.s64 	%rd150, %rd1, %rd154;
	// begin inline asm
	ld.global.nc.u32 %r248, [%rd150];
	// end inline asm
	mov.b32 	%f158, %r248;
	add.f32 	%f159, %f157, %f158;
	mul.wide.u32 	%rd155, %r527, 4;
	add.s64 	%rd151, %rd1, %rd155;
	// begin inline asm
	ld.global.nc.u32 %r249, [%rd151];
	// end inline asm
	mov.b32 	%f160, %r249;
	add.f32 	%f397, %f159, %f160;
	add.s32 	%r527, %r527, 1024;
	add.s32 	%r526, %r526, 1024;
	setp.lt.s32 	%p24, %r526, %r4;
	@%p24 bra 	$L__BB37_26;

$L__BB37_27:
	setp.gt.s32 	%p25, %r4, 255;
	@%p25 bra 	$L__BB37_33;
	bra.uni 	$L__BB37_28;

$L__BB37_33:
	// begin inline asm
	mov.u32 %r297, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r298, %laneid;
	// end inline asm
	mov.b32 	%r300, %f397;
	mov.u32 	%r301, 1;
	mov.u32 	%r322, 31;
	mov.u32 	%r323, -1;
	// begin inline asm
	shfl.sync.down.b32 %r299, %r300, %r301, %r322, %r323;
	// end inline asm
	setp.gt.s32 	%p41, %r298, 30;
	mov.b32 	%f193, %r299;
	add.f32 	%f194, %f397, %f193;
	selp.f32 	%f195, %f397, %f194, %p41;
	mov.b32 	%r305, %f195;
	mov.u32 	%r306, 2;
	// begin inline asm
	shfl.sync.down.b32 %r304, %r305, %r306, %r322, %r323;
	// end inline asm
	setp.gt.s32 	%p42, %r298, 29;
	mov.b32 	%f196, %r304;
	add.f32 	%f197, %f195, %f196;
	selp.f32 	%f198, %f195, %f197, %p42;
	mov.b32 	%r310, %f198;
	mov.u32 	%r311, 4;
	// begin inline asm
	shfl.sync.down.b32 %r309, %r310, %r311, %r322, %r323;
	// end inline asm
	setp.gt.s32 	%p43, %r298, 27;
	mov.b32 	%f199, %r309;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r315, %f201;
	mov.u32 	%r316, 8;
	// begin inline asm
	shfl.sync.down.b32 %r314, %r315, %r316, %r322, %r323;
	// end inline asm
	setp.gt.s32 	%p44, %r298, 23;
	mov.b32 	%f202, %r314;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r320, %f204;
	mov.u32 	%r321, 16;
	// begin inline asm
	shfl.sync.down.b32 %r319, %r320, %r321, %r322, %r323;
	// end inline asm
	setp.gt.s32 	%p45, %r298, 15;
	mov.b32 	%f205, %r319;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f410, %f204, %f206, %p45;
	setp.ne.s32 	%p46, %r297, 0;
	@%p46 bra 	$L__BB37_35;

	mov.u32 	%r324, %tid.x;
	shr.s32 	%r325, %r324, 31;
	shr.u32 	%r326, %r325, 27;
	add.s32 	%r327, %r324, %r326;
	shr.s32 	%r328, %r327, 5;
	shl.b32 	%r329, %r328, 2;
	mov.u32 	%r330, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r331, %r330, %r329;
	st.shared.f32 	[%r331+8], %f410;

$L__BB37_35:
	bar.sync 	0;
	mov.u32 	%r547, %tid.x;
	setp.ne.s32 	%p47, %r547, 0;
	@%p47 bra 	$L__BB37_73;

	mov.u32 	%r547, 0;
	ld.shared.f32 	%f207, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f208, %f410, %f207;
	ld.shared.f32 	%f209, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f210, %f208, %f209;
	ld.shared.f32 	%f211, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f212, %f210, %f211;
	ld.shared.f32 	%f213, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f214, %f212, %f213;
	ld.shared.f32 	%f215, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f216, %f214, %f215;
	ld.shared.f32 	%f217, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f218, %f216, %f217;
	ld.shared.f32 	%f219, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f218, %f219;
	bra.uni 	$L__BB37_73;

$L__BB37_37:
	setp.lt.u32 	%p48, %r4, 4096;
	@%p48 bra 	$L__BB37_54;
	bra.uni 	$L__BB37_38;

$L__BB37_54:
	mov.u32 	%r547, %tid.x;
	setp.ge.s32 	%p65, %r547, %r4;
	mov.f32 	%f409, 0f00000000;
	mov.u32 	%r544, %r547;
	@%p65 bra 	$L__BB37_56;

	add.s32 	%r420, %r532, %r547;
	mul.wide.u32 	%rd199, %r420, 4;
	add.s64 	%rd198, %rd1, %rd199;
	// begin inline asm
	ld.global.nc.u32 %r419, [%rd198];
	// end inline asm
	mov.b32 	%f409, %r419;
	add.s32 	%r544, %r547, 256;

$L__BB37_56:
	setp.ge.s32 	%p66, %r544, %r4;
	@%p66 bra 	$L__BB37_63;

	not.b32 	%r421, %r544;
	add.s32 	%r422, %r1, %r421;
	sub.s32 	%r90, %r422, %r532;
	shr.u32 	%r423, %r90, 8;
	add.s32 	%r424, %r423, 1;
	and.b32  	%r543, %r424, 3;
	setp.eq.s32 	%p67, %r543, 0;
	@%p67 bra 	$L__BB37_60;

	add.s32 	%r541, %r544, %r532;

$L__BB37_59:
	.pragma "nounroll";
	mul.wide.u32 	%rd201, %r541, 4;
	add.s64 	%rd200, %rd1, %rd201;
	// begin inline asm
	ld.global.nc.u32 %r425, [%rd200];
	// end inline asm
	mov.b32 	%f319, %r425;
	add.f32 	%f409, %f409, %f319;
	add.s32 	%r544, %r544, 256;
	add.s32 	%r541, %r541, 256;
	add.s32 	%r543, %r543, -1;
	setp.ne.s32 	%p68, %r543, 0;
	@%p68 bra 	$L__BB37_59;

$L__BB37_60:
	setp.lt.u32 	%p69, %r90, 768;
	@%p69 bra 	$L__BB37_63;

	add.s32 	%r426, %r544, %r532;
	add.s32 	%r545, %r426, 768;

$L__BB37_62:
	add.s32 	%r431, %r532, %r544;
	mul.wide.u32 	%rd206, %r431, 4;
	add.s64 	%rd202, %rd1, %rd206;
	// begin inline asm
	ld.global.nc.u32 %r427, [%rd202];
	// end inline asm
	mov.b32 	%f320, %r427;
	add.f32 	%f321, %f409, %f320;
	add.s32 	%r432, %r545, -512;
	mul.wide.u32 	%rd207, %r432, 4;
	add.s64 	%rd203, %rd1, %rd207;
	// begin inline asm
	ld.global.nc.u32 %r428, [%rd203];
	// end inline asm
	mov.b32 	%f322, %r428;
	add.f32 	%f323, %f321, %f322;
	add.s32 	%r433, %r545, -256;
	mul.wide.u32 	%rd208, %r433, 4;
	add.s64 	%rd204, %rd1, %rd208;
	// begin inline asm
	ld.global.nc.u32 %r429, [%rd204];
	// end inline asm
	mov.b32 	%f324, %r429;
	add.f32 	%f325, %f323, %f324;
	mul.wide.u32 	%rd209, %r545, 4;
	add.s64 	%rd205, %rd1, %rd209;
	// begin inline asm
	ld.global.nc.u32 %r430, [%rd205];
	// end inline asm
	mov.b32 	%f326, %r430;
	add.f32 	%f409, %f325, %f326;
	add.s32 	%r545, %r545, 1024;
	add.s32 	%r544, %r544, 1024;
	setp.lt.s32 	%p70, %r544, %r4;
	@%p70 bra 	$L__BB37_62;

$L__BB37_63:
	setp.gt.s32 	%p71, %r4, 255;
	@%p71 bra 	$L__BB37_69;
	bra.uni 	$L__BB37_64;

$L__BB37_69:
	// begin inline asm
	mov.u32 %r477, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r478, %laneid;
	// end inline asm
	mov.b32 	%r480, %f409;
	mov.u32 	%r481, 1;
	mov.u32 	%r502, 31;
	mov.u32 	%r503, -1;
	// begin inline asm
	shfl.sync.down.b32 %r479, %r480, %r481, %r502, %r503;
	// end inline asm
	setp.gt.s32 	%p87, %r478, 30;
	mov.b32 	%f359, %r479;
	add.f32 	%f360, %f409, %f359;
	selp.f32 	%f361, %f409, %f360, %p87;
	mov.b32 	%r485, %f361;
	mov.u32 	%r486, 2;
	// begin inline asm
	shfl.sync.down.b32 %r484, %r485, %r486, %r502, %r503;
	// end inline asm
	setp.gt.s32 	%p88, %r478, 29;
	mov.b32 	%f362, %r484;
	add.f32 	%f363, %f361, %f362;
	selp.f32 	%f364, %f361, %f363, %p88;
	mov.b32 	%r490, %f364;
	mov.u32 	%r491, 4;
	// begin inline asm
	shfl.sync.down.b32 %r489, %r490, %r491, %r502, %r503;
	// end inline asm
	setp.gt.s32 	%p89, %r478, 27;
	mov.b32 	%f365, %r489;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r495, %f367;
	mov.u32 	%r496, 8;
	// begin inline asm
	shfl.sync.down.b32 %r494, %r495, %r496, %r502, %r503;
	// end inline asm
	setp.gt.s32 	%p90, %r478, 23;
	mov.b32 	%f368, %r494;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r500, %f370;
	mov.u32 	%r501, 16;
	// begin inline asm
	shfl.sync.down.b32 %r499, %r500, %r501, %r502, %r503;
	// end inline asm
	setp.gt.s32 	%p91, %r478, 15;
	mov.b32 	%f371, %r499;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f410, %f370, %f372, %p91;
	setp.ne.s32 	%p92, %r477, 0;
	@%p92 bra 	$L__BB37_71;

	shr.s32 	%r504, %r547, 31;
	shr.u32 	%r505, %r504, 27;
	add.s32 	%r506, %r547, %r505;
	shr.s32 	%r507, %r506, 5;
	shl.b32 	%r508, %r507, 2;
	mov.u32 	%r509, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r510, %r509, %r508;
	st.shared.f32 	[%r510+8], %f410;

$L__BB37_71:
	bar.sync 	0;
	setp.ne.s32 	%p93, %r547, 0;
	@%p93 bra 	$L__BB37_73;

	mov.u32 	%r547, 0;
	ld.shared.f32 	%f373, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f374, %f410, %f373;
	ld.shared.f32 	%f375, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f376, %f374, %f375;
	ld.shared.f32 	%f377, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f378, %f376, %f377;
	ld.shared.f32 	%f379, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f380, %f378, %f379;
	ld.shared.f32 	%f381, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f382, %f380, %f381;
	ld.shared.f32 	%f383, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f384, %f382, %f383;
	ld.shared.f32 	%f385, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f384, %f385;
	bra.uni 	$L__BB37_73;

$L__BB37_2:
	shl.b32 	%r126, %r108, 12;
	cvt.u64.u32 	%rd20, %r126;
	cvt.s64.s32 	%rd21, %r526;
	add.s64 	%rd22, %rd21, %rd20;
	shl.b64 	%rd23, %rd22, 2;
	add.s64 	%rd4, %rd1, %rd23;
	// begin inline asm
	ld.global.nc.u32 %r109, [%rd4];
	// end inline asm
	add.s32 	%r127, %r526, 256;
	cvt.s64.s32 	%rd24, %r127;
	add.s64 	%rd25, %rd24, %rd20;
	shl.b64 	%rd26, %rd25, 2;
	add.s64 	%rd5, %rd1, %rd26;
	// begin inline asm
	ld.global.nc.u32 %r110, [%rd5];
	// end inline asm
	add.s32 	%r128, %r526, 512;
	cvt.s64.s32 	%rd27, %r128;
	add.s64 	%rd28, %rd27, %rd20;
	shl.b64 	%rd29, %rd28, 2;
	add.s64 	%rd6, %rd1, %rd29;
	// begin inline asm
	ld.global.nc.u32 %r111, [%rd6];
	// end inline asm
	add.s32 	%r129, %r526, 768;
	cvt.s64.s32 	%rd30, %r129;
	add.s64 	%rd31, %rd30, %rd20;
	shl.b64 	%rd32, %rd31, 2;
	add.s64 	%rd7, %rd1, %rd32;
	// begin inline asm
	ld.global.nc.u32 %r112, [%rd7];
	// end inline asm
	add.s32 	%r130, %r526, 1024;
	cvt.s64.s32 	%rd33, %r130;
	add.s64 	%rd34, %rd33, %rd20;
	shl.b64 	%rd35, %rd34, 2;
	add.s64 	%rd8, %rd1, %rd35;
	// begin inline asm
	ld.global.nc.u32 %r113, [%rd8];
	// end inline asm
	add.s32 	%r131, %r526, 1280;
	cvt.s64.s32 	%rd36, %r131;
	add.s64 	%rd37, %rd36, %rd20;
	shl.b64 	%rd38, %rd37, 2;
	add.s64 	%rd9, %rd1, %rd38;
	// begin inline asm
	ld.global.nc.u32 %r114, [%rd9];
	// end inline asm
	add.s32 	%r132, %r526, 1536;
	cvt.s64.s32 	%rd39, %r132;
	add.s64 	%rd40, %rd39, %rd20;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd10, %rd1, %rd41;
	// begin inline asm
	ld.global.nc.u32 %r115, [%rd10];
	// end inline asm
	add.s32 	%r133, %r526, 1792;
	cvt.s64.s32 	%rd42, %r133;
	add.s64 	%rd43, %rd42, %rd20;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd11, %rd1, %rd44;
	// begin inline asm
	ld.global.nc.u32 %r116, [%rd11];
	// end inline asm
	add.s32 	%r134, %r526, 2048;
	cvt.s64.s32 	%rd45, %r134;
	add.s64 	%rd46, %rd45, %rd20;
	shl.b64 	%rd47, %rd46, 2;
	add.s64 	%rd12, %rd1, %rd47;
	// begin inline asm
	ld.global.nc.u32 %r117, [%rd12];
	// end inline asm
	add.s32 	%r135, %r526, 2304;
	cvt.s64.s32 	%rd48, %r135;
	add.s64 	%rd49, %rd48, %rd20;
	shl.b64 	%rd50, %rd49, 2;
	add.s64 	%rd13, %rd1, %rd50;
	// begin inline asm
	ld.global.nc.u32 %r118, [%rd13];
	// end inline asm
	add.s32 	%r136, %r526, 2560;
	cvt.s64.s32 	%rd51, %r136;
	add.s64 	%rd52, %rd51, %rd20;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd14, %rd1, %rd53;
	// begin inline asm
	ld.global.nc.u32 %r119, [%rd14];
	// end inline asm
	add.s32 	%r137, %r526, 2816;
	cvt.s64.s32 	%rd54, %r137;
	add.s64 	%rd55, %rd54, %rd20;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd15, %rd1, %rd56;
	// begin inline asm
	ld.global.nc.u32 %r120, [%rd15];
	// end inline asm
	add.s32 	%r138, %r526, 3072;
	cvt.s64.s32 	%rd57, %r138;
	add.s64 	%rd58, %rd57, %rd20;
	shl.b64 	%rd59, %rd58, 2;
	add.s64 	%rd16, %rd1, %rd59;
	// begin inline asm
	ld.global.nc.u32 %r121, [%rd16];
	// end inline asm
	add.s32 	%r139, %r526, 3328;
	cvt.s64.s32 	%rd60, %r139;
	add.s64 	%rd61, %rd60, %rd20;
	shl.b64 	%rd62, %rd61, 2;
	add.s64 	%rd17, %rd1, %rd62;
	// begin inline asm
	ld.global.nc.u32 %r122, [%rd17];
	// end inline asm
	add.s32 	%r140, %r526, 3584;
	cvt.s64.s32 	%rd63, %r140;
	add.s64 	%rd64, %rd63, %rd20;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd18, %rd1, %rd65;
	// begin inline asm
	ld.global.nc.u32 %r123, [%rd18];
	// end inline asm
	add.s32 	%r141, %r526, 3840;
	cvt.s64.s32 	%rd66, %r141;
	add.s64 	%rd67, %rd66, %rd20;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd19, %rd1, %rd68;
	// begin inline asm
	ld.global.nc.u32 %r124, [%rd19];
	// end inline asm
	mov.b32 	%f54, %r109;
	mov.b32 	%f55, %r110;
	add.f32 	%f56, %f54, %f55;
	mov.b32 	%f57, %r111;
	add.f32 	%f58, %f56, %f57;
	mov.b32 	%f59, %r112;
	add.f32 	%f60, %f58, %f59;
	mov.b32 	%f61, %r113;
	add.f32 	%f62, %f60, %f61;
	mov.b32 	%f63, %r114;
	add.f32 	%f64, %f62, %f63;
	mov.b32 	%f65, %r115;
	add.f32 	%f66, %f64, %f65;
	mov.b32 	%f67, %r116;
	add.f32 	%f68, %f66, %f67;
	mov.b32 	%f69, %r117;
	add.f32 	%f70, %f68, %f69;
	mov.b32 	%f71, %r118;
	add.f32 	%f72, %f70, %f71;
	mov.b32 	%f73, %r119;
	add.f32 	%f74, %f72, %f73;
	mov.b32 	%f75, %r120;
	add.f32 	%f76, %f74, %f75;
	mov.b32 	%f77, %r121;
	add.f32 	%f78, %f76, %f77;
	mov.b32 	%f79, %r122;
	add.f32 	%f80, %f78, %f79;
	mov.b32 	%f81, %r123;
	add.f32 	%f82, %f80, %f81;
	mov.b32 	%f83, %r124;
	add.f32 	%f391, %f82, %f83;
	setp.lt.u32 	%p3, %r4, %r2;
	@%p3 bra 	$L__BB37_14;

	add.s32 	%r514, %r2, %r126;
	mov.u32 	%r518, %tid.x;
	add.s32 	%r145, %r518, %r2;
	add.s32 	%r513, %r145, %r126;

$L__BB37_4:
	add.s32 	%r146, %r1, -4096;
	setp.gt.u32 	%p4, %r514, %r146;
	@%p4 bra 	$L__BB37_6;

	cvt.u64.u32 	%rd85, %r514;
	mov.u32 	%r163, %tid.x;
	cvt.s64.s32 	%rd86, %r163;
	add.s64 	%rd87, %rd86, %rd85;
	shl.b64 	%rd88, %rd87, 2;
	add.s64 	%rd69, %rd1, %rd88;
	// begin inline asm
	ld.global.nc.u32 %r147, [%rd69];
	// end inline asm
	add.s32 	%r164, %r163, 256;
	cvt.s64.s32 	%rd89, %r164;
	add.s64 	%rd90, %rd89, %rd85;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd70, %rd1, %rd91;
	// begin inline asm
	ld.global.nc.u32 %r148, [%rd70];
	// end inline asm
	add.s32 	%r165, %r163, 512;
	cvt.s64.s32 	%rd92, %r165;
	add.s64 	%rd93, %rd92, %rd85;
	shl.b64 	%rd94, %rd93, 2;
	add.s64 	%rd71, %rd1, %rd94;
	// begin inline asm
	ld.global.nc.u32 %r149, [%rd71];
	// end inline asm
	add.s32 	%r166, %r163, 768;
	cvt.s64.s32 	%rd95, %r166;
	add.s64 	%rd96, %rd95, %rd85;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd72, %rd1, %rd97;
	// begin inline asm
	ld.global.nc.u32 %r150, [%rd72];
	// end inline asm
	add.s32 	%r167, %r163, 1024;
	cvt.s64.s32 	%rd98, %r167;
	add.s64 	%rd99, %rd98, %rd85;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd73, %rd1, %rd100;
	// begin inline asm
	ld.global.nc.u32 %r151, [%rd73];
	// end inline asm
	add.s32 	%r168, %r163, 1280;
	cvt.s64.s32 	%rd101, %r168;
	add.s64 	%rd102, %rd101, %rd85;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd74, %rd1, %rd103;
	// begin inline asm
	ld.global.nc.u32 %r152, [%rd74];
	// end inline asm
	add.s32 	%r169, %r163, 1536;
	cvt.s64.s32 	%rd104, %r169;
	add.s64 	%rd105, %rd104, %rd85;
	shl.b64 	%rd106, %rd105, 2;
	add.s64 	%rd75, %rd1, %rd106;
	// begin inline asm
	ld.global.nc.u32 %r153, [%rd75];
	// end inline asm
	add.s32 	%r170, %r163, 1792;
	cvt.s64.s32 	%rd107, %r170;
	add.s64 	%rd108, %rd107, %rd85;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd76, %rd1, %rd109;
	// begin inline asm
	ld.global.nc.u32 %r154, [%rd76];
	// end inline asm
	add.s32 	%r171, %r163, 2048;
	cvt.s64.s32 	%rd110, %r171;
	add.s64 	%rd111, %rd110, %rd85;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd77, %rd1, %rd112;
	// begin inline asm
	ld.global.nc.u32 %r155, [%rd77];
	// end inline asm
	add.s32 	%r172, %r163, 2304;
	cvt.s64.s32 	%rd113, %r172;
	add.s64 	%rd114, %rd113, %rd85;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd78, %rd1, %rd115;
	// begin inline asm
	ld.global.nc.u32 %r156, [%rd78];
	// end inline asm
	add.s32 	%r173, %r163, 2560;
	cvt.s64.s32 	%rd116, %r173;
	add.s64 	%rd117, %rd116, %rd85;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd79, %rd1, %rd118;
	// begin inline asm
	ld.global.nc.u32 %r157, [%rd79];
	// end inline asm
	add.s32 	%r174, %r163, 2816;
	cvt.s64.s32 	%rd119, %r174;
	add.s64 	%rd120, %rd119, %rd85;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd80, %rd1, %rd121;
	// begin inline asm
	ld.global.nc.u32 %r158, [%rd80];
	// end inline asm
	add.s32 	%r175, %r163, 3072;
	cvt.s64.s32 	%rd122, %r175;
	add.s64 	%rd123, %rd122, %rd85;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd81, %rd1, %rd124;
	// begin inline asm
	ld.global.nc.u32 %r159, [%rd81];
	// end inline asm
	add.s32 	%r176, %r163, 3328;
	cvt.s64.s32 	%rd125, %r176;
	add.s64 	%rd126, %rd125, %rd85;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd82, %rd1, %rd127;
	// begin inline asm
	ld.global.nc.u32 %r160, [%rd82];
	// end inline asm
	add.s32 	%r177, %r163, 3584;
	cvt.s64.s32 	%rd128, %r177;
	add.s64 	%rd129, %rd128, %rd85;
	shl.b64 	%rd130, %rd129, 2;
	add.s64 	%rd83, %rd1, %rd130;
	// begin inline asm
	ld.global.nc.u32 %r161, [%rd83];
	// end inline asm
	add.s32 	%r178, %r163, 3840;
	cvt.s64.s32 	%rd131, %r178;
	add.s64 	%rd132, %rd131, %rd85;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd84, %rd1, %rd133;
	// begin inline asm
	ld.global.nc.u32 %r162, [%rd84];
	// end inline asm
	mov.b32 	%f84, %r147;
	add.f32 	%f85, %f391, %f84;
	mov.b32 	%f86, %r148;
	add.f32 	%f87, %f85, %f86;
	mov.b32 	%f88, %r149;
	add.f32 	%f89, %f87, %f88;
	mov.b32 	%f90, %r150;
	add.f32 	%f91, %f89, %f90;
	mov.b32 	%f92, %r151;
	add.f32 	%f93, %f91, %f92;
	mov.b32 	%f94, %r152;
	add.f32 	%f95, %f93, %f94;
	mov.b32 	%f96, %r153;
	add.f32 	%f97, %f95, %f96;
	mov.b32 	%f98, %r154;
	add.f32 	%f99, %f97, %f98;
	mov.b32 	%f100, %r155;
	add.f32 	%f101, %f99, %f100;
	mov.b32 	%f102, %r156;
	add.f32 	%f103, %f101, %f102;
	mov.b32 	%f104, %r157;
	add.f32 	%f105, %f103, %f104;
	mov.b32 	%f106, %r158;
	add.f32 	%f107, %f105, %f106;
	mov.b32 	%f108, %r159;
	add.f32 	%f109, %f107, %f108;
	mov.b32 	%f110, %r160;
	add.f32 	%f111, %f109, %f110;
	mov.b32 	%f112, %r161;
	add.f32 	%f113, %f111, %f112;
	mov.b32 	%f114, %r162;
	add.f32 	%f391, %f113, %f114;
	sub.s32 	%r179, %r1, %r514;
	setp.lt.u32 	%p5, %r179, %r2;
	add.s32 	%r514, %r514, %r2;
	add.s32 	%r513, %r513, %r2;
	@%p5 bra 	$L__BB37_14;
	bra.uni 	$L__BB37_4;

$L__BB37_38:
	cvt.u64.u32 	%rd168, %r532;
	mov.u32 	%r547, %tid.x;
	shl.b32 	%r333, %r547, 2;
	cvt.u64.u32 	%rd169, %r333;
	add.s64 	%rd170, %rd168, %rd169;
	shl.b64 	%rd171, %rd170, 2;
	add.s64 	%rd158, %rd1, %rd171;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd156, %rd157}, [%rd158];
	// end inline asm
	mov.b64 	{%r334, %r335}, %rd157;
	mov.b64 	{%r336, %r337}, %rd156;
	add.s64 	%rd161, %rd158, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd159, %rd160}, [%rd161];
	// end inline asm
	mov.b64 	{%r338, %r339}, %rd160;
	mov.b64 	{%r340, %r341}, %rd159;
	add.s64 	%rd164, %rd158, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd162, %rd163}, [%rd164];
	// end inline asm
	mov.b64 	{%r342, %r343}, %rd163;
	mov.b64 	{%r344, %r345}, %rd162;
	add.s64 	%rd167, %rd158, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd165, %rd166}, [%rd167];
	// end inline asm
	mov.b64 	{%r346, %r347}, %rd166;
	mov.b64 	{%r348, %r349}, %rd165;
	mov.b32 	%f220, %r336;
	mov.b32 	%f221, %r337;
	mov.b32 	%f222, %r334;
	mov.b32 	%f223, %r335;
	mov.b32 	%f224, %r340;
	mov.b32 	%f225, %r341;
	mov.b32 	%f226, %r338;
	mov.b32 	%f227, %r339;
	mov.b32 	%f228, %r344;
	mov.b32 	%f229, %r345;
	mov.b32 	%f230, %r342;
	mov.b32 	%f231, %r343;
	mov.b32 	%f232, %r348;
	mov.b32 	%f233, %r349;
	mov.b32 	%f234, %r346;
	mov.b32 	%f235, %r347;
	add.f32 	%f236, %f220, %f221;
	add.f32 	%f237, %f236, %f222;
	add.f32 	%f238, %f237, %f223;
	add.f32 	%f239, %f238, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f403, %f249, %f235;
	setp.lt.u32 	%p49, %r4, %r2;
	@%p49 bra 	$L__BB37_50;

	add.s32 	%r530, %r2, %r532;
	add.s32 	%r531, %r530, 768;
	add.s32 	%r350, %r547, %r2;
	add.s32 	%r529, %r350, %r532;

$L__BB37_40:
	add.s32 	%r351, %r1, -4096;
	add.s32 	%r532, %r532, %r2;
	setp.gt.u32 	%p50, %r532, %r351;
	@%p50 bra 	$L__BB37_42;

	cvt.u64.u32 	%rd184, %r532;
	mov.u32 	%r352, %tid.x;
	shl.b32 	%r353, %r352, 2;
	cvt.u64.u32 	%rd185, %r353;
	add.s64 	%rd186, %rd184, %rd185;
	shl.b64 	%rd187, %rd186, 2;
	add.s64 	%rd174, %rd1, %rd187;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd172, %rd173}, [%rd174];
	// end inline asm
	mov.b64 	{%r354, %r355}, %rd173;
	mov.b64 	{%r356, %r357}, %rd172;
	add.s64 	%rd177, %rd174, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd175, %rd176}, [%rd177];
	// end inline asm
	mov.b64 	{%r358, %r359}, %rd176;
	mov.b64 	{%r360, %r361}, %rd175;
	add.s64 	%rd180, %rd174, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd178, %rd179}, [%rd180];
	// end inline asm
	mov.b64 	{%r362, %r363}, %rd179;
	mov.b64 	{%r364, %r365}, %rd178;
	add.s64 	%rd183, %rd174, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd181, %rd182}, [%rd183];
	// end inline asm
	mov.b64 	{%r366, %r367}, %rd182;
	mov.b64 	{%r368, %r369}, %rd181;
	mov.b32 	%f250, %r356;
	mov.b32 	%f251, %r357;
	mov.b32 	%f252, %r354;
	mov.b32 	%f253, %r355;
	mov.b32 	%f254, %r360;
	mov.b32 	%f255, %r361;
	mov.b32 	%f256, %r358;
	mov.b32 	%f257, %r359;
	mov.b32 	%f258, %r364;
	mov.b32 	%f259, %r365;
	mov.b32 	%f260, %r362;
	mov.b32 	%f261, %r363;
	mov.b32 	%f262, %r368;
	mov.b32 	%f263, %r369;
	mov.b32 	%f264, %r366;
	mov.b32 	%f265, %r367;
	add.f32 	%f266, %f403, %f250;
	add.f32 	%f267, %f266, %f251;
	add.f32 	%f268, %f267, %f252;
	add.f32 	%f269, %f268, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f403, %f280, %f265;
	sub.s32 	%r370, %r1, %r532;
	setp.lt.u32 	%p51, %r370, %r2;
	add.s32 	%r531, %r531, %r2;
	add.s32 	%r530, %r530, %r2;
	add.s32 	%r529, %r529, %r2;
	@%p51 bra 	$L__BB37_50;
	bra.uni 	$L__BB37_40;

$L__BB37_28:
	mov.u32 	%r547, %tid.x;
	shr.s32 	%r281, %r547, 31;
	shr.u32 	%r282, %r281, 27;
	add.s32 	%r283, %r547, %r282;
	shr.s32 	%r51, %r283, 5;
	// begin inline asm
	mov.u32 %r253, %laneid;
	// end inline asm
	and.b32  	%r284, %r283, -32;
	add.s32 	%r285, %r284, 32;
	setp.gt.s32 	%p26, %r285, %r4;
	// begin inline asm
	mov.u32 %r254, %laneid;
	// end inline asm
	not.b32 	%r286, %r284;
	mov.u32 	%r279, -1;
	add.s32 	%r287, %r4, %r286;
	selp.b32 	%r278, %r287, 31, %p26;
	mov.b32 	%r256, %f397;
	mov.u32 	%r257, 1;
	// begin inline asm
	shfl.sync.down.b32 %r255, %r256, %r257, %r278, %r279;
	// end inline asm
	setp.lt.s32 	%p27, %r254, %r278;
	mov.b32 	%f161, %r255;
	add.f32 	%f162, %f397, %f161;
	selp.f32 	%f163, %f162, %f397, %p27;
	mov.b32 	%r261, %f163;
	mov.u32 	%r262, 2;
	// begin inline asm
	shfl.sync.down.b32 %r260, %r261, %r262, %r278, %r279;
	// end inline asm
	add.s32 	%r288, %r254, 2;
	setp.gt.s32 	%p28, %r288, %r278;
	mov.b32 	%f164, %r260;
	add.f32 	%f165, %f163, %f164;
	selp.f32 	%f166, %f163, %f165, %p28;
	mov.b32 	%r266, %f166;
	mov.u32 	%r267, 4;
	// begin inline asm
	shfl.sync.down.b32 %r265, %r266, %r267, %r278, %r279;
	// end inline asm
	add.s32 	%r289, %r254, 4;
	setp.gt.s32 	%p29, %r289, %r278;
	mov.b32 	%f167, %r265;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r271, %f169;
	mov.u32 	%r272, 8;
	// begin inline asm
	shfl.sync.down.b32 %r270, %r271, %r272, %r278, %r279;
	// end inline asm
	add.s32 	%r290, %r254, 8;
	setp.gt.s32 	%p30, %r290, %r278;
	mov.b32 	%f170, %r270;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r276, %f172;
	mov.u32 	%r277, 16;
	// begin inline asm
	shfl.sync.down.b32 %r275, %r276, %r277, %r278, %r279;
	// end inline asm
	add.s32 	%r291, %r254, 16;
	setp.gt.s32 	%p31, %r291, %r278;
	mov.b32 	%f173, %r275;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f410, %f172, %f174, %p31;
	setp.ne.s32 	%p32, %r253, 0;
	@%p32 bra 	$L__BB37_30;

	shl.b32 	%r292, %r51, 2;
	mov.u32 	%r293, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r294, %r293, %r292;
	st.shared.f32 	[%r294+8], %f410;

$L__BB37_30:
	bar.sync 	0;
	setp.ne.s32 	%p33, %r547, 0;
	@%p33 bra 	$L__BB37_73;

	setp.gt.s32 	%p34, %r4, 32;
	mov.u32 	%r547, 0;
	ld.shared.f32 	%f175, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f176, %f410, %f175;
	selp.f32 	%f177, %f176, %f410, %p34;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f179, %f177, %f178;
	setp.gt.s32 	%p35, %r4, 64;
	selp.f32 	%f180, %f179, %f177, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r4, 96;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r4, 128;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r4, 160;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r4, 192;
	selp.f32 	%f410, %f191, %f189, %p39;
	setp.lt.s32 	%p40, %r4, 225;
	@%p40 bra 	$L__BB37_73;

	ld.shared.f32 	%f192, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f410, %f192;
	bra.uni 	$L__BB37_73;

$L__BB37_64:
	shr.s32 	%r461, %r547, 31;
	shr.u32 	%r462, %r461, 27;
	add.s32 	%r463, %r547, %r462;
	shr.s32 	%r105, %r463, 5;
	// begin inline asm
	mov.u32 %r434, %laneid;
	// end inline asm
	and.b32  	%r464, %r463, -32;
	add.s32 	%r465, %r464, 32;
	setp.gt.s32 	%p72, %r465, %r4;
	// begin inline asm
	mov.u32 %r435, %laneid;
	// end inline asm
	not.b32 	%r466, %r464;
	mov.u32 	%r460, -1;
	add.s32 	%r467, %r4, %r466;
	selp.b32 	%r459, %r467, 31, %p72;
	mov.b32 	%r437, %f409;
	mov.u32 	%r438, 1;
	// begin inline asm
	shfl.sync.down.b32 %r436, %r437, %r438, %r459, %r460;
	// end inline asm
	setp.lt.s32 	%p73, %r435, %r459;
	mov.b32 	%f327, %r436;
	add.f32 	%f328, %f409, %f327;
	selp.f32 	%f329, %f328, %f409, %p73;
	mov.b32 	%r442, %f329;
	mov.u32 	%r443, 2;
	// begin inline asm
	shfl.sync.down.b32 %r441, %r442, %r443, %r459, %r460;
	// end inline asm
	add.s32 	%r468, %r435, 2;
	setp.gt.s32 	%p74, %r468, %r459;
	mov.b32 	%f330, %r441;
	add.f32 	%f331, %f329, %f330;
	selp.f32 	%f332, %f329, %f331, %p74;
	mov.b32 	%r447, %f332;
	mov.u32 	%r448, 4;
	// begin inline asm
	shfl.sync.down.b32 %r446, %r447, %r448, %r459, %r460;
	// end inline asm
	add.s32 	%r469, %r435, 4;
	setp.gt.s32 	%p75, %r469, %r459;
	mov.b32 	%f333, %r446;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r452, %f335;
	mov.u32 	%r453, 8;
	// begin inline asm
	shfl.sync.down.b32 %r451, %r452, %r453, %r459, %r460;
	// end inline asm
	add.s32 	%r470, %r435, 8;
	setp.gt.s32 	%p76, %r470, %r459;
	mov.b32 	%f336, %r451;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r457, %f338;
	mov.u32 	%r458, 16;
	// begin inline asm
	shfl.sync.down.b32 %r456, %r457, %r458, %r459, %r460;
	// end inline asm
	add.s32 	%r471, %r435, 16;
	setp.gt.s32 	%p77, %r471, %r459;
	mov.b32 	%f339, %r456;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f410, %f338, %f340, %p77;
	setp.ne.s32 	%p78, %r434, 0;
	@%p78 bra 	$L__BB37_66;

	shl.b32 	%r472, %r105, 2;
	mov.u32 	%r473, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r474, %r473, %r472;
	st.shared.f32 	[%r474+8], %f410;

$L__BB37_66:
	bar.sync 	0;
	setp.ne.s32 	%p79, %r547, 0;
	@%p79 bra 	$L__BB37_73;

	setp.gt.s32 	%p80, %r4, 32;
	mov.u32 	%r547, 0;
	ld.shared.f32 	%f341, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f342, %f410, %f341;
	selp.f32 	%f343, %f342, %f410, %p80;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f345, %f343, %f344;
	setp.gt.s32 	%p81, %r4, 64;
	selp.f32 	%f346, %f345, %f343, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r4, 96;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r4, 128;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r4, 160;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r4, 192;
	selp.f32 	%f410, %f357, %f355, %p85;
	setp.lt.s32 	%p86, %r4, 225;
	@%p86 bra 	$L__BB37_73;

	ld.shared.f32 	%f358, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f410, %f358;
	bra.uni 	$L__BB37_73;

$L__BB37_6:
	setp.le.u32 	%p6, %r1, %r514;
	@%p6 bra 	$L__BB37_14;

	sub.s32 	%r12, %r1, %r514;
	setp.ge.s32 	%p7, %r518, %r12;
	@%p7 bra 	$L__BB37_14;

	not.b32 	%r181, %r518;
	add.s32 	%r182, %r1, %r181;
	sub.s32 	%r14, %r182, %r514;
	shr.u32 	%r183, %r14, 8;
	add.s32 	%r184, %r183, 1;
	and.b32  	%r517, %r184, 3;
	setp.eq.s32 	%p8, %r517, 0;
	@%p8 bra 	$L__BB37_11;

	mov.u32 	%r518, %tid.x;

$L__BB37_10:
	.pragma "nounroll";
	mul.wide.u32 	%rd135, %r513, 4;
	add.s64 	%rd134, %rd1, %rd135;
	// begin inline asm
	ld.global.nc.u32 %r185, [%rd134];
	// end inline asm
	mov.b32 	%f116, %r185;
	add.f32 	%f391, %f391, %f116;
	add.s32 	%r518, %r518, 256;
	add.s32 	%r513, %r513, 256;
	add.s32 	%r517, %r517, -1;
	setp.ne.s32 	%p9, %r517, 0;
	@%p9 bra 	$L__BB37_10;

$L__BB37_11:
	setp.lt.u32 	%p10, %r14, 768;
	@%p10 bra 	$L__BB37_14;

	add.s32 	%r519, %r518, %r514;
	add.s32 	%r520, %r519, 768;

$L__BB37_13:
	mul.wide.u32 	%rd140, %r519, 4;
	add.s64 	%rd136, %rd1, %rd140;
	// begin inline asm
	ld.global.nc.u32 %r186, [%rd136];
	// end inline asm
	mov.b32 	%f117, %r186;
	add.f32 	%f118, %f391, %f117;
	add.s32 	%r190, %r520, -512;
	mul.wide.u32 	%rd141, %r190, 4;
	add.s64 	%rd137, %rd1, %rd141;
	// begin inline asm
	ld.global.nc.u32 %r187, [%rd137];
	// end inline asm
	mov.b32 	%f119, %r187;
	add.f32 	%f120, %f118, %f119;
	add.s32 	%r191, %r520, -256;
	mul.wide.u32 	%rd142, %r191, 4;
	add.s64 	%rd138, %rd1, %rd142;
	// begin inline asm
	ld.global.nc.u32 %r188, [%rd138];
	// end inline asm
	mov.b32 	%f121, %r188;
	add.f32 	%f122, %f120, %f121;
	mul.wide.u32 	%rd143, %r520, 4;
	add.s64 	%rd139, %rd1, %rd143;
	// begin inline asm
	ld.global.nc.u32 %r189, [%rd139];
	// end inline asm
	mov.b32 	%f123, %r189;
	add.f32 	%f391, %f122, %f123;
	add.s32 	%r520, %r520, 1024;
	add.s32 	%r519, %r519, 1024;
	add.s32 	%r518, %r518, 1024;
	setp.lt.s32 	%p11, %r518, %r12;
	@%p11 bra 	$L__BB37_13;

$L__BB37_14:
	// begin inline asm
	mov.u32 %r192, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r193, %laneid;
	// end inline asm
	mov.b32 	%r195, %f391;
	mov.u32 	%r196, 1;
	mov.u32 	%r217, 31;
	mov.u32 	%r218, -1;
	// begin inline asm
	shfl.sync.down.b32 %r194, %r195, %r196, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p12, %r193, 30;
	mov.b32 	%f124, %r194;
	add.f32 	%f125, %f391, %f124;
	selp.f32 	%f126, %f391, %f125, %p12;
	mov.b32 	%r200, %f126;
	mov.u32 	%r201, 2;
	// begin inline asm
	shfl.sync.down.b32 %r199, %r200, %r201, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p13, %r193, 29;
	mov.b32 	%f127, %r199;
	add.f32 	%f128, %f126, %f127;
	selp.f32 	%f129, %f126, %f128, %p13;
	mov.b32 	%r205, %f129;
	mov.u32 	%r206, 4;
	// begin inline asm
	shfl.sync.down.b32 %r204, %r205, %r206, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p14, %r193, 27;
	mov.b32 	%f130, %r204;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r210, %f132;
	mov.u32 	%r211, 8;
	// begin inline asm
	shfl.sync.down.b32 %r209, %r210, %r211, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p15, %r193, 23;
	mov.b32 	%f133, %r209;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r215, %f135;
	mov.u32 	%r216, 16;
	// begin inline asm
	shfl.sync.down.b32 %r214, %r215, %r216, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p16, %r193, 15;
	mov.b32 	%f136, %r214;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f410, %f135, %f137, %p16;
	setp.ne.s32 	%p17, %r192, 0;
	@%p17 bra 	$L__BB37_16;

	mov.u32 	%r219, %tid.x;
	shr.s32 	%r220, %r219, 31;
	shr.u32 	%r221, %r220, 27;
	add.s32 	%r222, %r219, %r221;
	shr.s32 	%r223, %r222, 5;
	shl.b32 	%r224, %r223, 2;
	mov.u32 	%r225, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r226, %r225, %r224;
	st.shared.f32 	[%r226+8], %f410;

$L__BB37_16:
	bar.sync 	0;
	mov.u32 	%r547, %tid.x;
	setp.ne.s32 	%p18, %r547, 0;
	@%p18 bra 	$L__BB37_73;

	mov.u32 	%r547, 0;
	ld.shared.f32 	%f138, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f139, %f410, %f138;
	ld.shared.f32 	%f140, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f141, %f139, %f140;
	ld.shared.f32 	%f142, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f143, %f141, %f142;
	ld.shared.f32 	%f144, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f145, %f143, %f144;
	ld.shared.f32 	%f146, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f147, %f145, %f146;
	ld.shared.f32 	%f148, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f149, %f147, %f148;
	ld.shared.f32 	%f150, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f149, %f150;
	bra.uni 	$L__BB37_73;

$L__BB37_42:
	setp.le.u32 	%p52, %r1, %r532;
	@%p52 bra 	$L__BB37_50;

	sub.s32 	%r66, %r1, %r532;
	mov.u32 	%r536, %tid.x;
	setp.ge.s32 	%p53, %r536, %r66;
	@%p53 bra 	$L__BB37_50;

	not.b32 	%r372, %r536;
	add.s32 	%r373, %r1, %r372;
	sub.s32 	%r68, %r373, %r532;
	shr.u32 	%r374, %r68, 8;
	add.s32 	%r375, %r374, 1;
	and.b32  	%r535, %r375, 3;
	setp.eq.s32 	%p54, %r535, 0;
	@%p54 bra 	$L__BB37_47;

	mov.u32 	%r536, %tid.x;

$L__BB37_46:
	.pragma "nounroll";
	mul.wide.u32 	%rd189, %r529, 4;
	add.s64 	%rd188, %rd1, %rd189;
	// begin inline asm
	ld.global.nc.u32 %r376, [%rd188];
	// end inline asm
	mov.b32 	%f282, %r376;
	add.f32 	%f403, %f403, %f282;
	add.s32 	%r536, %r536, 256;
	add.s32 	%r529, %r529, 256;
	add.s32 	%r535, %r535, -1;
	setp.ne.s32 	%p55, %r535, 0;
	@%p55 bra 	$L__BB37_46;

$L__BB37_47:
	setp.lt.u32 	%p56, %r68, 768;
	@%p56 bra 	$L__BB37_50;

	add.s32 	%r538, %r536, %r531;
	add.s32 	%r537, %r536, %r530;

$L__BB37_49:
	mul.wide.u32 	%rd194, %r537, 4;
	add.s64 	%rd190, %rd1, %rd194;
	// begin inline asm
	ld.global.nc.u32 %r377, [%rd190];
	// end inline asm
	mov.b32 	%f283, %r377;
	add.f32 	%f284, %f403, %f283;
	add.s32 	%r381, %r538, -512;
	mul.wide.u32 	%rd195, %r381, 4;
	add.s64 	%rd191, %rd1, %rd195;
	// begin inline asm
	ld.global.nc.u32 %r378, [%rd191];
	// end inline asm
	mov.b32 	%f285, %r378;
	add.f32 	%f286, %f284, %f285;
	add.s32 	%r382, %r538, -256;
	mul.wide.u32 	%rd196, %r382, 4;
	add.s64 	%rd192, %rd1, %rd196;
	// begin inline asm
	ld.global.nc.u32 %r379, [%rd192];
	// end inline asm
	mov.b32 	%f287, %r379;
	add.f32 	%f288, %f286, %f287;
	mul.wide.u32 	%rd197, %r538, 4;
	add.s64 	%rd193, %rd1, %rd197;
	// begin inline asm
	ld.global.nc.u32 %r380, [%rd193];
	// end inline asm
	mov.b32 	%f289, %r380;
	add.f32 	%f403, %f288, %f289;
	add.s32 	%r538, %r538, 1024;
	add.s32 	%r537, %r537, 1024;
	add.s32 	%r536, %r536, 1024;
	setp.lt.s32 	%p57, %r536, %r66;
	@%p57 bra 	$L__BB37_49;

$L__BB37_50:
	// begin inline asm
	mov.u32 %r383, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r384, %laneid;
	// end inline asm
	mov.b32 	%r386, %f403;
	mov.u32 	%r387, 1;
	mov.u32 	%r408, 31;
	mov.u32 	%r409, -1;
	// begin inline asm
	shfl.sync.down.b32 %r385, %r386, %r387, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p58, %r384, 30;
	mov.b32 	%f290, %r385;
	add.f32 	%f291, %f403, %f290;
	selp.f32 	%f292, %f403, %f291, %p58;
	mov.b32 	%r391, %f292;
	mov.u32 	%r392, 2;
	// begin inline asm
	shfl.sync.down.b32 %r390, %r391, %r392, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p59, %r384, 29;
	mov.b32 	%f293, %r390;
	add.f32 	%f294, %f292, %f293;
	selp.f32 	%f295, %f292, %f294, %p59;
	mov.b32 	%r396, %f295;
	mov.u32 	%r397, 4;
	// begin inline asm
	shfl.sync.down.b32 %r395, %r396, %r397, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p60, %r384, 27;
	mov.b32 	%f296, %r395;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r401, %f298;
	mov.u32 	%r402, 8;
	// begin inline asm
	shfl.sync.down.b32 %r400, %r401, %r402, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p61, %r384, 23;
	mov.b32 	%f299, %r400;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r406, %f301;
	mov.u32 	%r407, 16;
	// begin inline asm
	shfl.sync.down.b32 %r405, %r406, %r407, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p62, %r384, 15;
	mov.b32 	%f302, %r405;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f410, %f301, %f303, %p62;
	setp.ne.s32 	%p63, %r383, 0;
	@%p63 bra 	$L__BB37_52;

	mov.u32 	%r410, %tid.x;
	shr.s32 	%r411, %r410, 31;
	shr.u32 	%r412, %r411, 27;
	add.s32 	%r413, %r410, %r412;
	shr.s32 	%r414, %r413, 5;
	shl.b32 	%r415, %r414, 2;
	mov.u32 	%r416, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r417, %r416, %r415;
	st.shared.f32 	[%r417+8], %f410;

$L__BB37_52:
	bar.sync 	0;
	setp.ne.s32 	%p64, %r547, 0;
	@%p64 bra 	$L__BB37_73;

	mov.u32 	%r547, 0;
	ld.shared.f32 	%f304, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f305, %f410, %f304;
	ld.shared.f32 	%f306, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f307, %f305, %f306;
	ld.shared.f32 	%f308, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f309, %f307, %f308;
	ld.shared.f32 	%f310, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f311, %f309, %f310;
	ld.shared.f32 	%f312, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f313, %f311, %f312;
	ld.shared.f32 	%f314, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f315, %f313, %f314;
	ld.shared.f32 	%f316, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfjS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f315, %f316;

$L__BB37_73:
	setp.ne.s32 	%p94, %r547, 0;
	@%p94 bra 	$L__BB37_75;

	cvta.to.global.u64 	%rd210, %rd2;
	mul.wide.u32 	%rd211, %r108, 4;
	add.s64 	%rd212, %rd210, %rd211;
	st.global.f32 	[%rd212], %f410;

$L__BB37_75:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_
.visible .entry _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_(
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_1,
	.param .u32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_2,
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_3[1],
	.param .f32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_4
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<97>;
	.reg .f32 	%f<417>;
	.reg .b32 	%r<421>;
	.reg .b64 	%rd<136>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage[44];

	ld.param.u64 	%rd31, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_0];
	ld.param.u64 	%rd32, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_1];
	ld.param.u32 	%r59, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_2];
	ld.param.f32 	%f56, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_4];
	setp.eq.s32 	%p1, %r59, 0;
	@%p1 bra 	$L__BB38_76;

	and.b64  	%rd33, %rd31, 15;
	setp.eq.s64 	%p2, %rd33, 0;
	mov.u32 	%r420, %tid.x;
	@%p2 bra 	$L__BB38_38;

	setp.lt.s32 	%p3, %r59, 4096;
	@%p3 bra 	$L__BB38_19;
	bra.uni 	$L__BB38_3;

$L__BB38_19:
	setp.ge.s32 	%p20, %r420, %r59;
	mov.f32 	%f402, 0f00000000;
	mov.u32 	%r406, %r420;
	@%p20 bra 	$L__BB38_21;

	mul.wide.s32 	%rd75, %r420, 4;
	add.s64 	%rd74, %rd31, %rd75;
	// begin inline asm
	ld.global.nc.u32 %r140, [%rd74];
	// end inline asm
	mov.b32 	%f402, %r140;
	add.s32 	%r406, %r420, 256;

$L__BB38_21:
	setp.ge.s32 	%p21, %r406, %r59;
	@%p21 bra 	$L__BB38_28;

	not.b32 	%r141, %r406;
	add.s32 	%r20, %r141, %r59;
	shr.u32 	%r142, %r20, 8;
	add.s32 	%r143, %r142, 1;
	and.b32  	%r405, %r143, 3;
	setp.eq.s32 	%p22, %r405, 0;
	@%p22 bra 	$L__BB38_25;

	mul.wide.s32 	%rd76, %r406, 4;
	add.s64 	%rd129, %rd31, %rd76;

$L__BB38_24:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r144, [%rd129];
	// end inline asm
	mov.b32 	%f156, %r144;
	add.f32 	%f402, %f402, %f156;
	add.s32 	%r406, %r406, 256;
	add.s64 	%rd129, %rd129, 1024;
	add.s32 	%r405, %r405, -1;
	setp.ne.s32 	%p23, %r405, 0;
	@%p23 bra 	$L__BB38_24;

$L__BB38_25:
	setp.lt.u32 	%p24, %r20, 768;
	@%p24 bra 	$L__BB38_28;

	mul.wide.s32 	%rd78, %r406, 4;
	add.s64 	%rd130, %rd31, %rd78;

$L__BB38_27:
	// begin inline asm
	ld.global.nc.u32 %r145, [%rd130];
	// end inline asm
	mov.b32 	%f157, %r145;
	add.f32 	%f158, %f402, %f157;
	add.s64 	%rd80, %rd130, 1024;
	// begin inline asm
	ld.global.nc.u32 %r146, [%rd80];
	// end inline asm
	mov.b32 	%f159, %r146;
	add.f32 	%f160, %f158, %f159;
	add.s64 	%rd81, %rd130, 2048;
	// begin inline asm
	ld.global.nc.u32 %r147, [%rd81];
	// end inline asm
	mov.b32 	%f161, %r147;
	add.f32 	%f162, %f160, %f161;
	add.s64 	%rd82, %rd130, 3072;
	// begin inline asm
	ld.global.nc.u32 %r148, [%rd82];
	// end inline asm
	mov.b32 	%f163, %r148;
	add.f32 	%f402, %f162, %f163;
	add.s64 	%rd130, %rd130, 4096;
	add.s32 	%r406, %r406, 1024;
	setp.lt.s32 	%p25, %r406, %r59;
	@%p25 bra 	$L__BB38_27;

$L__BB38_28:
	setp.gt.s32 	%p26, %r59, 255;
	@%p26 bra 	$L__BB38_34;
	bra.uni 	$L__BB38_29;

$L__BB38_34:
	// begin inline asm
	mov.u32 %r192, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r193, %laneid;
	// end inline asm
	mov.b32 	%r195, %f402;
	mov.u32 	%r196, 1;
	mov.u32 	%r217, 31;
	mov.u32 	%r218, -1;
	// begin inline asm
	shfl.sync.down.b32 %r194, %r195, %r196, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p42, %r193, 30;
	mov.b32 	%f196, %r194;
	add.f32 	%f197, %f402, %f196;
	selp.f32 	%f198, %f402, %f197, %p42;
	mov.b32 	%r200, %f198;
	mov.u32 	%r201, 2;
	// begin inline asm
	shfl.sync.down.b32 %r199, %r200, %r201, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p43, %r193, 29;
	mov.b32 	%f199, %r199;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r205, %f201;
	mov.u32 	%r206, 4;
	// begin inline asm
	shfl.sync.down.b32 %r204, %r205, %r206, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p44, %r193, 27;
	mov.b32 	%f202, %r204;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r210, %f204;
	mov.u32 	%r211, 8;
	// begin inline asm
	shfl.sync.down.b32 %r209, %r210, %r211, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p45, %r193, 23;
	mov.b32 	%f205, %r209;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f207, %f204, %f206, %p45;
	mov.b32 	%r215, %f207;
	mov.u32 	%r216, 16;
	// begin inline asm
	shfl.sync.down.b32 %r214, %r215, %r216, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p46, %r193, 15;
	mov.b32 	%f208, %r214;
	add.f32 	%f209, %f207, %f208;
	selp.f32 	%f416, %f207, %f209, %p46;
	setp.ne.s32 	%p47, %r192, 0;
	@%p47 bra 	$L__BB38_36;

	shr.s32 	%r219, %r420, 31;
	shr.u32 	%r220, %r219, 27;
	add.s32 	%r221, %r420, %r220;
	shr.s32 	%r222, %r221, 5;
	shl.b32 	%r223, %r222, 2;
	mov.u32 	%r224, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r225, %r224, %r223;
	st.shared.f32 	[%r225+8], %f416;

$L__BB38_36:
	bar.sync 	0;
	setp.ne.s32 	%p48, %r420, 0;
	@%p48 bra 	$L__BB38_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f210, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f211, %f416, %f210;
	ld.shared.f32 	%f212, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f213, %f211, %f212;
	ld.shared.f32 	%f214, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f215, %f213, %f214;
	ld.shared.f32 	%f216, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f217, %f215, %f216;
	ld.shared.f32 	%f218, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f219, %f217, %f218;
	ld.shared.f32 	%f220, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f221, %f219, %f220;
	ld.shared.f32 	%f222, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f221, %f222;
	bra.uni 	$L__BB38_74;

$L__BB38_76:
	mov.u32 	%r395, %tid.x;
	setp.ne.s32 	%p96, %r395, 0;
	@%p96 bra 	$L__BB38_78;

	cvta.to.global.u64 	%rd125, %rd32;
	st.global.f32 	[%rd125], %f56;
	bra.uni 	$L__BB38_78;

$L__BB38_38:
	setp.lt.s32 	%p49, %r59, 4096;
	@%p49 bra 	$L__BB38_55;
	bra.uni 	$L__BB38_39;

$L__BB38_55:
	setp.ge.s32 	%p66, %r420, %r59;
	mov.f32 	%f415, 0f00000000;
	mov.u32 	%r418, %r420;
	@%p66 bra 	$L__BB38_57;

	mul.wide.s32 	%rd116, %r420, 4;
	add.s64 	%rd115, %rd31, %rd116;
	// begin inline asm
	ld.global.nc.u32 %r308, [%rd115];
	// end inline asm
	mov.b32 	%f415, %r308;
	add.s32 	%r418, %r420, 256;

$L__BB38_57:
	setp.ge.s32 	%p67, %r418, %r59;
	@%p67 bra 	$L__BB38_64;

	not.b32 	%r309, %r418;
	add.s32 	%r48, %r309, %r59;
	shr.u32 	%r310, %r48, 8;
	add.s32 	%r311, %r310, 1;
	and.b32  	%r417, %r311, 3;
	setp.eq.s32 	%p68, %r417, 0;
	@%p68 bra 	$L__BB38_61;

	mul.wide.s32 	%rd117, %r418, 4;
	add.s64 	%rd134, %rd31, %rd117;

$L__BB38_60:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r312, [%rd134];
	// end inline asm
	mov.b32 	%f322, %r312;
	add.f32 	%f415, %f415, %f322;
	add.s32 	%r418, %r418, 256;
	add.s64 	%rd134, %rd134, 1024;
	add.s32 	%r417, %r417, -1;
	setp.ne.s32 	%p69, %r417, 0;
	@%p69 bra 	$L__BB38_60;

$L__BB38_61:
	setp.lt.u32 	%p70, %r48, 768;
	@%p70 bra 	$L__BB38_64;

	mul.wide.s32 	%rd119, %r418, 4;
	add.s64 	%rd135, %rd31, %rd119;

$L__BB38_63:
	// begin inline asm
	ld.global.nc.u32 %r313, [%rd135];
	// end inline asm
	mov.b32 	%f323, %r313;
	add.f32 	%f324, %f415, %f323;
	add.s64 	%rd121, %rd135, 1024;
	// begin inline asm
	ld.global.nc.u32 %r314, [%rd121];
	// end inline asm
	mov.b32 	%f325, %r314;
	add.f32 	%f326, %f324, %f325;
	add.s64 	%rd122, %rd135, 2048;
	// begin inline asm
	ld.global.nc.u32 %r315, [%rd122];
	// end inline asm
	mov.b32 	%f327, %r315;
	add.f32 	%f328, %f326, %f327;
	add.s64 	%rd123, %rd135, 3072;
	// begin inline asm
	ld.global.nc.u32 %r316, [%rd123];
	// end inline asm
	mov.b32 	%f329, %r316;
	add.f32 	%f415, %f328, %f329;
	add.s64 	%rd135, %rd135, 4096;
	add.s32 	%r418, %r418, 1024;
	setp.lt.s32 	%p71, %r418, %r59;
	@%p71 bra 	$L__BB38_63;

$L__BB38_64:
	setp.gt.s32 	%p72, %r59, 255;
	@%p72 bra 	$L__BB38_70;
	bra.uni 	$L__BB38_65;

$L__BB38_70:
	// begin inline asm
	mov.u32 %r360, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r361, %laneid;
	// end inline asm
	mov.b32 	%r363, %f415;
	mov.u32 	%r364, 1;
	mov.u32 	%r385, 31;
	mov.u32 	%r386, -1;
	// begin inline asm
	shfl.sync.down.b32 %r362, %r363, %r364, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p88, %r361, 30;
	mov.b32 	%f362, %r362;
	add.f32 	%f363, %f415, %f362;
	selp.f32 	%f364, %f415, %f363, %p88;
	mov.b32 	%r368, %f364;
	mov.u32 	%r369, 2;
	// begin inline asm
	shfl.sync.down.b32 %r367, %r368, %r369, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p89, %r361, 29;
	mov.b32 	%f365, %r367;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r373, %f367;
	mov.u32 	%r374, 4;
	// begin inline asm
	shfl.sync.down.b32 %r372, %r373, %r374, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p90, %r361, 27;
	mov.b32 	%f368, %r372;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r378, %f370;
	mov.u32 	%r379, 8;
	// begin inline asm
	shfl.sync.down.b32 %r377, %r378, %r379, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p91, %r361, 23;
	mov.b32 	%f371, %r377;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f373, %f370, %f372, %p91;
	mov.b32 	%r383, %f373;
	mov.u32 	%r384, 16;
	// begin inline asm
	shfl.sync.down.b32 %r382, %r383, %r384, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p92, %r361, 15;
	mov.b32 	%f374, %r382;
	add.f32 	%f375, %f373, %f374;
	selp.f32 	%f416, %f373, %f375, %p92;
	setp.ne.s32 	%p93, %r360, 0;
	@%p93 bra 	$L__BB38_72;

	shr.s32 	%r387, %r420, 31;
	shr.u32 	%r388, %r387, 27;
	add.s32 	%r389, %r420, %r388;
	shr.s32 	%r390, %r389, 5;
	shl.b32 	%r391, %r390, 2;
	mov.u32 	%r392, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r393, %r392, %r391;
	st.shared.f32 	[%r393+8], %f416;

$L__BB38_72:
	bar.sync 	0;
	setp.ne.s32 	%p94, %r420, 0;
	@%p94 bra 	$L__BB38_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f376, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f377, %f416, %f376;
	ld.shared.f32 	%f378, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f379, %f377, %f378;
	ld.shared.f32 	%f380, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f381, %f379, %f380;
	ld.shared.f32 	%f382, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f383, %f381, %f382;
	ld.shared.f32 	%f384, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f385, %f383, %f384;
	ld.shared.f32 	%f386, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f387, %f385, %f386;
	ld.shared.f32 	%f388, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f387, %f388;
	bra.uni 	$L__BB38_74;

$L__BB38_3:
	mul.wide.s32 	%rd50, %r420, 4;
	add.s64 	%rd126, %rd31, %rd50;
	// begin inline asm
	ld.global.nc.u32 %r60, [%rd126];
	// end inline asm
	add.s64 	%rd35, %rd126, 1024;
	// begin inline asm
	ld.global.nc.u32 %r61, [%rd35];
	// end inline asm
	add.s64 	%rd36, %rd126, 2048;
	// begin inline asm
	ld.global.nc.u32 %r62, [%rd36];
	// end inline asm
	add.s64 	%rd37, %rd126, 3072;
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd37];
	// end inline asm
	add.s64 	%rd38, %rd126, 4096;
	// begin inline asm
	ld.global.nc.u32 %r64, [%rd38];
	// end inline asm
	add.s64 	%rd39, %rd126, 5120;
	// begin inline asm
	ld.global.nc.u32 %r65, [%rd39];
	// end inline asm
	add.s64 	%rd40, %rd126, 6144;
	// begin inline asm
	ld.global.nc.u32 %r66, [%rd40];
	// end inline asm
	add.s64 	%rd41, %rd126, 7168;
	// begin inline asm
	ld.global.nc.u32 %r67, [%rd41];
	// end inline asm
	add.s64 	%rd42, %rd126, 8192;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd42];
	// end inline asm
	add.s64 	%rd43, %rd126, 9216;
	// begin inline asm
	ld.global.nc.u32 %r69, [%rd43];
	// end inline asm
	add.s64 	%rd44, %rd126, 10240;
	// begin inline asm
	ld.global.nc.u32 %r70, [%rd44];
	// end inline asm
	add.s64 	%rd45, %rd126, 11264;
	// begin inline asm
	ld.global.nc.u32 %r71, [%rd45];
	// end inline asm
	add.s64 	%rd46, %rd126, 12288;
	// begin inline asm
	ld.global.nc.u32 %r72, [%rd46];
	// end inline asm
	add.s64 	%rd47, %rd126, 13312;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd47];
	// end inline asm
	add.s64 	%rd48, %rd126, 14336;
	// begin inline asm
	ld.global.nc.u32 %r74, [%rd48];
	// end inline asm
	add.s64 	%rd49, %rd126, 15360;
	// begin inline asm
	ld.global.nc.u32 %r75, [%rd49];
	// end inline asm
	mov.b32 	%f57, %r60;
	mov.b32 	%f58, %r61;
	add.f32 	%f59, %f57, %f58;
	mov.b32 	%f60, %r62;
	add.f32 	%f61, %f59, %f60;
	mov.b32 	%f62, %r63;
	add.f32 	%f63, %f61, %f62;
	mov.b32 	%f64, %r64;
	add.f32 	%f65, %f63, %f64;
	mov.b32 	%f66, %r65;
	add.f32 	%f67, %f65, %f66;
	mov.b32 	%f68, %r66;
	add.f32 	%f69, %f67, %f68;
	mov.b32 	%f70, %r67;
	add.f32 	%f71, %f69, %f70;
	mov.b32 	%f72, %r68;
	add.f32 	%f73, %f71, %f72;
	mov.b32 	%f74, %r69;
	add.f32 	%f75, %f73, %f74;
	mov.b32 	%f76, %r70;
	add.f32 	%f77, %f75, %f76;
	mov.b32 	%f78, %r71;
	add.f32 	%f79, %f77, %f78;
	mov.b32 	%f80, %r72;
	add.f32 	%f81, %f79, %f80;
	mov.b32 	%f82, %r73;
	add.f32 	%f83, %f81, %f82;
	mov.b32 	%f84, %r74;
	add.f32 	%f85, %f83, %f84;
	mov.b32 	%f86, %r75;
	add.f32 	%f396, %f85, %f86;
	add.s32 	%r2, %r59, -4096;
	setp.lt.s32 	%p4, %r59, 8192;
	mov.u32 	%r398, 4096;
	@%p4 bra 	$L__BB38_7;

	mov.u32 	%r398, 4096;
	mov.u32 	%r396, %r2;

$L__BB38_5:
	add.s64 	%rd51, %rd126, 16384;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd51];
	// end inline asm
	add.s64 	%rd52, %rd126, 17408;
	// begin inline asm
	ld.global.nc.u32 %r79, [%rd52];
	// end inline asm
	add.s64 	%rd53, %rd126, 18432;
	// begin inline asm
	ld.global.nc.u32 %r80, [%rd53];
	// end inline asm
	add.s64 	%rd54, %rd126, 19456;
	// begin inline asm
	ld.global.nc.u32 %r81, [%rd54];
	// end inline asm
	add.s64 	%rd55, %rd126, 20480;
	// begin inline asm
	ld.global.nc.u32 %r82, [%rd55];
	// end inline asm
	add.s64 	%rd56, %rd126, 21504;
	// begin inline asm
	ld.global.nc.u32 %r83, [%rd56];
	// end inline asm
	add.s64 	%rd57, %rd126, 22528;
	// begin inline asm
	ld.global.nc.u32 %r84, [%rd57];
	// end inline asm
	add.s64 	%rd58, %rd126, 23552;
	// begin inline asm
	ld.global.nc.u32 %r85, [%rd58];
	// end inline asm
	add.s64 	%rd59, %rd126, 24576;
	// begin inline asm
	ld.global.nc.u32 %r86, [%rd59];
	// end inline asm
	add.s64 	%rd60, %rd126, 25600;
	// begin inline asm
	ld.global.nc.u32 %r87, [%rd60];
	// end inline asm
	add.s64 	%rd61, %rd126, 26624;
	// begin inline asm
	ld.global.nc.u32 %r88, [%rd61];
	// end inline asm
	add.s64 	%rd62, %rd126, 27648;
	// begin inline asm
	ld.global.nc.u32 %r89, [%rd62];
	// end inline asm
	add.s64 	%rd63, %rd126, 28672;
	// begin inline asm
	ld.global.nc.u32 %r90, [%rd63];
	// end inline asm
	add.s64 	%rd64, %rd126, 29696;
	// begin inline asm
	ld.global.nc.u32 %r91, [%rd64];
	// end inline asm
	add.s64 	%rd65, %rd126, 30720;
	// begin inline asm
	ld.global.nc.u32 %r92, [%rd65];
	// end inline asm
	add.s64 	%rd66, %rd126, 31744;
	// begin inline asm
	ld.global.nc.u32 %r93, [%rd66];
	// end inline asm
	mov.b32 	%f87, %r78;
	add.f32 	%f88, %f396, %f87;
	mov.b32 	%f89, %r79;
	add.f32 	%f90, %f88, %f89;
	mov.b32 	%f91, %r80;
	add.f32 	%f92, %f90, %f91;
	mov.b32 	%f93, %r81;
	add.f32 	%f94, %f92, %f93;
	mov.b32 	%f95, %r82;
	add.f32 	%f96, %f94, %f95;
	mov.b32 	%f97, %r83;
	add.f32 	%f98, %f96, %f97;
	mov.b32 	%f99, %r84;
	add.f32 	%f100, %f98, %f99;
	mov.b32 	%f101, %r85;
	add.f32 	%f102, %f100, %f101;
	mov.b32 	%f103, %r86;
	add.f32 	%f104, %f102, %f103;
	mov.b32 	%f105, %r87;
	add.f32 	%f106, %f104, %f105;
	mov.b32 	%f107, %r88;
	add.f32 	%f108, %f106, %f107;
	mov.b32 	%f109, %r89;
	add.f32 	%f110, %f108, %f109;
	mov.b32 	%f111, %r90;
	add.f32 	%f112, %f110, %f111;
	mov.b32 	%f113, %r91;
	add.f32 	%f114, %f112, %f113;
	mov.b32 	%f115, %r92;
	add.f32 	%f116, %f114, %f115;
	mov.b32 	%f117, %r93;
	add.f32 	%f396, %f116, %f117;
	setp.lt.s32 	%p5, %r396, 4096;
	@%p5 bra 	$L__BB38_15;

	add.s32 	%r398, %r398, 4096;
	add.s32 	%r396, %r396, -4096;
	setp.le.s32 	%p6, %r398, %r2;
	mov.u64 	%rd126, %rd51;
	@%p6 bra 	$L__BB38_5;

$L__BB38_7:
	setp.ge.s32 	%p7, %r398, %r59;
	@%p7 bra 	$L__BB38_15;

	sub.s32 	%r8, %r59, %r398;
	setp.ge.s32 	%p8, %r420, %r8;
	@%p8 bra 	$L__BB38_15;

	not.b32 	%r94, %r420;
	add.s32 	%r95, %r94, %r59;
	sub.s32 	%r9, %r95, %r398;
	shr.u32 	%r96, %r9, 8;
	add.s32 	%r97, %r96, 1;
	and.b32  	%r400, %r97, 3;
	setp.eq.s32 	%p9, %r400, 0;
	mov.u32 	%r401, %r420;
	@%p9 bra 	$L__BB38_12;

	add.s32 	%r98, %r420, %r398;
	mul.wide.s32 	%rd67, %r98, 4;
	add.s64 	%rd127, %rd31, %rd67;
	mov.u32 	%r401, %r420;

$L__BB38_11:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r99, [%rd127];
	// end inline asm
	mov.b32 	%f119, %r99;
	add.f32 	%f396, %f396, %f119;
	add.s32 	%r401, %r401, 256;
	add.s64 	%rd127, %rd127, 1024;
	add.s32 	%r400, %r400, -1;
	setp.ne.s32 	%p10, %r400, 0;
	@%p10 bra 	$L__BB38_11;

$L__BB38_12:
	setp.lt.u32 	%p11, %r9, 768;
	@%p11 bra 	$L__BB38_15;

	add.s32 	%r100, %r401, %r398;
	mul.wide.s32 	%rd69, %r100, 4;
	add.s64 	%rd128, %rd31, %rd69;

$L__BB38_14:
	// begin inline asm
	ld.global.nc.u32 %r101, [%rd128];
	// end inline asm
	mov.b32 	%f120, %r101;
	add.f32 	%f121, %f396, %f120;
	add.s64 	%rd71, %rd128, 1024;
	// begin inline asm
	ld.global.nc.u32 %r102, [%rd71];
	// end inline asm
	mov.b32 	%f122, %r102;
	add.f32 	%f123, %f121, %f122;
	add.s64 	%rd72, %rd128, 2048;
	// begin inline asm
	ld.global.nc.u32 %r103, [%rd72];
	// end inline asm
	mov.b32 	%f124, %r103;
	add.f32 	%f125, %f123, %f124;
	add.s64 	%rd73, %rd128, 3072;
	// begin inline asm
	ld.global.nc.u32 %r104, [%rd73];
	// end inline asm
	mov.b32 	%f126, %r104;
	add.f32 	%f396, %f125, %f126;
	add.s64 	%rd128, %rd128, 4096;
	add.s32 	%r401, %r401, 1024;
	setp.lt.s32 	%p12, %r401, %r8;
	@%p12 bra 	$L__BB38_14;

$L__BB38_15:
	// begin inline asm
	mov.u32 %r105, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r106, %laneid;
	// end inline asm
	mov.b32 	%r108, %f396;
	mov.u32 	%r109, 1;
	mov.u32 	%r130, 31;
	mov.u32 	%r131, -1;
	// begin inline asm
	shfl.sync.down.b32 %r107, %r108, %r109, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p13, %r106, 30;
	mov.b32 	%f127, %r107;
	add.f32 	%f128, %f396, %f127;
	selp.f32 	%f129, %f396, %f128, %p13;
	mov.b32 	%r113, %f129;
	mov.u32 	%r114, 2;
	// begin inline asm
	shfl.sync.down.b32 %r112, %r113, %r114, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p14, %r106, 29;
	mov.b32 	%f130, %r112;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r118, %f132;
	mov.u32 	%r119, 4;
	// begin inline asm
	shfl.sync.down.b32 %r117, %r118, %r119, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p15, %r106, 27;
	mov.b32 	%f133, %r117;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r123, %f135;
	mov.u32 	%r124, 8;
	// begin inline asm
	shfl.sync.down.b32 %r122, %r123, %r124, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p16, %r106, 23;
	mov.b32 	%f136, %r122;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f138, %f135, %f137, %p16;
	mov.b32 	%r128, %f138;
	mov.u32 	%r129, 16;
	// begin inline asm
	shfl.sync.down.b32 %r127, %r128, %r129, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p17, %r106, 15;
	mov.b32 	%f139, %r127;
	add.f32 	%f140, %f138, %f139;
	selp.f32 	%f416, %f138, %f140, %p17;
	setp.ne.s32 	%p18, %r105, 0;
	@%p18 bra 	$L__BB38_17;

	shr.s32 	%r132, %r420, 31;
	shr.u32 	%r133, %r132, 27;
	add.s32 	%r134, %r420, %r133;
	shr.s32 	%r135, %r134, 5;
	shl.b32 	%r136, %r135, 2;
	mov.u32 	%r137, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r138, %r137, %r136;
	st.shared.f32 	[%r138+8], %f416;

$L__BB38_17:
	bar.sync 	0;
	setp.ne.s32 	%p19, %r420, 0;
	@%p19 bra 	$L__BB38_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f141, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f142, %f416, %f141;
	ld.shared.f32 	%f143, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f144, %f142, %f143;
	ld.shared.f32 	%f145, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f146, %f144, %f145;
	ld.shared.f32 	%f147, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f148, %f146, %f147;
	ld.shared.f32 	%f149, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f150, %f148, %f149;
	ld.shared.f32 	%f151, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f152, %f150, %f151;
	ld.shared.f32 	%f153, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f152, %f153;
	bra.uni 	$L__BB38_74;

$L__BB38_39:
	shl.b32 	%r228, %r420, 2;
	mul.wide.u32 	%rd95, %r228, 4;
	add.s64 	%rd131, %rd31, %rd95;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd83, %rd84}, [%rd131];
	// end inline asm
	mov.b64 	{%r229, %r230}, %rd84;
	mov.b64 	{%r231, %r232}, %rd83;
	add.s64 	%rd88, %rd131, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd86, %rd87}, [%rd88];
	// end inline asm
	mov.b64 	{%r233, %r234}, %rd87;
	mov.b64 	{%r235, %r236}, %rd86;
	add.s64 	%rd91, %rd131, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd89, %rd90}, [%rd91];
	// end inline asm
	mov.b64 	{%r237, %r238}, %rd90;
	mov.b64 	{%r239, %r240}, %rd89;
	add.s64 	%rd94, %rd131, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd92, %rd93}, [%rd94];
	// end inline asm
	mov.b64 	{%r241, %r242}, %rd93;
	mov.b64 	{%r243, %r244}, %rd92;
	mov.b32 	%f223, %r231;
	mov.b32 	%f224, %r232;
	mov.b32 	%f225, %r229;
	mov.b32 	%f226, %r230;
	mov.b32 	%f227, %r235;
	mov.b32 	%f228, %r236;
	mov.b32 	%f229, %r233;
	mov.b32 	%f230, %r234;
	mov.b32 	%f231, %r239;
	mov.b32 	%f232, %r240;
	mov.b32 	%f233, %r237;
	mov.b32 	%f234, %r238;
	mov.b32 	%f235, %r243;
	mov.b32 	%f236, %r244;
	mov.b32 	%f237, %r241;
	mov.b32 	%f238, %r242;
	add.f32 	%f239, %f223, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f250, %f249, %f235;
	add.f32 	%f251, %f250, %f236;
	add.f32 	%f252, %f251, %f237;
	add.f32 	%f409, %f252, %f238;
	add.s32 	%r30, %r59, -4096;
	setp.lt.s32 	%p50, %r59, 8192;
	mov.u32 	%r410, 4096;
	@%p50 bra 	$L__BB38_43;

	mov.u32 	%r410, 4096;
	mov.u32 	%r408, %r30;

$L__BB38_41:
	add.s64 	%rd98, %rd131, 16384;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd96, %rd97}, [%rd98];
	// end inline asm
	mov.b64 	{%r246, %r247}, %rd97;
	mov.b64 	{%r248, %r249}, %rd96;
	add.s64 	%rd101, %rd131, 20480;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd99, %rd100}, [%rd101];
	// end inline asm
	mov.b64 	{%r250, %r251}, %rd100;
	mov.b64 	{%r252, %r253}, %rd99;
	add.s64 	%rd104, %rd131, 24576;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd102, %rd103}, [%rd104];
	// end inline asm
	mov.b64 	{%r254, %r255}, %rd103;
	mov.b64 	{%r256, %r257}, %rd102;
	add.s64 	%rd107, %rd131, 28672;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd105, %rd106}, [%rd107];
	// end inline asm
	mov.b64 	{%r258, %r259}, %rd106;
	mov.b64 	{%r260, %r261}, %rd105;
	mov.b32 	%f253, %r248;
	mov.b32 	%f254, %r249;
	mov.b32 	%f255, %r246;
	mov.b32 	%f256, %r247;
	mov.b32 	%f257, %r252;
	mov.b32 	%f258, %r253;
	mov.b32 	%f259, %r250;
	mov.b32 	%f260, %r251;
	mov.b32 	%f261, %r256;
	mov.b32 	%f262, %r257;
	mov.b32 	%f263, %r254;
	mov.b32 	%f264, %r255;
	mov.b32 	%f265, %r260;
	mov.b32 	%f266, %r261;
	mov.b32 	%f267, %r258;
	mov.b32 	%f268, %r259;
	add.f32 	%f269, %f409, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f281, %f280, %f265;
	add.f32 	%f282, %f281, %f266;
	add.f32 	%f283, %f282, %f267;
	add.f32 	%f409, %f283, %f268;
	setp.lt.s32 	%p51, %r408, 4096;
	@%p51 bra 	$L__BB38_51;

	add.s32 	%r410, %r410, 4096;
	add.s32 	%r408, %r408, -4096;
	setp.le.s32 	%p52, %r410, %r30;
	mov.u64 	%rd131, %rd98;
	@%p52 bra 	$L__BB38_41;

$L__BB38_43:
	setp.ge.s32 	%p53, %r410, %r59;
	@%p53 bra 	$L__BB38_51;

	sub.s32 	%r36, %r59, %r410;
	setp.ge.s32 	%p54, %r420, %r36;
	@%p54 bra 	$L__BB38_51;

	not.b32 	%r262, %r420;
	add.s32 	%r263, %r262, %r59;
	sub.s32 	%r37, %r263, %r410;
	shr.u32 	%r264, %r37, 8;
	add.s32 	%r265, %r264, 1;
	and.b32  	%r412, %r265, 3;
	setp.eq.s32 	%p55, %r412, 0;
	mov.u32 	%r413, %r420;
	@%p55 bra 	$L__BB38_48;

	add.s32 	%r266, %r420, %r410;
	mul.wide.s32 	%rd108, %r266, 4;
	add.s64 	%rd132, %rd31, %rd108;
	mov.u32 	%r413, %r420;

$L__BB38_47:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r267, [%rd132];
	// end inline asm
	mov.b32 	%f285, %r267;
	add.f32 	%f409, %f409, %f285;
	add.s32 	%r413, %r413, 256;
	add.s64 	%rd132, %rd132, 1024;
	add.s32 	%r412, %r412, -1;
	setp.ne.s32 	%p56, %r412, 0;
	@%p56 bra 	$L__BB38_47;

$L__BB38_48:
	setp.lt.u32 	%p57, %r37, 768;
	@%p57 bra 	$L__BB38_51;

	add.s32 	%r268, %r413, %r410;
	mul.wide.s32 	%rd110, %r268, 4;
	add.s64 	%rd133, %rd31, %rd110;

$L__BB38_50:
	// begin inline asm
	ld.global.nc.u32 %r269, [%rd133];
	// end inline asm
	mov.b32 	%f286, %r269;
	add.f32 	%f287, %f409, %f286;
	add.s64 	%rd112, %rd133, 1024;
	// begin inline asm
	ld.global.nc.u32 %r270, [%rd112];
	// end inline asm
	mov.b32 	%f288, %r270;
	add.f32 	%f289, %f287, %f288;
	add.s64 	%rd113, %rd133, 2048;
	// begin inline asm
	ld.global.nc.u32 %r271, [%rd113];
	// end inline asm
	mov.b32 	%f290, %r271;
	add.f32 	%f291, %f289, %f290;
	add.s64 	%rd114, %rd133, 3072;
	// begin inline asm
	ld.global.nc.u32 %r272, [%rd114];
	// end inline asm
	mov.b32 	%f292, %r272;
	add.f32 	%f409, %f291, %f292;
	add.s64 	%rd133, %rd133, 4096;
	add.s32 	%r413, %r413, 1024;
	setp.lt.s32 	%p58, %r413, %r36;
	@%p58 bra 	$L__BB38_50;

$L__BB38_51:
	// begin inline asm
	mov.u32 %r273, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r274, %laneid;
	// end inline asm
	mov.b32 	%r276, %f409;
	mov.u32 	%r277, 1;
	mov.u32 	%r298, 31;
	mov.u32 	%r299, -1;
	// begin inline asm
	shfl.sync.down.b32 %r275, %r276, %r277, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p59, %r274, 30;
	mov.b32 	%f293, %r275;
	add.f32 	%f294, %f409, %f293;
	selp.f32 	%f295, %f409, %f294, %p59;
	mov.b32 	%r281, %f295;
	mov.u32 	%r282, 2;
	// begin inline asm
	shfl.sync.down.b32 %r280, %r281, %r282, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p60, %r274, 29;
	mov.b32 	%f296, %r280;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r286, %f298;
	mov.u32 	%r287, 4;
	// begin inline asm
	shfl.sync.down.b32 %r285, %r286, %r287, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p61, %r274, 27;
	mov.b32 	%f299, %r285;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r291, %f301;
	mov.u32 	%r292, 8;
	// begin inline asm
	shfl.sync.down.b32 %r290, %r291, %r292, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p62, %r274, 23;
	mov.b32 	%f302, %r290;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f304, %f301, %f303, %p62;
	mov.b32 	%r296, %f304;
	mov.u32 	%r297, 16;
	// begin inline asm
	shfl.sync.down.b32 %r295, %r296, %r297, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p63, %r274, 15;
	mov.b32 	%f305, %r295;
	add.f32 	%f306, %f304, %f305;
	selp.f32 	%f416, %f304, %f306, %p63;
	setp.ne.s32 	%p64, %r273, 0;
	@%p64 bra 	$L__BB38_53;

	shr.s32 	%r300, %r420, 31;
	shr.u32 	%r301, %r300, 27;
	add.s32 	%r302, %r420, %r301;
	shr.s32 	%r303, %r302, 5;
	shl.b32 	%r304, %r303, 2;
	mov.u32 	%r305, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r306, %r305, %r304;
	st.shared.f32 	[%r306+8], %f416;

$L__BB38_53:
	bar.sync 	0;
	setp.ne.s32 	%p65, %r420, 0;
	@%p65 bra 	$L__BB38_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f307, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f308, %f416, %f307;
	ld.shared.f32 	%f309, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f310, %f308, %f309;
	ld.shared.f32 	%f311, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f312, %f310, %f311;
	ld.shared.f32 	%f313, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f314, %f312, %f313;
	ld.shared.f32 	%f315, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f316, %f314, %f315;
	ld.shared.f32 	%f317, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f318, %f316, %f317;
	ld.shared.f32 	%f319, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f318, %f319;
	bra.uni 	$L__BB38_74;

$L__BB38_29:
	shr.s32 	%r176, %r420, 31;
	shr.u32 	%r177, %r176, 27;
	add.s32 	%r178, %r420, %r177;
	shr.s32 	%r29, %r178, 5;
	// begin inline asm
	mov.u32 %r149, %laneid;
	// end inline asm
	and.b32  	%r179, %r178, -32;
	add.s32 	%r180, %r179, 32;
	setp.gt.s32 	%p27, %r180, %r59;
	// begin inline asm
	mov.u32 %r150, %laneid;
	// end inline asm
	not.b32 	%r181, %r179;
	mov.u32 	%r175, -1;
	add.s32 	%r182, %r181, %r59;
	selp.b32 	%r174, %r182, 31, %p27;
	mov.b32 	%r152, %f402;
	mov.u32 	%r153, 1;
	// begin inline asm
	shfl.sync.down.b32 %r151, %r152, %r153, %r174, %r175;
	// end inline asm
	setp.lt.s32 	%p28, %r150, %r174;
	mov.b32 	%f164, %r151;
	add.f32 	%f165, %f402, %f164;
	selp.f32 	%f166, %f165, %f402, %p28;
	mov.b32 	%r157, %f166;
	mov.u32 	%r158, 2;
	// begin inline asm
	shfl.sync.down.b32 %r156, %r157, %r158, %r174, %r175;
	// end inline asm
	add.s32 	%r183, %r150, 2;
	setp.gt.s32 	%p29, %r183, %r174;
	mov.b32 	%f167, %r156;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r162, %f169;
	mov.u32 	%r163, 4;
	// begin inline asm
	shfl.sync.down.b32 %r161, %r162, %r163, %r174, %r175;
	// end inline asm
	add.s32 	%r184, %r150, 4;
	setp.gt.s32 	%p30, %r184, %r174;
	mov.b32 	%f170, %r161;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r167, %f172;
	mov.u32 	%r168, 8;
	// begin inline asm
	shfl.sync.down.b32 %r166, %r167, %r168, %r174, %r175;
	// end inline asm
	add.s32 	%r185, %r150, 8;
	setp.gt.s32 	%p31, %r185, %r174;
	mov.b32 	%f173, %r166;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f175, %f172, %f174, %p31;
	mov.b32 	%r172, %f175;
	mov.u32 	%r173, 16;
	// begin inline asm
	shfl.sync.down.b32 %r171, %r172, %r173, %r174, %r175;
	// end inline asm
	add.s32 	%r186, %r150, 16;
	setp.gt.s32 	%p32, %r186, %r174;
	mov.b32 	%f176, %r171;
	add.f32 	%f177, %f175, %f176;
	selp.f32 	%f416, %f175, %f177, %p32;
	setp.ne.s32 	%p33, %r149, 0;
	@%p33 bra 	$L__BB38_31;

	shl.b32 	%r187, %r29, 2;
	mov.u32 	%r188, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r189, %r188, %r187;
	st.shared.f32 	[%r189+8], %f416;

$L__BB38_31:
	bar.sync 	0;
	setp.ne.s32 	%p34, %r420, 0;
	@%p34 bra 	$L__BB38_74;

	setp.gt.s32 	%p35, %r59, 32;
	mov.u32 	%r420, 0;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f179, %f416, %f178;
	selp.f32 	%f180, %f179, %f416, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r59, 64;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r59, 96;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r59, 128;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r59, 160;
	selp.f32 	%f192, %f191, %f189, %p39;
	ld.shared.f32 	%f193, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f194, %f192, %f193;
	setp.gt.s32 	%p40, %r59, 192;
	selp.f32 	%f416, %f194, %f192, %p40;
	setp.lt.s32 	%p41, %r59, 225;
	@%p41 bra 	$L__BB38_74;

	ld.shared.f32 	%f195, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f195;
	bra.uni 	$L__BB38_74;

$L__BB38_65:
	shr.s32 	%r344, %r420, 31;
	shr.u32 	%r345, %r344, 27;
	add.s32 	%r346, %r420, %r345;
	shr.s32 	%r57, %r346, 5;
	// begin inline asm
	mov.u32 %r317, %laneid;
	// end inline asm
	and.b32  	%r347, %r346, -32;
	add.s32 	%r348, %r347, 32;
	setp.gt.s32 	%p73, %r348, %r59;
	// begin inline asm
	mov.u32 %r318, %laneid;
	// end inline asm
	not.b32 	%r349, %r347;
	mov.u32 	%r343, -1;
	add.s32 	%r350, %r349, %r59;
	selp.b32 	%r342, %r350, 31, %p73;
	mov.b32 	%r320, %f415;
	mov.u32 	%r321, 1;
	// begin inline asm
	shfl.sync.down.b32 %r319, %r320, %r321, %r342, %r343;
	// end inline asm
	setp.lt.s32 	%p74, %r318, %r342;
	mov.b32 	%f330, %r319;
	add.f32 	%f331, %f415, %f330;
	selp.f32 	%f332, %f331, %f415, %p74;
	mov.b32 	%r325, %f332;
	mov.u32 	%r326, 2;
	// begin inline asm
	shfl.sync.down.b32 %r324, %r325, %r326, %r342, %r343;
	// end inline asm
	add.s32 	%r351, %r318, 2;
	setp.gt.s32 	%p75, %r351, %r342;
	mov.b32 	%f333, %r324;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r330, %f335;
	mov.u32 	%r331, 4;
	// begin inline asm
	shfl.sync.down.b32 %r329, %r330, %r331, %r342, %r343;
	// end inline asm
	add.s32 	%r352, %r318, 4;
	setp.gt.s32 	%p76, %r352, %r342;
	mov.b32 	%f336, %r329;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r335, %f338;
	mov.u32 	%r336, 8;
	// begin inline asm
	shfl.sync.down.b32 %r334, %r335, %r336, %r342, %r343;
	// end inline asm
	add.s32 	%r353, %r318, 8;
	setp.gt.s32 	%p77, %r353, %r342;
	mov.b32 	%f339, %r334;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f341, %f338, %f340, %p77;
	mov.b32 	%r340, %f341;
	mov.u32 	%r341, 16;
	// begin inline asm
	shfl.sync.down.b32 %r339, %r340, %r341, %r342, %r343;
	// end inline asm
	add.s32 	%r354, %r318, 16;
	setp.gt.s32 	%p78, %r354, %r342;
	mov.b32 	%f342, %r339;
	add.f32 	%f343, %f341, %f342;
	selp.f32 	%f416, %f341, %f343, %p78;
	setp.ne.s32 	%p79, %r317, 0;
	@%p79 bra 	$L__BB38_67;

	shl.b32 	%r355, %r57, 2;
	mov.u32 	%r356, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r357, %r356, %r355;
	st.shared.f32 	[%r357+8], %f416;

$L__BB38_67:
	bar.sync 	0;
	setp.ne.s32 	%p80, %r420, 0;
	@%p80 bra 	$L__BB38_74;

	setp.gt.s32 	%p81, %r59, 32;
	mov.u32 	%r420, 0;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f345, %f416, %f344;
	selp.f32 	%f346, %f345, %f416, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r59, 64;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r59, 96;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r59, 128;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r59, 160;
	selp.f32 	%f358, %f357, %f355, %p85;
	ld.shared.f32 	%f359, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f360, %f358, %f359;
	setp.gt.s32 	%p86, %r59, 192;
	selp.f32 	%f416, %f360, %f358, %p86;
	setp.lt.s32 	%p87, %r59, 225;
	@%p87 bra 	$L__BB38_74;

	ld.shared.f32 	%f361, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfjN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f361;

$L__BB38_74:
	setp.ne.s32 	%p95, %r420, 0;
	@%p95 bra 	$L__BB38_78;

	add.f32 	%f389, %f416, %f56;
	cvta.to.global.u64 	%rd124, %rd32;
	st.global.f32 	[%rd124], %f389;

$L__BB38_78:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_
.visible .entry _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_(
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_1,
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_2,
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_3[1],
	.param .f32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_4
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<97>;
	.reg .f32 	%f<417>;
	.reg .b32 	%r<408>;
	.reg .b64 	%rd<170>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage[44];

	ld.param.u64 	%rd43, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_0];
	ld.param.u64 	%rd44, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_1];
	ld.param.u64 	%rd45, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_2];
	ld.param.f32 	%f56, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4__param_4];
	setp.eq.s64 	%p1, %rd45, 0;
	@%p1 bra 	$L__BB39_76;

	and.b64  	%rd46, %rd43, 15;
	setp.eq.s64 	%p2, %rd46, 0;
	@%p2 bra 	$L__BB39_38;

	setp.lt.u64 	%p3, %rd45, 4096;
	@%p3 bra 	$L__BB39_19;
	bra.uni 	$L__BB39_3;

$L__BB39_19:
	cvt.u32.u64 	%r14, %rd45;
	mov.u32 	%r407, %tid.x;
	setp.ge.s32 	%p20, %r407, %r14;
	mov.f32 	%f402, 0f00000000;
	mov.u32 	%r396, %r407;
	@%p20 bra 	$L__BB39_21;

	mul.wide.s32 	%rd96, %r407, 4;
	add.s64 	%rd95, %rd43, %rd96;
	// begin inline asm
	ld.global.nc.u32 %r135, [%rd95];
	// end inline asm
	mov.b32 	%f402, %r135;
	add.s32 	%r396, %r407, 256;

$L__BB39_21:
	setp.ge.s32 	%p21, %r396, %r14;
	@%p21 bra 	$L__BB39_28;

	not.b32 	%r136, %r396;
	add.s32 	%r18, %r136, %r14;
	shr.u32 	%r137, %r18, 8;
	add.s32 	%r138, %r137, 1;
	and.b32  	%r395, %r138, 3;
	setp.eq.s32 	%p22, %r395, 0;
	@%p22 bra 	$L__BB39_25;

	mul.wide.s32 	%rd97, %r396, 4;
	add.s64 	%rd160, %rd43, %rd97;

$L__BB39_24:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r139, [%rd160];
	// end inline asm
	mov.b32 	%f156, %r139;
	add.f32 	%f402, %f402, %f156;
	add.s32 	%r396, %r396, 256;
	add.s64 	%rd160, %rd160, 1024;
	add.s32 	%r395, %r395, -1;
	setp.ne.s32 	%p23, %r395, 0;
	@%p23 bra 	$L__BB39_24;

$L__BB39_25:
	setp.lt.u32 	%p24, %r18, 768;
	@%p24 bra 	$L__BB39_28;

	mul.wide.s32 	%rd99, %r396, 4;
	add.s64 	%rd161, %rd43, %rd99;

$L__BB39_27:
	// begin inline asm
	ld.global.nc.u32 %r140, [%rd161];
	// end inline asm
	mov.b32 	%f157, %r140;
	add.f32 	%f158, %f402, %f157;
	add.s64 	%rd101, %rd161, 1024;
	// begin inline asm
	ld.global.nc.u32 %r141, [%rd101];
	// end inline asm
	mov.b32 	%f159, %r141;
	add.f32 	%f160, %f158, %f159;
	add.s64 	%rd102, %rd161, 2048;
	// begin inline asm
	ld.global.nc.u32 %r142, [%rd102];
	// end inline asm
	mov.b32 	%f161, %r142;
	add.f32 	%f162, %f160, %f161;
	add.s64 	%rd103, %rd161, 3072;
	// begin inline asm
	ld.global.nc.u32 %r143, [%rd103];
	// end inline asm
	mov.b32 	%f163, %r143;
	add.f32 	%f402, %f162, %f163;
	add.s64 	%rd161, %rd161, 4096;
	add.s32 	%r396, %r396, 1024;
	setp.lt.s32 	%p25, %r396, %r14;
	@%p25 bra 	$L__BB39_27;

$L__BB39_28:
	setp.gt.s32 	%p26, %r14, 255;
	@%p26 bra 	$L__BB39_34;
	bra.uni 	$L__BB39_29;

$L__BB39_34:
	// begin inline asm
	mov.u32 %r187, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r188, %laneid;
	// end inline asm
	mov.b32 	%r190, %f402;
	mov.u32 	%r191, 1;
	mov.u32 	%r212, 31;
	mov.u32 	%r213, -1;
	// begin inline asm
	shfl.sync.down.b32 %r189, %r190, %r191, %r212, %r213;
	// end inline asm
	setp.gt.s32 	%p42, %r188, 30;
	mov.b32 	%f196, %r189;
	add.f32 	%f197, %f402, %f196;
	selp.f32 	%f198, %f402, %f197, %p42;
	mov.b32 	%r195, %f198;
	mov.u32 	%r196, 2;
	// begin inline asm
	shfl.sync.down.b32 %r194, %r195, %r196, %r212, %r213;
	// end inline asm
	setp.gt.s32 	%p43, %r188, 29;
	mov.b32 	%f199, %r194;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r200, %f201;
	mov.u32 	%r201, 4;
	// begin inline asm
	shfl.sync.down.b32 %r199, %r200, %r201, %r212, %r213;
	// end inline asm
	setp.gt.s32 	%p44, %r188, 27;
	mov.b32 	%f202, %r199;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r205, %f204;
	mov.u32 	%r206, 8;
	// begin inline asm
	shfl.sync.down.b32 %r204, %r205, %r206, %r212, %r213;
	// end inline asm
	setp.gt.s32 	%p45, %r188, 23;
	mov.b32 	%f205, %r204;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f207, %f204, %f206, %p45;
	mov.b32 	%r210, %f207;
	mov.u32 	%r211, 16;
	// begin inline asm
	shfl.sync.down.b32 %r209, %r210, %r211, %r212, %r213;
	// end inline asm
	setp.gt.s32 	%p46, %r188, 15;
	mov.b32 	%f208, %r209;
	add.f32 	%f209, %f207, %f208;
	selp.f32 	%f416, %f207, %f209, %p46;
	setp.ne.s32 	%p47, %r187, 0;
	@%p47 bra 	$L__BB39_36;

	shr.s32 	%r214, %r407, 31;
	shr.u32 	%r215, %r214, 27;
	add.s32 	%r216, %r407, %r215;
	shr.s32 	%r217, %r216, 5;
	shl.b32 	%r218, %r217, 2;
	mov.u32 	%r219, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r220, %r219, %r218;
	st.shared.f32 	[%r220+8], %f416;

$L__BB39_36:
	bar.sync 	0;
	setp.ne.s32 	%p48, %r407, 0;
	@%p48 bra 	$L__BB39_74;

	mov.u32 	%r407, 0;
	ld.shared.f32 	%f210, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f211, %f416, %f210;
	ld.shared.f32 	%f212, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f213, %f211, %f212;
	ld.shared.f32 	%f214, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f215, %f213, %f214;
	ld.shared.f32 	%f216, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f217, %f215, %f216;
	ld.shared.f32 	%f218, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f219, %f217, %f218;
	ld.shared.f32 	%f220, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f221, %f219, %f220;
	ld.shared.f32 	%f222, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f221, %f222;
	bra.uni 	$L__BB39_74;

$L__BB39_76:
	mov.u32 	%r388, %tid.x;
	setp.ne.s32 	%p96, %r388, 0;
	@%p96 bra 	$L__BB39_78;

	cvta.to.global.u64 	%rd153, %rd44;
	st.global.f32 	[%rd153], %f56;
	bra.uni 	$L__BB39_78;

$L__BB39_38:
	setp.lt.u64 	%p49, %rd45, 4096;
	@%p49 bra 	$L__BB39_55;
	bra.uni 	$L__BB39_39;

$L__BB39_55:
	cvt.u32.u64 	%r39, %rd45;
	mov.u32 	%r407, %tid.x;
	setp.ge.s32 	%p66, %r407, %r39;
	mov.f32 	%f415, 0f00000000;
	mov.u32 	%r405, %r407;
	@%p66 bra 	$L__BB39_57;

	mul.wide.s32 	%rd144, %r407, 4;
	add.s64 	%rd143, %rd43, %rd144;
	// begin inline asm
	ld.global.nc.u32 %r301, [%rd143];
	// end inline asm
	mov.b32 	%f415, %r301;
	add.s32 	%r405, %r407, 256;

$L__BB39_57:
	setp.ge.s32 	%p67, %r405, %r39;
	@%p67 bra 	$L__BB39_64;

	not.b32 	%r302, %r405;
	add.s32 	%r43, %r302, %r39;
	shr.u32 	%r303, %r43, 8;
	add.s32 	%r304, %r303, 1;
	and.b32  	%r404, %r304, 3;
	setp.eq.s32 	%p68, %r404, 0;
	@%p68 bra 	$L__BB39_61;

	mul.wide.s32 	%rd145, %r405, 4;
	add.s64 	%rd168, %rd43, %rd145;

$L__BB39_60:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r305, [%rd168];
	// end inline asm
	mov.b32 	%f322, %r305;
	add.f32 	%f415, %f415, %f322;
	add.s32 	%r405, %r405, 256;
	add.s64 	%rd168, %rd168, 1024;
	add.s32 	%r404, %r404, -1;
	setp.ne.s32 	%p69, %r404, 0;
	@%p69 bra 	$L__BB39_60;

$L__BB39_61:
	setp.lt.u32 	%p70, %r43, 768;
	@%p70 bra 	$L__BB39_64;

	mul.wide.s32 	%rd147, %r405, 4;
	add.s64 	%rd169, %rd43, %rd147;

$L__BB39_63:
	// begin inline asm
	ld.global.nc.u32 %r306, [%rd169];
	// end inline asm
	mov.b32 	%f323, %r306;
	add.f32 	%f324, %f415, %f323;
	add.s64 	%rd149, %rd169, 1024;
	// begin inline asm
	ld.global.nc.u32 %r307, [%rd149];
	// end inline asm
	mov.b32 	%f325, %r307;
	add.f32 	%f326, %f324, %f325;
	add.s64 	%rd150, %rd169, 2048;
	// begin inline asm
	ld.global.nc.u32 %r308, [%rd150];
	// end inline asm
	mov.b32 	%f327, %r308;
	add.f32 	%f328, %f326, %f327;
	add.s64 	%rd151, %rd169, 3072;
	// begin inline asm
	ld.global.nc.u32 %r309, [%rd151];
	// end inline asm
	mov.b32 	%f329, %r309;
	add.f32 	%f415, %f328, %f329;
	add.s64 	%rd169, %rd169, 4096;
	add.s32 	%r405, %r405, 1024;
	setp.lt.s32 	%p71, %r405, %r39;
	@%p71 bra 	$L__BB39_63;

$L__BB39_64:
	setp.gt.s32 	%p72, %r39, 255;
	@%p72 bra 	$L__BB39_70;
	bra.uni 	$L__BB39_65;

$L__BB39_70:
	// begin inline asm
	mov.u32 %r353, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r354, %laneid;
	// end inline asm
	mov.b32 	%r356, %f415;
	mov.u32 	%r357, 1;
	mov.u32 	%r378, 31;
	mov.u32 	%r379, -1;
	// begin inline asm
	shfl.sync.down.b32 %r355, %r356, %r357, %r378, %r379;
	// end inline asm
	setp.gt.s32 	%p88, %r354, 30;
	mov.b32 	%f362, %r355;
	add.f32 	%f363, %f415, %f362;
	selp.f32 	%f364, %f415, %f363, %p88;
	mov.b32 	%r361, %f364;
	mov.u32 	%r362, 2;
	// begin inline asm
	shfl.sync.down.b32 %r360, %r361, %r362, %r378, %r379;
	// end inline asm
	setp.gt.s32 	%p89, %r354, 29;
	mov.b32 	%f365, %r360;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r366, %f367;
	mov.u32 	%r367, 4;
	// begin inline asm
	shfl.sync.down.b32 %r365, %r366, %r367, %r378, %r379;
	// end inline asm
	setp.gt.s32 	%p90, %r354, 27;
	mov.b32 	%f368, %r365;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r371, %f370;
	mov.u32 	%r372, 8;
	// begin inline asm
	shfl.sync.down.b32 %r370, %r371, %r372, %r378, %r379;
	// end inline asm
	setp.gt.s32 	%p91, %r354, 23;
	mov.b32 	%f371, %r370;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f373, %f370, %f372, %p91;
	mov.b32 	%r376, %f373;
	mov.u32 	%r377, 16;
	// begin inline asm
	shfl.sync.down.b32 %r375, %r376, %r377, %r378, %r379;
	// end inline asm
	setp.gt.s32 	%p92, %r354, 15;
	mov.b32 	%f374, %r375;
	add.f32 	%f375, %f373, %f374;
	selp.f32 	%f416, %f373, %f375, %p92;
	setp.ne.s32 	%p93, %r353, 0;
	@%p93 bra 	$L__BB39_72;

	shr.s32 	%r380, %r407, 31;
	shr.u32 	%r381, %r380, 27;
	add.s32 	%r382, %r407, %r381;
	shr.s32 	%r383, %r382, 5;
	shl.b32 	%r384, %r383, 2;
	mov.u32 	%r385, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r386, %r385, %r384;
	st.shared.f32 	[%r386+8], %f416;

$L__BB39_72:
	bar.sync 	0;
	setp.ne.s32 	%p94, %r407, 0;
	@%p94 bra 	$L__BB39_74;

	mov.u32 	%r407, 0;
	ld.shared.f32 	%f376, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f377, %f416, %f376;
	ld.shared.f32 	%f378, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f379, %f377, %f378;
	ld.shared.f32 	%f380, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f381, %f379, %f380;
	ld.shared.f32 	%f382, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f383, %f381, %f382;
	ld.shared.f32 	%f384, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f385, %f383, %f384;
	ld.shared.f32 	%f386, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f387, %f385, %f386;
	ld.shared.f32 	%f388, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f387, %f388;
	bra.uni 	$L__BB39_74;

$L__BB39_3:
	mov.u32 	%r407, %tid.x;
	mul.wide.s32 	%rd64, %r407, 4;
	add.s64 	%rd155, %rd43, %rd64;
	// begin inline asm
	ld.global.nc.u32 %r54, [%rd155];
	// end inline asm
	add.s64 	%rd48, %rd155, 1024;
	// begin inline asm
	ld.global.nc.u32 %r55, [%rd48];
	// end inline asm
	add.s64 	%rd49, %rd155, 2048;
	// begin inline asm
	ld.global.nc.u32 %r56, [%rd49];
	// end inline asm
	add.s64 	%rd50, %rd155, 3072;
	// begin inline asm
	ld.global.nc.u32 %r57, [%rd50];
	// end inline asm
	add.s64 	%rd51, %rd155, 4096;
	mov.u64 	%rd157, 4096;
	// begin inline asm
	ld.global.nc.u32 %r58, [%rd51];
	// end inline asm
	add.s64 	%rd52, %rd155, 5120;
	// begin inline asm
	ld.global.nc.u32 %r59, [%rd52];
	// end inline asm
	add.s64 	%rd53, %rd155, 6144;
	// begin inline asm
	ld.global.nc.u32 %r60, [%rd53];
	// end inline asm
	add.s64 	%rd54, %rd155, 7168;
	// begin inline asm
	ld.global.nc.u32 %r61, [%rd54];
	// end inline asm
	add.s64 	%rd55, %rd155, 8192;
	// begin inline asm
	ld.global.nc.u32 %r62, [%rd55];
	// end inline asm
	add.s64 	%rd56, %rd155, 9216;
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd56];
	// end inline asm
	add.s64 	%rd57, %rd155, 10240;
	// begin inline asm
	ld.global.nc.u32 %r64, [%rd57];
	// end inline asm
	add.s64 	%rd58, %rd155, 11264;
	// begin inline asm
	ld.global.nc.u32 %r65, [%rd58];
	// end inline asm
	add.s64 	%rd59, %rd155, 12288;
	// begin inline asm
	ld.global.nc.u32 %r66, [%rd59];
	// end inline asm
	add.s64 	%rd60, %rd155, 13312;
	// begin inline asm
	ld.global.nc.u32 %r67, [%rd60];
	// end inline asm
	add.s64 	%rd61, %rd155, 14336;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd61];
	// end inline asm
	add.s64 	%rd62, %rd155, 15360;
	// begin inline asm
	ld.global.nc.u32 %r69, [%rd62];
	// end inline asm
	mov.b32 	%f57, %r54;
	mov.b32 	%f58, %r55;
	add.f32 	%f59, %f57, %f58;
	mov.b32 	%f60, %r56;
	add.f32 	%f61, %f59, %f60;
	mov.b32 	%f62, %r57;
	add.f32 	%f63, %f61, %f62;
	mov.b32 	%f64, %r58;
	add.f32 	%f65, %f63, %f64;
	mov.b32 	%f66, %r59;
	add.f32 	%f67, %f65, %f66;
	mov.b32 	%f68, %r60;
	add.f32 	%f69, %f67, %f68;
	mov.b32 	%f70, %r61;
	add.f32 	%f71, %f69, %f70;
	mov.b32 	%f72, %r62;
	add.f32 	%f73, %f71, %f72;
	mov.b32 	%f74, %r63;
	add.f32 	%f75, %f73, %f74;
	mov.b32 	%f76, %r64;
	add.f32 	%f77, %f75, %f76;
	mov.b32 	%f78, %r65;
	add.f32 	%f79, %f77, %f78;
	mov.b32 	%f80, %r66;
	add.f32 	%f81, %f79, %f80;
	mov.b32 	%f82, %r67;
	add.f32 	%f83, %f81, %f82;
	mov.b32 	%f84, %r68;
	add.f32 	%f85, %f83, %f84;
	mov.b32 	%f86, %r69;
	add.f32 	%f396, %f85, %f86;
	add.s64 	%rd154, %rd45, -4096;
	setp.lt.u64 	%p4, %rd154, 4096;
	@%p4 bra 	$L__BB39_7;

	mov.u64 	%rd157, 4096;

$L__BB39_5:
	add.s64 	%rd66, %rd155, 16384;
	// begin inline asm
	ld.global.nc.u32 %r71, [%rd66];
	// end inline asm
	add.s64 	%rd67, %rd155, 17408;
	// begin inline asm
	ld.global.nc.u32 %r72, [%rd67];
	// end inline asm
	add.s64 	%rd68, %rd155, 18432;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd68];
	// end inline asm
	add.s64 	%rd69, %rd155, 19456;
	// begin inline asm
	ld.global.nc.u32 %r74, [%rd69];
	// end inline asm
	add.s64 	%rd70, %rd155, 20480;
	// begin inline asm
	ld.global.nc.u32 %r75, [%rd70];
	// end inline asm
	add.s64 	%rd71, %rd155, 21504;
	// begin inline asm
	ld.global.nc.u32 %r76, [%rd71];
	// end inline asm
	add.s64 	%rd72, %rd155, 22528;
	// begin inline asm
	ld.global.nc.u32 %r77, [%rd72];
	// end inline asm
	add.s64 	%rd73, %rd155, 23552;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd73];
	// end inline asm
	add.s64 	%rd74, %rd155, 24576;
	// begin inline asm
	ld.global.nc.u32 %r79, [%rd74];
	// end inline asm
	add.s64 	%rd75, %rd155, 25600;
	// begin inline asm
	ld.global.nc.u32 %r80, [%rd75];
	// end inline asm
	add.s64 	%rd76, %rd155, 26624;
	// begin inline asm
	ld.global.nc.u32 %r81, [%rd76];
	// end inline asm
	add.s64 	%rd77, %rd155, 27648;
	// begin inline asm
	ld.global.nc.u32 %r82, [%rd77];
	// end inline asm
	add.s64 	%rd78, %rd155, 28672;
	// begin inline asm
	ld.global.nc.u32 %r83, [%rd78];
	// end inline asm
	add.s64 	%rd79, %rd155, 29696;
	// begin inline asm
	ld.global.nc.u32 %r84, [%rd79];
	// end inline asm
	add.s64 	%rd80, %rd155, 30720;
	// begin inline asm
	ld.global.nc.u32 %r85, [%rd80];
	// end inline asm
	add.s64 	%rd81, %rd155, 31744;
	// begin inline asm
	ld.global.nc.u32 %r86, [%rd81];
	// end inline asm
	mov.b32 	%f87, %r71;
	add.f32 	%f88, %f396, %f87;
	mov.b32 	%f89, %r72;
	add.f32 	%f90, %f88, %f89;
	mov.b32 	%f91, %r73;
	add.f32 	%f92, %f90, %f91;
	mov.b32 	%f93, %r74;
	add.f32 	%f94, %f92, %f93;
	mov.b32 	%f95, %r75;
	add.f32 	%f96, %f94, %f95;
	mov.b32 	%f97, %r76;
	add.f32 	%f98, %f96, %f97;
	mov.b32 	%f99, %r77;
	add.f32 	%f100, %f98, %f99;
	mov.b32 	%f101, %r78;
	add.f32 	%f102, %f100, %f101;
	mov.b32 	%f103, %r79;
	add.f32 	%f104, %f102, %f103;
	mov.b32 	%f105, %r80;
	add.f32 	%f106, %f104, %f105;
	mov.b32 	%f107, %r81;
	add.f32 	%f108, %f106, %f107;
	mov.b32 	%f109, %r82;
	add.f32 	%f110, %f108, %f109;
	mov.b32 	%f111, %r83;
	add.f32 	%f112, %f110, %f111;
	mov.b32 	%f113, %r84;
	add.f32 	%f114, %f112, %f113;
	mov.b32 	%f115, %r85;
	add.f32 	%f116, %f114, %f115;
	mov.b32 	%f117, %r86;
	add.f32 	%f396, %f116, %f117;
	setp.lt.u64 	%p5, %rd154, 4096;
	@%p5 bra 	$L__BB39_15;

	add.s64 	%rd157, %rd157, 4096;
	add.s64 	%rd154, %rd154, -4096;
	add.s64 	%rd82, %rd45, -4096;
	setp.le.u64 	%p6, %rd157, %rd82;
	mov.u64 	%rd155, %rd66;
	@%p6 bra 	$L__BB39_5;

$L__BB39_7:
	setp.ge.u64 	%p7, %rd157, %rd45;
	@%p7 bra 	$L__BB39_15;

	sub.s64 	%rd83, %rd45, %rd157;
	cvt.u32.u64 	%r1, %rd83;
	mov.u32 	%r391, %tid.x;
	setp.ge.s32 	%p8, %r391, %r1;
	@%p8 bra 	$L__BB39_15;

	cvt.u32.u64 	%r88, %rd45;
	not.b32 	%r89, %r391;
	add.s32 	%r90, %r89, %r88;
	cvt.u32.u64 	%r91, %rd157;
	sub.s32 	%r3, %r90, %r91;
	shr.u32 	%r92, %r3, 8;
	add.s32 	%r93, %r92, 1;
	and.b32  	%r390, %r93, 3;
	setp.eq.s32 	%p9, %r390, 0;
	@%p9 bra 	$L__BB39_12;

	mov.u32 	%r391, %tid.x;
	cvt.s64.s32 	%rd84, %r391;
	add.s64 	%rd85, %rd157, %rd84;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd158, %rd43, %rd86;

$L__BB39_11:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r94, [%rd158];
	// end inline asm
	mov.b32 	%f119, %r94;
	add.f32 	%f396, %f396, %f119;
	add.s32 	%r391, %r391, 256;
	add.s64 	%rd158, %rd158, 1024;
	add.s32 	%r390, %r390, -1;
	setp.ne.s32 	%p10, %r390, 0;
	@%p10 bra 	$L__BB39_11;

$L__BB39_12:
	setp.lt.u32 	%p11, %r3, 768;
	@%p11 bra 	$L__BB39_15;

	cvt.s64.s32 	%rd88, %r391;
	add.s64 	%rd89, %rd157, %rd88;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd159, %rd43, %rd90;

$L__BB39_14:
	// begin inline asm
	ld.global.nc.u32 %r95, [%rd159];
	// end inline asm
	mov.b32 	%f120, %r95;
	add.f32 	%f121, %f396, %f120;
	add.s64 	%rd92, %rd159, 1024;
	// begin inline asm
	ld.global.nc.u32 %r96, [%rd92];
	// end inline asm
	mov.b32 	%f122, %r96;
	add.f32 	%f123, %f121, %f122;
	add.s64 	%rd93, %rd159, 2048;
	// begin inline asm
	ld.global.nc.u32 %r97, [%rd93];
	// end inline asm
	mov.b32 	%f124, %r97;
	add.f32 	%f125, %f123, %f124;
	add.s64 	%rd94, %rd159, 3072;
	// begin inline asm
	ld.global.nc.u32 %r98, [%rd94];
	// end inline asm
	mov.b32 	%f126, %r98;
	add.f32 	%f396, %f125, %f126;
	add.s64 	%rd159, %rd159, 4096;
	add.s32 	%r391, %r391, 1024;
	setp.lt.s32 	%p12, %r391, %r1;
	@%p12 bra 	$L__BB39_14;

$L__BB39_15:
	// begin inline asm
	mov.u32 %r99, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r100, %laneid;
	// end inline asm
	mov.b32 	%r102, %f396;
	mov.u32 	%r103, 1;
	mov.u32 	%r124, 31;
	mov.u32 	%r125, -1;
	// begin inline asm
	shfl.sync.down.b32 %r101, %r102, %r103, %r124, %r125;
	// end inline asm
	setp.gt.s32 	%p13, %r100, 30;
	mov.b32 	%f127, %r101;
	add.f32 	%f128, %f396, %f127;
	selp.f32 	%f129, %f396, %f128, %p13;
	mov.b32 	%r107, %f129;
	mov.u32 	%r108, 2;
	// begin inline asm
	shfl.sync.down.b32 %r106, %r107, %r108, %r124, %r125;
	// end inline asm
	setp.gt.s32 	%p14, %r100, 29;
	mov.b32 	%f130, %r106;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r112, %f132;
	mov.u32 	%r113, 4;
	// begin inline asm
	shfl.sync.down.b32 %r111, %r112, %r113, %r124, %r125;
	// end inline asm
	setp.gt.s32 	%p15, %r100, 27;
	mov.b32 	%f133, %r111;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r117, %f135;
	mov.u32 	%r118, 8;
	// begin inline asm
	shfl.sync.down.b32 %r116, %r117, %r118, %r124, %r125;
	// end inline asm
	setp.gt.s32 	%p16, %r100, 23;
	mov.b32 	%f136, %r116;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f138, %f135, %f137, %p16;
	mov.b32 	%r122, %f138;
	mov.u32 	%r123, 16;
	// begin inline asm
	shfl.sync.down.b32 %r121, %r122, %r123, %r124, %r125;
	// end inline asm
	setp.gt.s32 	%p17, %r100, 15;
	mov.b32 	%f139, %r121;
	add.f32 	%f140, %f138, %f139;
	selp.f32 	%f416, %f138, %f140, %p17;
	setp.ne.s32 	%p18, %r99, 0;
	@%p18 bra 	$L__BB39_17;

	mov.u32 	%r126, %tid.x;
	shr.s32 	%r127, %r126, 31;
	shr.u32 	%r128, %r127, 27;
	add.s32 	%r129, %r126, %r128;
	shr.s32 	%r130, %r129, 5;
	shl.b32 	%r131, %r130, 2;
	mov.u32 	%r132, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r133, %r132, %r131;
	st.shared.f32 	[%r133+8], %f416;

$L__BB39_17:
	bar.sync 	0;
	setp.ne.s32 	%p19, %r407, 0;
	@%p19 bra 	$L__BB39_74;

	mov.u32 	%r407, 0;
	ld.shared.f32 	%f141, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f142, %f416, %f141;
	ld.shared.f32 	%f143, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f144, %f142, %f143;
	ld.shared.f32 	%f145, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f146, %f144, %f145;
	ld.shared.f32 	%f147, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f148, %f146, %f147;
	ld.shared.f32 	%f149, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f150, %f148, %f149;
	ld.shared.f32 	%f151, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f152, %f150, %f151;
	ld.shared.f32 	%f153, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f152, %f153;
	bra.uni 	$L__BB39_74;

$L__BB39_39:
	mov.u32 	%r407, %tid.x;
	shl.b32 	%r222, %r407, 2;
	mul.wide.u32 	%rd117, %r222, 4;
	add.s64 	%rd163, %rd43, %rd117;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd104, %rd105}, [%rd163];
	// end inline asm
	mov.b64 	{%r223, %r224}, %rd105;
	mov.b64 	{%r225, %r226}, %rd104;
	add.s64 	%rd109, %rd163, 4096;
	mov.u64 	%rd165, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd107, %rd108}, [%rd109];
	// end inline asm
	mov.b64 	{%r227, %r228}, %rd108;
	mov.b64 	{%r229, %r230}, %rd107;
	add.s64 	%rd112, %rd163, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd110, %rd111}, [%rd112];
	// end inline asm
	mov.b64 	{%r231, %r232}, %rd111;
	mov.b64 	{%r233, %r234}, %rd110;
	add.s64 	%rd115, %rd163, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd113, %rd114}, [%rd115];
	// end inline asm
	mov.b64 	{%r235, %r236}, %rd114;
	mov.b64 	{%r237, %r238}, %rd113;
	mov.b32 	%f223, %r225;
	mov.b32 	%f224, %r226;
	mov.b32 	%f225, %r223;
	mov.b32 	%f226, %r224;
	mov.b32 	%f227, %r229;
	mov.b32 	%f228, %r230;
	mov.b32 	%f229, %r227;
	mov.b32 	%f230, %r228;
	mov.b32 	%f231, %r233;
	mov.b32 	%f232, %r234;
	mov.b32 	%f233, %r231;
	mov.b32 	%f234, %r232;
	mov.b32 	%f235, %r237;
	mov.b32 	%f236, %r238;
	mov.b32 	%f237, %r235;
	mov.b32 	%f238, %r236;
	add.f32 	%f239, %f223, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f250, %f249, %f235;
	add.f32 	%f251, %f250, %f236;
	add.f32 	%f252, %f251, %f237;
	add.f32 	%f409, %f252, %f238;
	add.s64 	%rd23, %rd45, -4096;
	setp.lt.u64 	%p50, %rd23, 4096;
	@%p50 bra 	$L__BB39_43;

	mov.u64 	%rd165, 4096;
	mov.u64 	%rd162, %rd23;

$L__BB39_41:
	add.s64 	%rd121, %rd163, 16384;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd119, %rd120}, [%rd121];
	// end inline asm
	mov.b64 	{%r239, %r240}, %rd120;
	mov.b64 	{%r241, %r242}, %rd119;
	add.s64 	%rd124, %rd163, 20480;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd122, %rd123}, [%rd124];
	// end inline asm
	mov.b64 	{%r243, %r244}, %rd123;
	mov.b64 	{%r245, %r246}, %rd122;
	add.s64 	%rd127, %rd163, 24576;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd125, %rd126}, [%rd127];
	// end inline asm
	mov.b64 	{%r247, %r248}, %rd126;
	mov.b64 	{%r249, %r250}, %rd125;
	add.s64 	%rd130, %rd163, 28672;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd128, %rd129}, [%rd130];
	// end inline asm
	mov.b64 	{%r251, %r252}, %rd129;
	mov.b64 	{%r253, %r254}, %rd128;
	mov.b32 	%f253, %r241;
	mov.b32 	%f254, %r242;
	mov.b32 	%f255, %r239;
	mov.b32 	%f256, %r240;
	mov.b32 	%f257, %r245;
	mov.b32 	%f258, %r246;
	mov.b32 	%f259, %r243;
	mov.b32 	%f260, %r244;
	mov.b32 	%f261, %r249;
	mov.b32 	%f262, %r250;
	mov.b32 	%f263, %r247;
	mov.b32 	%f264, %r248;
	mov.b32 	%f265, %r253;
	mov.b32 	%f266, %r254;
	mov.b32 	%f267, %r251;
	mov.b32 	%f268, %r252;
	add.f32 	%f269, %f409, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f281, %f280, %f265;
	add.f32 	%f282, %f281, %f266;
	add.f32 	%f283, %f282, %f267;
	add.f32 	%f409, %f283, %f268;
	setp.lt.u64 	%p51, %rd162, 4096;
	@%p51 bra 	$L__BB39_51;

	add.s64 	%rd165, %rd165, 4096;
	add.s64 	%rd162, %rd162, -4096;
	setp.le.u64 	%p52, %rd165, %rd23;
	mov.u64 	%rd163, %rd121;
	@%p52 bra 	$L__BB39_41;

$L__BB39_43:
	setp.ge.u64 	%p53, %rd165, %rd45;
	@%p53 bra 	$L__BB39_51;

	sub.s64 	%rd131, %rd45, %rd165;
	cvt.u32.u64 	%r29, %rd131;
	setp.ge.s32 	%p54, %r407, %r29;
	@%p54 bra 	$L__BB39_51;

	cvt.u32.u64 	%r255, %rd45;
	not.b32 	%r256, %r407;
	add.s32 	%r257, %r256, %r255;
	cvt.u32.u64 	%r258, %rd165;
	sub.s32 	%r30, %r257, %r258;
	shr.u32 	%r259, %r30, 8;
	add.s32 	%r260, %r259, 1;
	and.b32  	%r399, %r260, 3;
	setp.eq.s32 	%p55, %r399, 0;
	mov.u32 	%r400, %r407;
	@%p55 bra 	$L__BB39_48;

	cvt.s64.s32 	%rd132, %r407;
	add.s64 	%rd133, %rd165, %rd132;
	shl.b64 	%rd134, %rd133, 2;
	add.s64 	%rd166, %rd43, %rd134;
	mov.u32 	%r400, %r407;

$L__BB39_47:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r261, [%rd166];
	// end inline asm
	mov.b32 	%f285, %r261;
	add.f32 	%f409, %f409, %f285;
	add.s32 	%r400, %r400, 256;
	add.s64 	%rd166, %rd166, 1024;
	add.s32 	%r399, %r399, -1;
	setp.ne.s32 	%p56, %r399, 0;
	@%p56 bra 	$L__BB39_47;

$L__BB39_48:
	setp.lt.u32 	%p57, %r30, 768;
	@%p57 bra 	$L__BB39_51;

	cvt.s64.s32 	%rd136, %r400;
	add.s64 	%rd137, %rd165, %rd136;
	shl.b64 	%rd138, %rd137, 2;
	add.s64 	%rd167, %rd43, %rd138;

$L__BB39_50:
	// begin inline asm
	ld.global.nc.u32 %r262, [%rd167];
	// end inline asm
	mov.b32 	%f286, %r262;
	add.f32 	%f287, %f409, %f286;
	add.s64 	%rd140, %rd167, 1024;
	// begin inline asm
	ld.global.nc.u32 %r263, [%rd140];
	// end inline asm
	mov.b32 	%f288, %r263;
	add.f32 	%f289, %f287, %f288;
	add.s64 	%rd141, %rd167, 2048;
	// begin inline asm
	ld.global.nc.u32 %r264, [%rd141];
	// end inline asm
	mov.b32 	%f290, %r264;
	add.f32 	%f291, %f289, %f290;
	add.s64 	%rd142, %rd167, 3072;
	// begin inline asm
	ld.global.nc.u32 %r265, [%rd142];
	// end inline asm
	mov.b32 	%f292, %r265;
	add.f32 	%f409, %f291, %f292;
	add.s64 	%rd167, %rd167, 4096;
	add.s32 	%r400, %r400, 1024;
	setp.lt.s32 	%p58, %r400, %r29;
	@%p58 bra 	$L__BB39_50;

$L__BB39_51:
	// begin inline asm
	mov.u32 %r266, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r267, %laneid;
	// end inline asm
	mov.b32 	%r269, %f409;
	mov.u32 	%r270, 1;
	mov.u32 	%r291, 31;
	mov.u32 	%r292, -1;
	// begin inline asm
	shfl.sync.down.b32 %r268, %r269, %r270, %r291, %r292;
	// end inline asm
	setp.gt.s32 	%p59, %r267, 30;
	mov.b32 	%f293, %r268;
	add.f32 	%f294, %f409, %f293;
	selp.f32 	%f295, %f409, %f294, %p59;
	mov.b32 	%r274, %f295;
	mov.u32 	%r275, 2;
	// begin inline asm
	shfl.sync.down.b32 %r273, %r274, %r275, %r291, %r292;
	// end inline asm
	setp.gt.s32 	%p60, %r267, 29;
	mov.b32 	%f296, %r273;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r279, %f298;
	mov.u32 	%r280, 4;
	// begin inline asm
	shfl.sync.down.b32 %r278, %r279, %r280, %r291, %r292;
	// end inline asm
	setp.gt.s32 	%p61, %r267, 27;
	mov.b32 	%f299, %r278;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r284, %f301;
	mov.u32 	%r285, 8;
	// begin inline asm
	shfl.sync.down.b32 %r283, %r284, %r285, %r291, %r292;
	// end inline asm
	setp.gt.s32 	%p62, %r267, 23;
	mov.b32 	%f302, %r283;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f304, %f301, %f303, %p62;
	mov.b32 	%r289, %f304;
	mov.u32 	%r290, 16;
	// begin inline asm
	shfl.sync.down.b32 %r288, %r289, %r290, %r291, %r292;
	// end inline asm
	setp.gt.s32 	%p63, %r267, 15;
	mov.b32 	%f305, %r288;
	add.f32 	%f306, %f304, %f305;
	selp.f32 	%f416, %f304, %f306, %p63;
	setp.ne.s32 	%p64, %r266, 0;
	@%p64 bra 	$L__BB39_53;

	shr.s32 	%r293, %r407, 31;
	shr.u32 	%r294, %r293, 27;
	add.s32 	%r295, %r407, %r294;
	shr.s32 	%r296, %r295, 5;
	shl.b32 	%r297, %r296, 2;
	mov.u32 	%r298, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r299, %r298, %r297;
	st.shared.f32 	[%r299+8], %f416;

$L__BB39_53:
	bar.sync 	0;
	setp.ne.s32 	%p65, %r407, 0;
	@%p65 bra 	$L__BB39_74;

	mov.u32 	%r407, 0;
	ld.shared.f32 	%f307, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f308, %f416, %f307;
	ld.shared.f32 	%f309, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f310, %f308, %f309;
	ld.shared.f32 	%f311, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f312, %f310, %f311;
	ld.shared.f32 	%f313, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f314, %f312, %f313;
	ld.shared.f32 	%f315, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f316, %f314, %f315;
	ld.shared.f32 	%f317, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f318, %f316, %f317;
	ld.shared.f32 	%f319, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f318, %f319;
	bra.uni 	$L__BB39_74;

$L__BB39_29:
	shr.s32 	%r171, %r407, 31;
	shr.u32 	%r172, %r171, 27;
	add.s32 	%r173, %r407, %r172;
	shr.s32 	%r27, %r173, 5;
	// begin inline asm
	mov.u32 %r144, %laneid;
	// end inline asm
	and.b32  	%r174, %r173, -32;
	add.s32 	%r175, %r174, 32;
	setp.gt.s32 	%p27, %r175, %r14;
	// begin inline asm
	mov.u32 %r145, %laneid;
	// end inline asm
	not.b32 	%r176, %r174;
	mov.u32 	%r170, -1;
	add.s32 	%r177, %r14, %r176;
	selp.b32 	%r169, %r177, 31, %p27;
	mov.b32 	%r147, %f402;
	mov.u32 	%r148, 1;
	// begin inline asm
	shfl.sync.down.b32 %r146, %r147, %r148, %r169, %r170;
	// end inline asm
	setp.lt.s32 	%p28, %r145, %r169;
	mov.b32 	%f164, %r146;
	add.f32 	%f165, %f402, %f164;
	selp.f32 	%f166, %f165, %f402, %p28;
	mov.b32 	%r152, %f166;
	mov.u32 	%r153, 2;
	// begin inline asm
	shfl.sync.down.b32 %r151, %r152, %r153, %r169, %r170;
	// end inline asm
	add.s32 	%r178, %r145, 2;
	setp.gt.s32 	%p29, %r178, %r169;
	mov.b32 	%f167, %r151;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r157, %f169;
	mov.u32 	%r158, 4;
	// begin inline asm
	shfl.sync.down.b32 %r156, %r157, %r158, %r169, %r170;
	// end inline asm
	add.s32 	%r179, %r145, 4;
	setp.gt.s32 	%p30, %r179, %r169;
	mov.b32 	%f170, %r156;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r162, %f172;
	mov.u32 	%r163, 8;
	// begin inline asm
	shfl.sync.down.b32 %r161, %r162, %r163, %r169, %r170;
	// end inline asm
	add.s32 	%r180, %r145, 8;
	setp.gt.s32 	%p31, %r180, %r169;
	mov.b32 	%f173, %r161;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f175, %f172, %f174, %p31;
	mov.b32 	%r167, %f175;
	mov.u32 	%r168, 16;
	// begin inline asm
	shfl.sync.down.b32 %r166, %r167, %r168, %r169, %r170;
	// end inline asm
	add.s32 	%r181, %r145, 16;
	setp.gt.s32 	%p32, %r181, %r169;
	mov.b32 	%f176, %r166;
	add.f32 	%f177, %f175, %f176;
	selp.f32 	%f416, %f175, %f177, %p32;
	setp.ne.s32 	%p33, %r144, 0;
	@%p33 bra 	$L__BB39_31;

	shl.b32 	%r182, %r27, 2;
	mov.u32 	%r183, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r184, %r183, %r182;
	st.shared.f32 	[%r184+8], %f416;

$L__BB39_31:
	bar.sync 	0;
	setp.ne.s32 	%p34, %r407, 0;
	@%p34 bra 	$L__BB39_74;

	setp.gt.s32 	%p35, %r14, 32;
	mov.u32 	%r407, 0;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f179, %f416, %f178;
	selp.f32 	%f180, %f179, %f416, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r14, 64;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r14, 96;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r14, 128;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r14, 160;
	selp.f32 	%f192, %f191, %f189, %p39;
	ld.shared.f32 	%f193, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f194, %f192, %f193;
	setp.gt.s32 	%p40, %r14, 192;
	selp.f32 	%f416, %f194, %f192, %p40;
	setp.lt.s32 	%p41, %r14, 225;
	@%p41 bra 	$L__BB39_74;

	ld.shared.f32 	%f195, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f195;
	bra.uni 	$L__BB39_74;

$L__BB39_65:
	shr.s32 	%r337, %r407, 31;
	shr.u32 	%r338, %r337, 27;
	add.s32 	%r339, %r407, %r338;
	shr.s32 	%r52, %r339, 5;
	// begin inline asm
	mov.u32 %r310, %laneid;
	// end inline asm
	and.b32  	%r340, %r339, -32;
	add.s32 	%r341, %r340, 32;
	setp.gt.s32 	%p73, %r341, %r39;
	// begin inline asm
	mov.u32 %r311, %laneid;
	// end inline asm
	not.b32 	%r342, %r340;
	mov.u32 	%r336, -1;
	add.s32 	%r343, %r39, %r342;
	selp.b32 	%r335, %r343, 31, %p73;
	mov.b32 	%r313, %f415;
	mov.u32 	%r314, 1;
	// begin inline asm
	shfl.sync.down.b32 %r312, %r313, %r314, %r335, %r336;
	// end inline asm
	setp.lt.s32 	%p74, %r311, %r335;
	mov.b32 	%f330, %r312;
	add.f32 	%f331, %f415, %f330;
	selp.f32 	%f332, %f331, %f415, %p74;
	mov.b32 	%r318, %f332;
	mov.u32 	%r319, 2;
	// begin inline asm
	shfl.sync.down.b32 %r317, %r318, %r319, %r335, %r336;
	// end inline asm
	add.s32 	%r344, %r311, 2;
	setp.gt.s32 	%p75, %r344, %r335;
	mov.b32 	%f333, %r317;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r323, %f335;
	mov.u32 	%r324, 4;
	// begin inline asm
	shfl.sync.down.b32 %r322, %r323, %r324, %r335, %r336;
	// end inline asm
	add.s32 	%r345, %r311, 4;
	setp.gt.s32 	%p76, %r345, %r335;
	mov.b32 	%f336, %r322;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r328, %f338;
	mov.u32 	%r329, 8;
	// begin inline asm
	shfl.sync.down.b32 %r327, %r328, %r329, %r335, %r336;
	// end inline asm
	add.s32 	%r346, %r311, 8;
	setp.gt.s32 	%p77, %r346, %r335;
	mov.b32 	%f339, %r327;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f341, %f338, %f340, %p77;
	mov.b32 	%r333, %f341;
	mov.u32 	%r334, 16;
	// begin inline asm
	shfl.sync.down.b32 %r332, %r333, %r334, %r335, %r336;
	// end inline asm
	add.s32 	%r347, %r311, 16;
	setp.gt.s32 	%p78, %r347, %r335;
	mov.b32 	%f342, %r332;
	add.f32 	%f343, %f341, %f342;
	selp.f32 	%f416, %f341, %f343, %p78;
	setp.ne.s32 	%p79, %r310, 0;
	@%p79 bra 	$L__BB39_67;

	shl.b32 	%r348, %r52, 2;
	mov.u32 	%r349, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r350, %r349, %r348;
	st.shared.f32 	[%r350+8], %f416;

$L__BB39_67:
	bar.sync 	0;
	setp.ne.s32 	%p80, %r407, 0;
	@%p80 bra 	$L__BB39_74;

	setp.gt.s32 	%p81, %r39, 32;
	mov.u32 	%r407, 0;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f345, %f416, %f344;
	selp.f32 	%f346, %f345, %f416, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r39, 64;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r39, 96;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r39, 128;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r39, 160;
	selp.f32 	%f358, %f357, %f355, %p85;
	ld.shared.f32 	%f359, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f360, %f358, %f359;
	setp.gt.s32 	%p86, %r39, 192;
	selp.f32 	%f416, %f360, %f358, %p86;
	setp.lt.s32 	%p87, %r39, 225;
	@%p87 bra 	$L__BB39_74;

	ld.shared.f32 	%f361, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_yS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f361;

$L__BB39_74:
	setp.ne.s32 	%p95, %r407, 0;
	@%p95 bra 	$L__BB39_78;

	add.f32 	%f389, %f416, %f56;
	cvta.to.global.u64 	%rd152, %rd44;
	st.global.f32 	[%rd152], %f389;

$L__BB39_78:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_
.visible .entry _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_(
	.param .u64 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_1,
	.param .u64 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_2,
	.param .align 8 .b8 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3[72],
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_4[1]
)
.maxntid 256, 1, 1
{
	.reg .pred 	%p<95>;
	.reg .f32 	%f<411>;
	.reg .b32 	%r<438>;
	.reg .b64 	%rd<274>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage[44];

	ld.param.u64 	%rd68, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_0];
	ld.param.u64 	%rd69, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_1];
	ld.param.u64 	%rd1, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3+32];
	ld.param.u32 	%r58, [_ZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2__param_3+40];
	shl.b32 	%r1, %r58, 12;
	cvt.s64.s32 	%rd2, %r1;
	mov.u32 	%r59, %ctaid.x;
	shl.b32 	%r60, %r59, 12;
	cvt.s64.s32 	%rd3, %r60;
	and.b64  	%rd70, %rd68, 15;
	setp.eq.s64 	%p1, %rd70, 0;
	sub.s64 	%rd4, %rd1, %rd3;
	@%p1 bra 	$L__BB40_37;

	setp.lt.u64 	%p2, %rd4, 4096;
	@%p2 bra 	$L__BB40_18;
	bra.uni 	$L__BB40_2;

$L__BB40_18:
	cvt.u32.u64 	%r159, %rd3;
	cvt.u32.u64 	%r16, %rd1;
	sub.s32 	%r17, %r16, %r159;
	mov.u32 	%r437, %tid.x;
	setp.ge.s32 	%p19, %r437, %r17;
	mov.f32 	%f397, 0f00000000;
	mov.u32 	%r426, %r437;
	@%p19 bra 	$L__BB40_20;

	cvt.s64.s32 	%rd187, %r437;
	add.s64 	%rd188, %rd3, %rd187;
	shl.b64 	%rd189, %rd188, 2;
	add.s64 	%rd186, %rd68, %rd189;
	// begin inline asm
	ld.global.nc.u32 %r160, [%rd186];
	// end inline asm
	mov.b32 	%f397, %r160;
	add.s32 	%r426, %r437, 256;

$L__BB40_20:
	setp.ge.s32 	%p20, %r426, %r17;
	@%p20 bra 	$L__BB40_27;

	not.b32 	%r162, %r426;
	add.s32 	%r163, %r162, %r16;
	sub.s32 	%r21, %r163, %r159;
	shr.u32 	%r164, %r21, 8;
	add.s32 	%r165, %r164, 1;
	and.b32  	%r425, %r165, 3;
	setp.eq.s32 	%p21, %r425, 0;
	@%p21 bra 	$L__BB40_24;

	cvt.s64.s32 	%rd190, %r426;
	add.s64 	%rd191, %rd190, %rd3;
	shl.b64 	%rd192, %rd191, 2;
	add.s64 	%rd265, %rd68, %rd192;

$L__BB40_23:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r166, [%rd265];
	// end inline asm
	mov.b32 	%f153, %r166;
	add.f32 	%f397, %f397, %f153;
	add.s32 	%r426, %r426, 256;
	add.s64 	%rd265, %rd265, 1024;
	add.s32 	%r425, %r425, -1;
	setp.ne.s32 	%p22, %r425, 0;
	@%p22 bra 	$L__BB40_23;

$L__BB40_24:
	setp.lt.u32 	%p23, %r21, 768;
	@%p23 bra 	$L__BB40_27;

	cvt.s64.s32 	%rd194, %r426;
	add.s64 	%rd195, %rd194, %rd3;
	shl.b64 	%rd196, %rd195, 2;
	add.s64 	%rd266, %rd68, %rd196;

$L__BB40_26:
	// begin inline asm
	ld.global.nc.u32 %r167, [%rd266];
	// end inline asm
	mov.b32 	%f154, %r167;
	add.f32 	%f155, %f397, %f154;
	add.s64 	%rd198, %rd266, 1024;
	// begin inline asm
	ld.global.nc.u32 %r168, [%rd198];
	// end inline asm
	mov.b32 	%f156, %r168;
	add.f32 	%f157, %f155, %f156;
	add.s64 	%rd199, %rd266, 2048;
	// begin inline asm
	ld.global.nc.u32 %r169, [%rd199];
	// end inline asm
	mov.b32 	%f158, %r169;
	add.f32 	%f159, %f157, %f158;
	add.s64 	%rd200, %rd266, 3072;
	// begin inline asm
	ld.global.nc.u32 %r170, [%rd200];
	// end inline asm
	mov.b32 	%f160, %r170;
	add.f32 	%f397, %f159, %f160;
	add.s64 	%rd266, %rd266, 4096;
	add.s32 	%r426, %r426, 1024;
	setp.lt.s32 	%p24, %r426, %r17;
	@%p24 bra 	$L__BB40_26;

$L__BB40_27:
	setp.gt.s32 	%p25, %r17, 255;
	@%p25 bra 	$L__BB40_33;
	bra.uni 	$L__BB40_28;

$L__BB40_33:
	// begin inline asm
	mov.u32 %r214, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r215, %laneid;
	// end inline asm
	mov.b32 	%r217, %f397;
	mov.u32 	%r218, 1;
	mov.u32 	%r239, 31;
	mov.u32 	%r240, -1;
	// begin inline asm
	shfl.sync.down.b32 %r216, %r217, %r218, %r239, %r240;
	// end inline asm
	setp.gt.s32 	%p41, %r215, 30;
	mov.b32 	%f193, %r216;
	add.f32 	%f194, %f397, %f193;
	selp.f32 	%f195, %f397, %f194, %p41;
	mov.b32 	%r222, %f195;
	mov.u32 	%r223, 2;
	// begin inline asm
	shfl.sync.down.b32 %r221, %r222, %r223, %r239, %r240;
	// end inline asm
	setp.gt.s32 	%p42, %r215, 29;
	mov.b32 	%f196, %r221;
	add.f32 	%f197, %f195, %f196;
	selp.f32 	%f198, %f195, %f197, %p42;
	mov.b32 	%r227, %f198;
	mov.u32 	%r228, 4;
	// begin inline asm
	shfl.sync.down.b32 %r226, %r227, %r228, %r239, %r240;
	// end inline asm
	setp.gt.s32 	%p43, %r215, 27;
	mov.b32 	%f199, %r226;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r232, %f201;
	mov.u32 	%r233, 8;
	// begin inline asm
	shfl.sync.down.b32 %r231, %r232, %r233, %r239, %r240;
	// end inline asm
	setp.gt.s32 	%p44, %r215, 23;
	mov.b32 	%f202, %r231;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r237, %f204;
	mov.u32 	%r238, 16;
	// begin inline asm
	shfl.sync.down.b32 %r236, %r237, %r238, %r239, %r240;
	// end inline asm
	setp.gt.s32 	%p45, %r215, 15;
	mov.b32 	%f205, %r236;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f410, %f204, %f206, %p45;
	setp.ne.s32 	%p46, %r214, 0;
	@%p46 bra 	$L__BB40_35;

	shr.s32 	%r241, %r437, 31;
	shr.u32 	%r242, %r241, 27;
	add.s32 	%r243, %r437, %r242;
	shr.s32 	%r244, %r243, 5;
	shl.b32 	%r245, %r244, 2;
	mov.u32 	%r246, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r247, %r246, %r245;
	st.shared.f32 	[%r247+8], %f410;

$L__BB40_35:
	bar.sync 	0;
	setp.ne.s32 	%p47, %r437, 0;
	@%p47 bra 	$L__BB40_73;

	mov.u32 	%r437, 0;
	ld.shared.f32 	%f207, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f208, %f410, %f207;
	ld.shared.f32 	%f209, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f210, %f208, %f209;
	ld.shared.f32 	%f211, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f212, %f210, %f211;
	ld.shared.f32 	%f213, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f214, %f212, %f213;
	ld.shared.f32 	%f215, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f216, %f214, %f215;
	ld.shared.f32 	%f217, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f218, %f216, %f217;
	ld.shared.f32 	%f219, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f218, %f219;
	bra.uni 	$L__BB40_73;

$L__BB40_37:
	setp.lt.u64 	%p48, %rd4, 4096;
	@%p48 bra 	$L__BB40_54;
	bra.uni 	$L__BB40_38;

$L__BB40_54:
	cvt.u32.u64 	%r328, %rd3;
	cvt.u32.u64 	%r42, %rd1;
	sub.s32 	%r43, %r42, %r328;
	mov.u32 	%r437, %tid.x;
	setp.ge.s32 	%p65, %r437, %r43;
	mov.f32 	%f409, 0f00000000;
	mov.u32 	%r435, %r437;
	@%p65 bra 	$L__BB40_56;

	cvt.s64.s32 	%rd243, %r437;
	add.s64 	%rd244, %rd3, %rd243;
	shl.b64 	%rd245, %rd244, 2;
	add.s64 	%rd242, %rd68, %rd245;
	// begin inline asm
	ld.global.nc.u32 %r329, [%rd242];
	// end inline asm
	mov.b32 	%f409, %r329;
	add.s32 	%r435, %r437, 256;

$L__BB40_56:
	setp.ge.s32 	%p66, %r435, %r43;
	@%p66 bra 	$L__BB40_63;

	not.b32 	%r331, %r435;
	add.s32 	%r332, %r331, %r42;
	sub.s32 	%r47, %r332, %r328;
	shr.u32 	%r333, %r47, 8;
	add.s32 	%r334, %r333, 1;
	and.b32  	%r434, %r334, 3;
	setp.eq.s32 	%p67, %r434, 0;
	@%p67 bra 	$L__BB40_60;

	cvt.s64.s32 	%rd246, %r435;
	add.s64 	%rd247, %rd246, %rd3;
	shl.b64 	%rd248, %rd247, 2;
	add.s64 	%rd272, %rd68, %rd248;

$L__BB40_59:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r335, [%rd272];
	// end inline asm
	mov.b32 	%f319, %r335;
	add.f32 	%f409, %f409, %f319;
	add.s32 	%r435, %r435, 256;
	add.s64 	%rd272, %rd272, 1024;
	add.s32 	%r434, %r434, -1;
	setp.ne.s32 	%p68, %r434, 0;
	@%p68 bra 	$L__BB40_59;

$L__BB40_60:
	setp.lt.u32 	%p69, %r47, 768;
	@%p69 bra 	$L__BB40_63;

	cvt.s64.s32 	%rd250, %r435;
	add.s64 	%rd251, %rd250, %rd3;
	shl.b64 	%rd252, %rd251, 2;
	add.s64 	%rd273, %rd68, %rd252;

$L__BB40_62:
	// begin inline asm
	ld.global.nc.u32 %r336, [%rd273];
	// end inline asm
	mov.b32 	%f320, %r336;
	add.f32 	%f321, %f409, %f320;
	add.s64 	%rd254, %rd273, 1024;
	// begin inline asm
	ld.global.nc.u32 %r337, [%rd254];
	// end inline asm
	mov.b32 	%f322, %r337;
	add.f32 	%f323, %f321, %f322;
	add.s64 	%rd255, %rd273, 2048;
	// begin inline asm
	ld.global.nc.u32 %r338, [%rd255];
	// end inline asm
	mov.b32 	%f324, %r338;
	add.f32 	%f325, %f323, %f324;
	add.s64 	%rd256, %rd273, 3072;
	// begin inline asm
	ld.global.nc.u32 %r339, [%rd256];
	// end inline asm
	mov.b32 	%f326, %r339;
	add.f32 	%f409, %f325, %f326;
	add.s64 	%rd273, %rd273, 4096;
	add.s32 	%r435, %r435, 1024;
	setp.lt.s32 	%p70, %r435, %r43;
	@%p70 bra 	$L__BB40_62;

$L__BB40_63:
	setp.gt.s32 	%p71, %r43, 255;
	@%p71 bra 	$L__BB40_69;
	bra.uni 	$L__BB40_64;

$L__BB40_69:
	// begin inline asm
	mov.u32 %r383, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r384, %laneid;
	// end inline asm
	mov.b32 	%r386, %f409;
	mov.u32 	%r387, 1;
	mov.u32 	%r408, 31;
	mov.u32 	%r409, -1;
	// begin inline asm
	shfl.sync.down.b32 %r385, %r386, %r387, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p87, %r384, 30;
	mov.b32 	%f359, %r385;
	add.f32 	%f360, %f409, %f359;
	selp.f32 	%f361, %f409, %f360, %p87;
	mov.b32 	%r391, %f361;
	mov.u32 	%r392, 2;
	// begin inline asm
	shfl.sync.down.b32 %r390, %r391, %r392, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p88, %r384, 29;
	mov.b32 	%f362, %r390;
	add.f32 	%f363, %f361, %f362;
	selp.f32 	%f364, %f361, %f363, %p88;
	mov.b32 	%r396, %f364;
	mov.u32 	%r397, 4;
	// begin inline asm
	shfl.sync.down.b32 %r395, %r396, %r397, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p89, %r384, 27;
	mov.b32 	%f365, %r395;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r401, %f367;
	mov.u32 	%r402, 8;
	// begin inline asm
	shfl.sync.down.b32 %r400, %r401, %r402, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p90, %r384, 23;
	mov.b32 	%f368, %r400;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r406, %f370;
	mov.u32 	%r407, 16;
	// begin inline asm
	shfl.sync.down.b32 %r405, %r406, %r407, %r408, %r409;
	// end inline asm
	setp.gt.s32 	%p91, %r384, 15;
	mov.b32 	%f371, %r405;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f410, %f370, %f372, %p91;
	setp.ne.s32 	%p92, %r383, 0;
	@%p92 bra 	$L__BB40_71;

	shr.s32 	%r410, %r437, 31;
	shr.u32 	%r411, %r410, 27;
	add.s32 	%r412, %r437, %r411;
	shr.s32 	%r413, %r412, 5;
	shl.b32 	%r414, %r413, 2;
	mov.u32 	%r415, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r416, %r415, %r414;
	st.shared.f32 	[%r416+8], %f410;

$L__BB40_71:
	bar.sync 	0;
	setp.ne.s32 	%p93, %r437, 0;
	@%p93 bra 	$L__BB40_73;

	mov.u32 	%r437, 0;
	ld.shared.f32 	%f373, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f374, %f410, %f373;
	ld.shared.f32 	%f375, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f376, %f374, %f375;
	ld.shared.f32 	%f377, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f378, %f376, %f377;
	ld.shared.f32 	%f379, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f380, %f378, %f379;
	ld.shared.f32 	%f381, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f382, %f380, %f381;
	ld.shared.f32 	%f383, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f384, %f382, %f383;
	ld.shared.f32 	%f385, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f384, %f385;
	bra.uni 	$L__BB40_73;

$L__BB40_2:
	mov.u32 	%r437, %tid.x;
	cvt.s64.s32 	%rd87, %r437;
	add.s64 	%rd88, %rd87, %rd3;
	shl.b64 	%rd89, %rd88, 2;
	add.s64 	%rd71, %rd68, %rd89;
	// begin inline asm
	ld.global.nc.u32 %r61, [%rd71];
	// end inline asm
	add.s32 	%r77, %r437, 256;
	cvt.s64.s32 	%rd5, %r77;
	add.s64 	%rd90, %rd5, %rd3;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd72, %rd68, %rd91;
	// begin inline asm
	ld.global.nc.u32 %r62, [%rd72];
	// end inline asm
	add.s32 	%r78, %r437, 512;
	cvt.s64.s32 	%rd6, %r78;
	add.s64 	%rd92, %rd6, %rd3;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd73, %rd68, %rd93;
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd73];
	// end inline asm
	add.s32 	%r79, %r437, 768;
	cvt.s64.s32 	%rd7, %r79;
	add.s64 	%rd94, %rd7, %rd3;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd74, %rd68, %rd95;
	// begin inline asm
	ld.global.nc.u32 %r64, [%rd74];
	// end inline asm
	add.s32 	%r80, %r437, 1024;
	cvt.s64.s32 	%rd8, %r80;
	add.s64 	%rd96, %rd8, %rd3;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd75, %rd68, %rd97;
	// begin inline asm
	ld.global.nc.u32 %r65, [%rd75];
	// end inline asm
	add.s32 	%r81, %r437, 1280;
	cvt.s64.s32 	%rd9, %r81;
	add.s64 	%rd98, %rd9, %rd3;
	shl.b64 	%rd99, %rd98, 2;
	add.s64 	%rd76, %rd68, %rd99;
	// begin inline asm
	ld.global.nc.u32 %r66, [%rd76];
	// end inline asm
	add.s32 	%r82, %r437, 1536;
	cvt.s64.s32 	%rd10, %r82;
	add.s64 	%rd100, %rd10, %rd3;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd77, %rd68, %rd101;
	// begin inline asm
	ld.global.nc.u32 %r67, [%rd77];
	// end inline asm
	add.s32 	%r83, %r437, 1792;
	cvt.s64.s32 	%rd11, %r83;
	add.s64 	%rd102, %rd11, %rd3;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd78, %rd68, %rd103;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd78];
	// end inline asm
	add.s32 	%r84, %r437, 2048;
	cvt.s64.s32 	%rd12, %r84;
	add.s64 	%rd104, %rd12, %rd3;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd79, %rd68, %rd105;
	// begin inline asm
	ld.global.nc.u32 %r69, [%rd79];
	// end inline asm
	add.s32 	%r85, %r437, 2304;
	cvt.s64.s32 	%rd13, %r85;
	add.s64 	%rd106, %rd13, %rd3;
	shl.b64 	%rd107, %rd106, 2;
	add.s64 	%rd80, %rd68, %rd107;
	// begin inline asm
	ld.global.nc.u32 %r70, [%rd80];
	// end inline asm
	add.s32 	%r86, %r437, 2560;
	cvt.s64.s32 	%rd14, %r86;
	add.s64 	%rd108, %rd14, %rd3;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd81, %rd68, %rd109;
	// begin inline asm
	ld.global.nc.u32 %r71, [%rd81];
	// end inline asm
	add.s32 	%r87, %r437, 2816;
	cvt.s64.s32 	%rd15, %r87;
	add.s64 	%rd110, %rd15, %rd3;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd82, %rd68, %rd111;
	// begin inline asm
	ld.global.nc.u32 %r72, [%rd82];
	// end inline asm
	add.s32 	%r88, %r437, 3072;
	cvt.s64.s32 	%rd16, %r88;
	add.s64 	%rd112, %rd16, %rd3;
	shl.b64 	%rd113, %rd112, 2;
	add.s64 	%rd83, %rd68, %rd113;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd83];
	// end inline asm
	add.s32 	%r89, %r437, 3328;
	cvt.s64.s32 	%rd17, %r89;
	add.s64 	%rd114, %rd17, %rd3;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd84, %rd68, %rd115;
	// begin inline asm
	ld.global.nc.u32 %r74, [%rd84];
	// end inline asm
	add.s32 	%r90, %r437, 3584;
	cvt.s64.s32 	%rd18, %r90;
	add.s64 	%rd116, %rd18, %rd3;
	shl.b64 	%rd117, %rd116, 2;
	add.s64 	%rd85, %rd68, %rd117;
	// begin inline asm
	ld.global.nc.u32 %r75, [%rd85];
	// end inline asm
	add.s32 	%r91, %r437, 3840;
	cvt.s64.s32 	%rd19, %r91;
	add.s64 	%rd118, %rd19, %rd3;
	shl.b64 	%rd119, %rd118, 2;
	add.s64 	%rd86, %rd68, %rd119;
	// begin inline asm
	ld.global.nc.u32 %r76, [%rd86];
	// end inline asm
	mov.b32 	%f54, %r61;
	mov.b32 	%f55, %r62;
	add.f32 	%f56, %f54, %f55;
	mov.b32 	%f57, %r63;
	add.f32 	%f58, %f56, %f57;
	mov.b32 	%f59, %r64;
	add.f32 	%f60, %f58, %f59;
	mov.b32 	%f61, %r65;
	add.f32 	%f62, %f60, %f61;
	mov.b32 	%f63, %r66;
	add.f32 	%f64, %f62, %f63;
	mov.b32 	%f65, %r67;
	add.f32 	%f66, %f64, %f65;
	mov.b32 	%f67, %r68;
	add.f32 	%f68, %f66, %f67;
	mov.b32 	%f69, %r69;
	add.f32 	%f70, %f68, %f69;
	mov.b32 	%f71, %r70;
	add.f32 	%f72, %f70, %f71;
	mov.b32 	%f73, %r71;
	add.f32 	%f74, %f72, %f73;
	mov.b32 	%f75, %r72;
	add.f32 	%f76, %f74, %f75;
	mov.b32 	%f77, %r73;
	add.f32 	%f78, %f76, %f77;
	mov.b32 	%f79, %r74;
	add.f32 	%f80, %f78, %f79;
	mov.b32 	%f81, %r75;
	add.f32 	%f82, %f80, %f81;
	mov.b32 	%f83, %r76;
	add.f32 	%f391, %f82, %f83;
	setp.lt.u64 	%p3, %rd4, %rd2;
	@%p3 bra 	$L__BB40_14;

	cvt.s64.s32 	%rd262, %r60;
	add.s64 	%rd120, %rd2, %rd262;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd261, %rd68, %rd121;
	add.s64 	%rd123, %rd87, %rd2;
	add.s64 	%rd124, %rd123, %rd262;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd260, %rd68, %rd125;
	mov.u32 	%r421, %tid.x;

$L__BB40_4:
	add.s64 	%rd262, %rd262, %rd2;
	add.s64 	%rd127, %rd1, -4096;
	setp.gt.u64 	%p4, %rd262, %rd127;
	@%p4 bra 	$L__BB40_6;

	cvt.s64.s32 	%rd144, %r421;
	add.s64 	%rd145, %rd262, %rd144;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd128, %rd68, %rd146;
	// begin inline asm
	ld.global.nc.u32 %r94, [%rd128];
	// end inline asm
	add.s64 	%rd147, %rd262, %rd5;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd129, %rd68, %rd148;
	// begin inline asm
	ld.global.nc.u32 %r95, [%rd129];
	// end inline asm
	add.s64 	%rd149, %rd262, %rd6;
	shl.b64 	%rd150, %rd149, 2;
	add.s64 	%rd130, %rd68, %rd150;
	// begin inline asm
	ld.global.nc.u32 %r96, [%rd130];
	// end inline asm
	add.s64 	%rd151, %rd262, %rd7;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd131, %rd68, %rd152;
	// begin inline asm
	ld.global.nc.u32 %r97, [%rd131];
	// end inline asm
	add.s64 	%rd153, %rd262, %rd8;
	shl.b64 	%rd154, %rd153, 2;
	add.s64 	%rd132, %rd68, %rd154;
	// begin inline asm
	ld.global.nc.u32 %r98, [%rd132];
	// end inline asm
	add.s64 	%rd155, %rd262, %rd9;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd133, %rd68, %rd156;
	// begin inline asm
	ld.global.nc.u32 %r99, [%rd133];
	// end inline asm
	add.s64 	%rd157, %rd262, %rd10;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd134, %rd68, %rd158;
	// begin inline asm
	ld.global.nc.u32 %r100, [%rd134];
	// end inline asm
	add.s64 	%rd159, %rd262, %rd11;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd135, %rd68, %rd160;
	// begin inline asm
	ld.global.nc.u32 %r101, [%rd135];
	// end inline asm
	add.s64 	%rd161, %rd262, %rd12;
	shl.b64 	%rd162, %rd161, 2;
	add.s64 	%rd136, %rd68, %rd162;
	// begin inline asm
	ld.global.nc.u32 %r102, [%rd136];
	// end inline asm
	add.s64 	%rd163, %rd262, %rd13;
	shl.b64 	%rd164, %rd163, 2;
	add.s64 	%rd137, %rd68, %rd164;
	// begin inline asm
	ld.global.nc.u32 %r103, [%rd137];
	// end inline asm
	add.s64 	%rd165, %rd262, %rd14;
	shl.b64 	%rd166, %rd165, 2;
	add.s64 	%rd138, %rd68, %rd166;
	// begin inline asm
	ld.global.nc.u32 %r104, [%rd138];
	// end inline asm
	add.s64 	%rd167, %rd262, %rd15;
	shl.b64 	%rd168, %rd167, 2;
	add.s64 	%rd139, %rd68, %rd168;
	// begin inline asm
	ld.global.nc.u32 %r105, [%rd139];
	// end inline asm
	add.s64 	%rd169, %rd262, %rd16;
	shl.b64 	%rd170, %rd169, 2;
	add.s64 	%rd140, %rd68, %rd170;
	// begin inline asm
	ld.global.nc.u32 %r106, [%rd140];
	// end inline asm
	add.s64 	%rd171, %rd262, %rd17;
	shl.b64 	%rd172, %rd171, 2;
	add.s64 	%rd141, %rd68, %rd172;
	// begin inline asm
	ld.global.nc.u32 %r107, [%rd141];
	// end inline asm
	add.s64 	%rd173, %rd262, %rd18;
	shl.b64 	%rd174, %rd173, 2;
	add.s64 	%rd142, %rd68, %rd174;
	// begin inline asm
	ld.global.nc.u32 %r108, [%rd142];
	// end inline asm
	add.s64 	%rd175, %rd262, %rd19;
	shl.b64 	%rd176, %rd175, 2;
	add.s64 	%rd143, %rd68, %rd176;
	// begin inline asm
	ld.global.nc.u32 %r109, [%rd143];
	// end inline asm
	mov.b32 	%f84, %r94;
	add.f32 	%f85, %f391, %f84;
	mov.b32 	%f86, %r95;
	add.f32 	%f87, %f85, %f86;
	mov.b32 	%f88, %r96;
	add.f32 	%f89, %f87, %f88;
	mov.b32 	%f90, %r97;
	add.f32 	%f91, %f89, %f90;
	mov.b32 	%f92, %r98;
	add.f32 	%f93, %f91, %f92;
	mov.b32 	%f94, %r99;
	add.f32 	%f95, %f93, %f94;
	mov.b32 	%f96, %r100;
	add.f32 	%f97, %f95, %f96;
	mov.b32 	%f98, %r101;
	add.f32 	%f99, %f97, %f98;
	mov.b32 	%f100, %r102;
	add.f32 	%f101, %f99, %f100;
	mov.b32 	%f102, %r103;
	add.f32 	%f103, %f101, %f102;
	mov.b32 	%f104, %r104;
	add.f32 	%f105, %f103, %f104;
	mov.b32 	%f106, %r105;
	add.f32 	%f107, %f105, %f106;
	mov.b32 	%f108, %r106;
	add.f32 	%f109, %f107, %f108;
	mov.b32 	%f110, %r107;
	add.f32 	%f111, %f109, %f110;
	mov.b32 	%f112, %r108;
	add.f32 	%f113, %f111, %f112;
	mov.b32 	%f114, %r109;
	add.f32 	%f391, %f113, %f114;
	sub.s64 	%rd178, %rd1, %rd262;
	setp.lt.u64 	%p5, %rd178, %rd2;
	mul.wide.s32 	%rd179, %r1, 4;
	add.s64 	%rd261, %rd261, %rd179;
	add.s64 	%rd260, %rd260, %rd179;
	@%p5 bra 	$L__BB40_14;
	bra.uni 	$L__BB40_4;

$L__BB40_38:
	mov.u32 	%r437, %tid.x;
	shl.b32 	%r249, %r437, 2;
	cvt.u64.u32 	%rd43, %r249;
	add.s64 	%rd213, %rd43, %rd3;
	shl.b64 	%rd214, %rd213, 2;
	add.s64 	%rd203, %rd68, %rd214;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd201, %rd202}, [%rd203];
	// end inline asm
	mov.b64 	{%r250, %r251}, %rd202;
	mov.b64 	{%r252, %r253}, %rd201;
	add.s64 	%rd206, %rd203, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd204, %rd205}, [%rd206];
	// end inline asm
	mov.b64 	{%r254, %r255}, %rd205;
	mov.b64 	{%r256, %r257}, %rd204;
	add.s64 	%rd209, %rd203, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd207, %rd208}, [%rd209];
	// end inline asm
	mov.b64 	{%r258, %r259}, %rd208;
	mov.b64 	{%r260, %r261}, %rd207;
	add.s64 	%rd212, %rd203, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd210, %rd211}, [%rd212];
	// end inline asm
	mov.b64 	{%r262, %r263}, %rd211;
	mov.b64 	{%r264, %r265}, %rd210;
	mov.b32 	%f220, %r252;
	mov.b32 	%f221, %r253;
	mov.b32 	%f222, %r250;
	mov.b32 	%f223, %r251;
	mov.b32 	%f224, %r256;
	mov.b32 	%f225, %r257;
	mov.b32 	%f226, %r254;
	mov.b32 	%f227, %r255;
	mov.b32 	%f228, %r260;
	mov.b32 	%f229, %r261;
	mov.b32 	%f230, %r258;
	mov.b32 	%f231, %r259;
	mov.b32 	%f232, %r264;
	mov.b32 	%f233, %r265;
	mov.b32 	%f234, %r262;
	mov.b32 	%f235, %r263;
	add.f32 	%f236, %f220, %f221;
	add.f32 	%f237, %f236, %f222;
	add.f32 	%f238, %f237, %f223;
	add.f32 	%f239, %f238, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f403, %f249, %f235;
	setp.lt.u64 	%p49, %rd4, %rd2;
	@%p49 bra 	$L__BB40_50;

	add.s64 	%rd44, %rd1, -4096;
	add.s64 	%rd215, %rd2, %rd3;
	shl.b64 	%rd216, %rd215, 2;
	add.s64 	%rd268, %rd68, %rd216;
	shl.b64 	%rd46, %rd2, 2;
	cvt.s64.s32 	%rd217, %r437;
	add.s64 	%rd218, %rd217, %rd2;
	add.s64 	%rd219, %rd218, %rd3;
	shl.b64 	%rd220, %rd219, 2;
	add.s64 	%rd267, %rd68, %rd220;

$L__BB40_40:
	add.s64 	%rd3, %rd3, %rd2;
	setp.gt.u64 	%p50, %rd3, %rd44;
	@%p50 bra 	$L__BB40_42;

	add.s64 	%rd233, %rd3, %rd43;
	shl.b64 	%rd234, %rd233, 2;
	add.s64 	%rd223, %rd68, %rd234;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd221, %rd222}, [%rd223];
	// end inline asm
	mov.b64 	{%r266, %r267}, %rd222;
	mov.b64 	{%r268, %r269}, %rd221;
	add.s64 	%rd226, %rd223, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd224, %rd225}, [%rd226];
	// end inline asm
	mov.b64 	{%r270, %r271}, %rd225;
	mov.b64 	{%r272, %r273}, %rd224;
	add.s64 	%rd229, %rd223, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd227, %rd228}, [%rd229];
	// end inline asm
	mov.b64 	{%r274, %r275}, %rd228;
	mov.b64 	{%r276, %r277}, %rd227;
	add.s64 	%rd232, %rd223, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd230, %rd231}, [%rd232];
	// end inline asm
	mov.b64 	{%r278, %r279}, %rd231;
	mov.b64 	{%r280, %r281}, %rd230;
	mov.b32 	%f250, %r268;
	mov.b32 	%f251, %r269;
	mov.b32 	%f252, %r266;
	mov.b32 	%f253, %r267;
	mov.b32 	%f254, %r272;
	mov.b32 	%f255, %r273;
	mov.b32 	%f256, %r270;
	mov.b32 	%f257, %r271;
	mov.b32 	%f258, %r276;
	mov.b32 	%f259, %r277;
	mov.b32 	%f260, %r274;
	mov.b32 	%f261, %r275;
	mov.b32 	%f262, %r280;
	mov.b32 	%f263, %r281;
	mov.b32 	%f264, %r278;
	mov.b32 	%f265, %r279;
	add.f32 	%f266, %f403, %f250;
	add.f32 	%f267, %f266, %f251;
	add.f32 	%f268, %f267, %f252;
	add.f32 	%f269, %f268, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f403, %f280, %f265;
	sub.s64 	%rd235, %rd1, %rd3;
	setp.lt.u64 	%p51, %rd235, %rd2;
	add.s64 	%rd268, %rd268, %rd46;
	add.s64 	%rd267, %rd267, %rd46;
	@%p51 bra 	$L__BB40_50;
	bra.uni 	$L__BB40_40;

$L__BB40_28:
	shr.s32 	%r198, %r437, 31;
	shr.u32 	%r199, %r198, 27;
	add.s32 	%r200, %r437, %r199;
	shr.s32 	%r30, %r200, 5;
	// begin inline asm
	mov.u32 %r171, %laneid;
	// end inline asm
	and.b32  	%r201, %r200, -32;
	add.s32 	%r202, %r201, 32;
	setp.gt.s32 	%p26, %r202, %r17;
	// begin inline asm
	mov.u32 %r172, %laneid;
	// end inline asm
	not.b32 	%r203, %r201;
	mov.u32 	%r197, -1;
	add.s32 	%r204, %r17, %r203;
	selp.b32 	%r196, %r204, 31, %p26;
	mov.b32 	%r174, %f397;
	mov.u32 	%r175, 1;
	// begin inline asm
	shfl.sync.down.b32 %r173, %r174, %r175, %r196, %r197;
	// end inline asm
	setp.lt.s32 	%p27, %r172, %r196;
	mov.b32 	%f161, %r173;
	add.f32 	%f162, %f397, %f161;
	selp.f32 	%f163, %f162, %f397, %p27;
	mov.b32 	%r179, %f163;
	mov.u32 	%r180, 2;
	// begin inline asm
	shfl.sync.down.b32 %r178, %r179, %r180, %r196, %r197;
	// end inline asm
	add.s32 	%r205, %r172, 2;
	setp.gt.s32 	%p28, %r205, %r196;
	mov.b32 	%f164, %r178;
	add.f32 	%f165, %f163, %f164;
	selp.f32 	%f166, %f163, %f165, %p28;
	mov.b32 	%r184, %f166;
	mov.u32 	%r185, 4;
	// begin inline asm
	shfl.sync.down.b32 %r183, %r184, %r185, %r196, %r197;
	// end inline asm
	add.s32 	%r206, %r172, 4;
	setp.gt.s32 	%p29, %r206, %r196;
	mov.b32 	%f167, %r183;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r189, %f169;
	mov.u32 	%r190, 8;
	// begin inline asm
	shfl.sync.down.b32 %r188, %r189, %r190, %r196, %r197;
	// end inline asm
	add.s32 	%r207, %r172, 8;
	setp.gt.s32 	%p30, %r207, %r196;
	mov.b32 	%f170, %r188;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r194, %f172;
	mov.u32 	%r195, 16;
	// begin inline asm
	shfl.sync.down.b32 %r193, %r194, %r195, %r196, %r197;
	// end inline asm
	add.s32 	%r208, %r172, 16;
	setp.gt.s32 	%p31, %r208, %r196;
	mov.b32 	%f173, %r193;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f410, %f172, %f174, %p31;
	setp.ne.s32 	%p32, %r171, 0;
	@%p32 bra 	$L__BB40_30;

	shl.b32 	%r209, %r30, 2;
	mov.u32 	%r210, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r211, %r210, %r209;
	st.shared.f32 	[%r211+8], %f410;

$L__BB40_30:
	bar.sync 	0;
	setp.ne.s32 	%p33, %r437, 0;
	@%p33 bra 	$L__BB40_73;

	setp.gt.s32 	%p34, %r17, 32;
	mov.u32 	%r437, 0;
	ld.shared.f32 	%f175, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f176, %f410, %f175;
	selp.f32 	%f177, %f176, %f410, %p34;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f179, %f177, %f178;
	setp.gt.s32 	%p35, %r17, 64;
	selp.f32 	%f180, %f179, %f177, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r17, 96;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r17, 128;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r17, 160;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r17, 192;
	selp.f32 	%f410, %f191, %f189, %p39;
	setp.lt.s32 	%p40, %r17, 225;
	@%p40 bra 	$L__BB40_73;

	ld.shared.f32 	%f192, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f410, %f192;
	bra.uni 	$L__BB40_73;

$L__BB40_64:
	shr.s32 	%r367, %r437, 31;
	shr.u32 	%r368, %r367, 27;
	add.s32 	%r369, %r437, %r368;
	shr.s32 	%r56, %r369, 5;
	// begin inline asm
	mov.u32 %r340, %laneid;
	// end inline asm
	and.b32  	%r370, %r369, -32;
	add.s32 	%r371, %r370, 32;
	setp.gt.s32 	%p72, %r371, %r43;
	// begin inline asm
	mov.u32 %r341, %laneid;
	// end inline asm
	not.b32 	%r372, %r370;
	mov.u32 	%r366, -1;
	add.s32 	%r373, %r43, %r372;
	selp.b32 	%r365, %r373, 31, %p72;
	mov.b32 	%r343, %f409;
	mov.u32 	%r344, 1;
	// begin inline asm
	shfl.sync.down.b32 %r342, %r343, %r344, %r365, %r366;
	// end inline asm
	setp.lt.s32 	%p73, %r341, %r365;
	mov.b32 	%f327, %r342;
	add.f32 	%f328, %f409, %f327;
	selp.f32 	%f329, %f328, %f409, %p73;
	mov.b32 	%r348, %f329;
	mov.u32 	%r349, 2;
	// begin inline asm
	shfl.sync.down.b32 %r347, %r348, %r349, %r365, %r366;
	// end inline asm
	add.s32 	%r374, %r341, 2;
	setp.gt.s32 	%p74, %r374, %r365;
	mov.b32 	%f330, %r347;
	add.f32 	%f331, %f329, %f330;
	selp.f32 	%f332, %f329, %f331, %p74;
	mov.b32 	%r353, %f332;
	mov.u32 	%r354, 4;
	// begin inline asm
	shfl.sync.down.b32 %r352, %r353, %r354, %r365, %r366;
	// end inline asm
	add.s32 	%r375, %r341, 4;
	setp.gt.s32 	%p75, %r375, %r365;
	mov.b32 	%f333, %r352;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r358, %f335;
	mov.u32 	%r359, 8;
	// begin inline asm
	shfl.sync.down.b32 %r357, %r358, %r359, %r365, %r366;
	// end inline asm
	add.s32 	%r376, %r341, 8;
	setp.gt.s32 	%p76, %r376, %r365;
	mov.b32 	%f336, %r357;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r363, %f338;
	mov.u32 	%r364, 16;
	// begin inline asm
	shfl.sync.down.b32 %r362, %r363, %r364, %r365, %r366;
	// end inline asm
	add.s32 	%r377, %r341, 16;
	setp.gt.s32 	%p77, %r377, %r365;
	mov.b32 	%f339, %r362;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f410, %f338, %f340, %p77;
	setp.ne.s32 	%p78, %r340, 0;
	@%p78 bra 	$L__BB40_66;

	shl.b32 	%r378, %r56, 2;
	mov.u32 	%r379, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r380, %r379, %r378;
	st.shared.f32 	[%r380+8], %f410;

$L__BB40_66:
	bar.sync 	0;
	setp.ne.s32 	%p79, %r437, 0;
	@%p79 bra 	$L__BB40_73;

	setp.gt.s32 	%p80, %r43, 32;
	mov.u32 	%r437, 0;
	ld.shared.f32 	%f341, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f342, %f410, %f341;
	selp.f32 	%f343, %f342, %f410, %p80;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f345, %f343, %f344;
	setp.gt.s32 	%p81, %r43, 64;
	selp.f32 	%f346, %f345, %f343, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r43, 96;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r43, 128;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r43, 160;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r43, 192;
	selp.f32 	%f410, %f357, %f355, %p85;
	setp.lt.s32 	%p86, %r43, 225;
	@%p86 bra 	$L__BB40_73;

	ld.shared.f32 	%f358, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f410, %f358;
	bra.uni 	$L__BB40_73;

$L__BB40_6:
	setp.le.u64 	%p6, %rd1, %rd262;
	@%p6 bra 	$L__BB40_14;

	sub.s64 	%rd180, %rd1, %rd262;
	cvt.u32.u64 	%r3, %rd180;
	setp.ge.s32 	%p7, %r421, %r3;
	@%p7 bra 	$L__BB40_14;

	cvt.u32.u64 	%r112, %rd1;
	not.b32 	%r113, %r421;
	add.s32 	%r114, %r113, %r112;
	cvt.u32.u64 	%r115, %rd262;
	sub.s32 	%r5, %r114, %r115;
	shr.u32 	%r116, %r5, 8;
	add.s32 	%r117, %r116, 1;
	and.b32  	%r420, %r117, 3;
	setp.eq.s32 	%p8, %r420, 0;
	@%p8 bra 	$L__BB40_11;

	mov.u32 	%r421, %tid.x;

$L__BB40_10:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r118, [%rd260];
	// end inline asm
	mov.b32 	%f116, %r118;
	add.f32 	%f391, %f391, %f116;
	add.s32 	%r421, %r421, 256;
	add.s64 	%rd260, %rd260, 1024;
	add.s32 	%r420, %r420, -1;
	setp.ne.s32 	%p9, %r420, 0;
	@%p9 bra 	$L__BB40_10;

$L__BB40_11:
	setp.lt.u32 	%p10, %r5, 768;
	@%p10 bra 	$L__BB40_14;

	mul.wide.s32 	%rd31, %r421, 4;
	add.s64 	%rd32, %rd31, 3072;
	add.s64 	%rd33, %rd31, 2048;
	add.s64 	%rd34, %rd31, 1024;

$L__BB40_13:
	add.s64 	%rd182, %rd261, %rd31;
	// begin inline asm
	ld.global.nc.u32 %r119, [%rd182];
	// end inline asm
	mov.b32 	%f117, %r119;
	add.f32 	%f118, %f391, %f117;
	add.s64 	%rd183, %rd261, %rd34;
	// begin inline asm
	ld.global.nc.u32 %r120, [%rd183];
	// end inline asm
	mov.b32 	%f119, %r120;
	add.f32 	%f120, %f118, %f119;
	add.s64 	%rd184, %rd261, %rd33;
	// begin inline asm
	ld.global.nc.u32 %r121, [%rd184];
	// end inline asm
	mov.b32 	%f121, %r121;
	add.f32 	%f122, %f120, %f121;
	add.s64 	%rd185, %rd261, %rd32;
	// begin inline asm
	ld.global.nc.u32 %r122, [%rd185];
	// end inline asm
	mov.b32 	%f123, %r122;
	add.f32 	%f391, %f122, %f123;
	add.s64 	%rd261, %rd261, 4096;
	add.s32 	%r421, %r421, 1024;
	setp.lt.s32 	%p11, %r421, %r3;
	@%p11 bra 	$L__BB40_13;

$L__BB40_14:
	// begin inline asm
	mov.u32 %r123, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r124, %laneid;
	// end inline asm
	mov.b32 	%r126, %f391;
	mov.u32 	%r127, 1;
	mov.u32 	%r148, 31;
	mov.u32 	%r149, -1;
	// begin inline asm
	shfl.sync.down.b32 %r125, %r126, %r127, %r148, %r149;
	// end inline asm
	setp.gt.s32 	%p12, %r124, 30;
	mov.b32 	%f124, %r125;
	add.f32 	%f125, %f391, %f124;
	selp.f32 	%f126, %f391, %f125, %p12;
	mov.b32 	%r131, %f126;
	mov.u32 	%r132, 2;
	// begin inline asm
	shfl.sync.down.b32 %r130, %r131, %r132, %r148, %r149;
	// end inline asm
	setp.gt.s32 	%p13, %r124, 29;
	mov.b32 	%f127, %r130;
	add.f32 	%f128, %f126, %f127;
	selp.f32 	%f129, %f126, %f128, %p13;
	mov.b32 	%r136, %f129;
	mov.u32 	%r137, 4;
	// begin inline asm
	shfl.sync.down.b32 %r135, %r136, %r137, %r148, %r149;
	// end inline asm
	setp.gt.s32 	%p14, %r124, 27;
	mov.b32 	%f130, %r135;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r141, %f132;
	mov.u32 	%r142, 8;
	// begin inline asm
	shfl.sync.down.b32 %r140, %r141, %r142, %r148, %r149;
	// end inline asm
	setp.gt.s32 	%p15, %r124, 23;
	mov.b32 	%f133, %r140;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r146, %f135;
	mov.u32 	%r147, 16;
	// begin inline asm
	shfl.sync.down.b32 %r145, %r146, %r147, %r148, %r149;
	// end inline asm
	setp.gt.s32 	%p16, %r124, 15;
	mov.b32 	%f136, %r145;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f410, %f135, %f137, %p16;
	setp.ne.s32 	%p17, %r123, 0;
	@%p17 bra 	$L__BB40_16;

	mov.u32 	%r150, %tid.x;
	shr.s32 	%r151, %r150, 31;
	shr.u32 	%r152, %r151, 27;
	add.s32 	%r153, %r150, %r152;
	shr.s32 	%r154, %r153, 5;
	shl.b32 	%r155, %r154, 2;
	mov.u32 	%r156, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r157, %r156, %r155;
	st.shared.f32 	[%r157+8], %f410;

$L__BB40_16:
	bar.sync 	0;
	setp.ne.s32 	%p18, %r437, 0;
	@%p18 bra 	$L__BB40_73;

	mov.u32 	%r437, 0;
	ld.shared.f32 	%f138, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f139, %f410, %f138;
	ld.shared.f32 	%f140, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f141, %f139, %f140;
	ld.shared.f32 	%f142, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f143, %f141, %f142;
	ld.shared.f32 	%f144, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f145, %f143, %f144;
	ld.shared.f32 	%f146, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f147, %f145, %f146;
	ld.shared.f32 	%f148, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f149, %f147, %f148;
	ld.shared.f32 	%f150, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f149, %f150;
	bra.uni 	$L__BB40_73;

$L__BB40_42:
	setp.le.u64 	%p52, %rd1, %rd3;
	@%p52 bra 	$L__BB40_50;

	sub.s64 	%rd236, %rd1, %rd3;
	cvt.u32.u64 	%r32, %rd236;
	setp.ge.s32 	%p53, %r437, %r32;
	@%p53 bra 	$L__BB40_50;

	cvt.u32.u64 	%r282, %rd1;
	not.b32 	%r283, %r437;
	add.s32 	%r284, %r283, %r282;
	cvt.u32.u64 	%r285, %rd3;
	sub.s32 	%r33, %r284, %r285;
	shr.u32 	%r286, %r33, 8;
	add.s32 	%r287, %r286, 1;
	and.b32  	%r429, %r287, 3;
	setp.eq.s32 	%p54, %r429, 0;
	mov.u32 	%r430, %r437;
	@%p54 bra 	$L__BB40_47;

	mov.u32 	%r430, %r437;

$L__BB40_46:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r288, [%rd267];
	// end inline asm
	mov.b32 	%f282, %r288;
	add.f32 	%f403, %f403, %f282;
	add.s32 	%r430, %r430, 256;
	add.s64 	%rd267, %rd267, 1024;
	add.s32 	%r429, %r429, -1;
	setp.ne.s32 	%p55, %r429, 0;
	@%p55 bra 	$L__BB40_46;

$L__BB40_47:
	setp.lt.u32 	%p56, %r33, 768;
	@%p56 bra 	$L__BB40_50;

	mul.wide.s32 	%rd56, %r430, 4;
	add.s64 	%rd57, %rd56, 3072;
	add.s64 	%rd58, %rd56, 2048;
	add.s64 	%rd59, %rd56, 1024;

$L__BB40_49:
	add.s64 	%rd238, %rd268, %rd56;
	// begin inline asm
	ld.global.nc.u32 %r289, [%rd238];
	// end inline asm
	mov.b32 	%f283, %r289;
	add.f32 	%f284, %f403, %f283;
	add.s64 	%rd239, %rd268, %rd59;
	// begin inline asm
	ld.global.nc.u32 %r290, [%rd239];
	// end inline asm
	mov.b32 	%f285, %r290;
	add.f32 	%f286, %f284, %f285;
	add.s64 	%rd240, %rd268, %rd58;
	// begin inline asm
	ld.global.nc.u32 %r291, [%rd240];
	// end inline asm
	mov.b32 	%f287, %r291;
	add.f32 	%f288, %f286, %f287;
	add.s64 	%rd241, %rd268, %rd57;
	// begin inline asm
	ld.global.nc.u32 %r292, [%rd241];
	// end inline asm
	mov.b32 	%f289, %r292;
	add.f32 	%f403, %f288, %f289;
	add.s64 	%rd268, %rd268, 4096;
	add.s32 	%r430, %r430, 1024;
	setp.lt.s32 	%p57, %r430, %r32;
	@%p57 bra 	$L__BB40_49;

$L__BB40_50:
	// begin inline asm
	mov.u32 %r293, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r294, %laneid;
	// end inline asm
	mov.b32 	%r296, %f403;
	mov.u32 	%r297, 1;
	mov.u32 	%r318, 31;
	mov.u32 	%r319, -1;
	// begin inline asm
	shfl.sync.down.b32 %r295, %r296, %r297, %r318, %r319;
	// end inline asm
	setp.gt.s32 	%p58, %r294, 30;
	mov.b32 	%f290, %r295;
	add.f32 	%f291, %f403, %f290;
	selp.f32 	%f292, %f403, %f291, %p58;
	mov.b32 	%r301, %f292;
	mov.u32 	%r302, 2;
	// begin inline asm
	shfl.sync.down.b32 %r300, %r301, %r302, %r318, %r319;
	// end inline asm
	setp.gt.s32 	%p59, %r294, 29;
	mov.b32 	%f293, %r300;
	add.f32 	%f294, %f292, %f293;
	selp.f32 	%f295, %f292, %f294, %p59;
	mov.b32 	%r306, %f295;
	mov.u32 	%r307, 4;
	// begin inline asm
	shfl.sync.down.b32 %r305, %r306, %r307, %r318, %r319;
	// end inline asm
	setp.gt.s32 	%p60, %r294, 27;
	mov.b32 	%f296, %r305;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r311, %f298;
	mov.u32 	%r312, 8;
	// begin inline asm
	shfl.sync.down.b32 %r310, %r311, %r312, %r318, %r319;
	// end inline asm
	setp.gt.s32 	%p61, %r294, 23;
	mov.b32 	%f299, %r310;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r316, %f301;
	mov.u32 	%r317, 16;
	// begin inline asm
	shfl.sync.down.b32 %r315, %r316, %r317, %r318, %r319;
	// end inline asm
	setp.gt.s32 	%p62, %r294, 15;
	mov.b32 	%f302, %r315;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f410, %f301, %f303, %p62;
	setp.ne.s32 	%p63, %r293, 0;
	@%p63 bra 	$L__BB40_52;

	shr.s32 	%r320, %r437, 31;
	shr.u32 	%r321, %r320, 27;
	add.s32 	%r322, %r437, %r321;
	shr.s32 	%r323, %r322, 5;
	shl.b32 	%r324, %r323, 2;
	mov.u32 	%r325, _ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage;
	add.s32 	%r326, %r325, %r324;
	st.shared.f32 	[%r326+8], %f410;

$L__BB40_52:
	bar.sync 	0;
	setp.ne.s32 	%p64, %r437, 0;
	@%p64 bra 	$L__BB40_73;

	mov.u32 	%r437, 0;
	ld.shared.f32 	%f304, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+12];
	add.f32 	%f305, %f410, %f304;
	ld.shared.f32 	%f306, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+16];
	add.f32 	%f307, %f305, %f306;
	ld.shared.f32 	%f308, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+20];
	add.f32 	%f309, %f307, %f308;
	ld.shared.f32 	%f310, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+24];
	add.f32 	%f311, %f309, %f310;
	ld.shared.f32 	%f312, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+28];
	add.f32 	%f313, %f311, %f312;
	ld.shared.f32 	%f314, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+32];
	add.f32 	%f315, %f313, %f314;
	ld.shared.f32 	%f316, [_ZZN3cub17CUB_200200_900_NS18DeviceReduceKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfyS5_fEEvT0_PT3_T1_NS0_13GridEvenShareISC_EET2_E12temp_storage+36];
	add.f32 	%f410, %f315, %f316;

$L__BB40_73:
	setp.ne.s32 	%p94, %r437, 0;
	@%p94 bra 	$L__BB40_75;

	cvta.to.global.u64 	%rd257, %rd69;
	mul.wide.u32 	%rd258, %r59, 4;
	add.s64 	%rd259, %rd257, %rd258;
	st.global.f32 	[%rd259], %f410;

$L__BB40_75:
	ret;

}
	// .globl	_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_
.visible .entry _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_(
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_0,
	.param .u64 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_1,
	.param .u32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_2,
	.param .align 1 .b8 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_3[1],
	.param .f32 _ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_4
)
.maxntid 256, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<97>;
	.reg .f32 	%f<417>;
	.reg .b32 	%r<421>;
	.reg .b64 	%rd<136>;
	// demoted variable
	.shared .align 4 .b8 _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage[44];

	ld.param.u64 	%rd31, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_0];
	ld.param.u64 	%rd32, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_1];
	ld.param.u32 	%r59, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_2];
	ld.param.f32 	%f56, [_ZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4__param_4];
	setp.eq.s32 	%p1, %r59, 0;
	@%p1 bra 	$L__BB41_76;

	and.b64  	%rd33, %rd31, 15;
	setp.eq.s64 	%p2, %rd33, 0;
	mov.u32 	%r420, %tid.x;
	@%p2 bra 	$L__BB41_38;

	setp.lt.s32 	%p3, %r59, 4096;
	@%p3 bra 	$L__BB41_19;
	bra.uni 	$L__BB41_3;

$L__BB41_19:
	setp.ge.s32 	%p20, %r420, %r59;
	mov.f32 	%f402, 0f00000000;
	mov.u32 	%r406, %r420;
	@%p20 bra 	$L__BB41_21;

	mul.wide.s32 	%rd75, %r420, 4;
	add.s64 	%rd74, %rd31, %rd75;
	// begin inline asm
	ld.global.nc.u32 %r140, [%rd74];
	// end inline asm
	mov.b32 	%f402, %r140;
	add.s32 	%r406, %r420, 256;

$L__BB41_21:
	setp.ge.s32 	%p21, %r406, %r59;
	@%p21 bra 	$L__BB41_28;

	not.b32 	%r141, %r406;
	add.s32 	%r20, %r141, %r59;
	shr.u32 	%r142, %r20, 8;
	add.s32 	%r143, %r142, 1;
	and.b32  	%r405, %r143, 3;
	setp.eq.s32 	%p22, %r405, 0;
	@%p22 bra 	$L__BB41_25;

	mul.wide.s32 	%rd76, %r406, 4;
	add.s64 	%rd129, %rd31, %rd76;

$L__BB41_24:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r144, [%rd129];
	// end inline asm
	mov.b32 	%f156, %r144;
	add.f32 	%f402, %f402, %f156;
	add.s32 	%r406, %r406, 256;
	add.s64 	%rd129, %rd129, 1024;
	add.s32 	%r405, %r405, -1;
	setp.ne.s32 	%p23, %r405, 0;
	@%p23 bra 	$L__BB41_24;

$L__BB41_25:
	setp.lt.u32 	%p24, %r20, 768;
	@%p24 bra 	$L__BB41_28;

	mul.wide.s32 	%rd78, %r406, 4;
	add.s64 	%rd130, %rd31, %rd78;

$L__BB41_27:
	// begin inline asm
	ld.global.nc.u32 %r145, [%rd130];
	// end inline asm
	mov.b32 	%f157, %r145;
	add.f32 	%f158, %f402, %f157;
	add.s64 	%rd80, %rd130, 1024;
	// begin inline asm
	ld.global.nc.u32 %r146, [%rd80];
	// end inline asm
	mov.b32 	%f159, %r146;
	add.f32 	%f160, %f158, %f159;
	add.s64 	%rd81, %rd130, 2048;
	// begin inline asm
	ld.global.nc.u32 %r147, [%rd81];
	// end inline asm
	mov.b32 	%f161, %r147;
	add.f32 	%f162, %f160, %f161;
	add.s64 	%rd82, %rd130, 3072;
	// begin inline asm
	ld.global.nc.u32 %r148, [%rd82];
	// end inline asm
	mov.b32 	%f163, %r148;
	add.f32 	%f402, %f162, %f163;
	add.s64 	%rd130, %rd130, 4096;
	add.s32 	%r406, %r406, 1024;
	setp.lt.s32 	%p25, %r406, %r59;
	@%p25 bra 	$L__BB41_27;

$L__BB41_28:
	setp.gt.s32 	%p26, %r59, 255;
	@%p26 bra 	$L__BB41_34;
	bra.uni 	$L__BB41_29;

$L__BB41_34:
	// begin inline asm
	mov.u32 %r192, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r193, %laneid;
	// end inline asm
	mov.b32 	%r195, %f402;
	mov.u32 	%r196, 1;
	mov.u32 	%r217, 31;
	mov.u32 	%r218, -1;
	// begin inline asm
	shfl.sync.down.b32 %r194, %r195, %r196, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p42, %r193, 30;
	mov.b32 	%f196, %r194;
	add.f32 	%f197, %f402, %f196;
	selp.f32 	%f198, %f402, %f197, %p42;
	mov.b32 	%r200, %f198;
	mov.u32 	%r201, 2;
	// begin inline asm
	shfl.sync.down.b32 %r199, %r200, %r201, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p43, %r193, 29;
	mov.b32 	%f199, %r199;
	add.f32 	%f200, %f198, %f199;
	selp.f32 	%f201, %f198, %f200, %p43;
	mov.b32 	%r205, %f201;
	mov.u32 	%r206, 4;
	// begin inline asm
	shfl.sync.down.b32 %r204, %r205, %r206, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p44, %r193, 27;
	mov.b32 	%f202, %r204;
	add.f32 	%f203, %f201, %f202;
	selp.f32 	%f204, %f201, %f203, %p44;
	mov.b32 	%r210, %f204;
	mov.u32 	%r211, 8;
	// begin inline asm
	shfl.sync.down.b32 %r209, %r210, %r211, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p45, %r193, 23;
	mov.b32 	%f205, %r209;
	add.f32 	%f206, %f204, %f205;
	selp.f32 	%f207, %f204, %f206, %p45;
	mov.b32 	%r215, %f207;
	mov.u32 	%r216, 16;
	// begin inline asm
	shfl.sync.down.b32 %r214, %r215, %r216, %r217, %r218;
	// end inline asm
	setp.gt.s32 	%p46, %r193, 15;
	mov.b32 	%f208, %r214;
	add.f32 	%f209, %f207, %f208;
	selp.f32 	%f416, %f207, %f209, %p46;
	setp.ne.s32 	%p47, %r192, 0;
	@%p47 bra 	$L__BB41_36;

	shr.s32 	%r219, %r420, 31;
	shr.u32 	%r220, %r219, 27;
	add.s32 	%r221, %r420, %r220;
	shr.s32 	%r222, %r221, 5;
	shl.b32 	%r223, %r222, 2;
	mov.u32 	%r224, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r225, %r224, %r223;
	st.shared.f32 	[%r225+8], %f416;

$L__BB41_36:
	bar.sync 	0;
	setp.ne.s32 	%p48, %r420, 0;
	@%p48 bra 	$L__BB41_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f210, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f211, %f416, %f210;
	ld.shared.f32 	%f212, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f213, %f211, %f212;
	ld.shared.f32 	%f214, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f215, %f213, %f214;
	ld.shared.f32 	%f216, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f217, %f215, %f216;
	ld.shared.f32 	%f218, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f219, %f217, %f218;
	ld.shared.f32 	%f220, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f221, %f219, %f220;
	ld.shared.f32 	%f222, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f221, %f222;
	bra.uni 	$L__BB41_74;

$L__BB41_76:
	mov.u32 	%r395, %tid.x;
	setp.ne.s32 	%p96, %r395, 0;
	@%p96 bra 	$L__BB41_78;

	cvta.to.global.u64 	%rd125, %rd32;
	st.global.f32 	[%rd125], %f56;
	bra.uni 	$L__BB41_78;

$L__BB41_38:
	setp.lt.s32 	%p49, %r59, 4096;
	@%p49 bra 	$L__BB41_55;
	bra.uni 	$L__BB41_39;

$L__BB41_55:
	setp.ge.s32 	%p66, %r420, %r59;
	mov.f32 	%f415, 0f00000000;
	mov.u32 	%r418, %r420;
	@%p66 bra 	$L__BB41_57;

	mul.wide.s32 	%rd116, %r420, 4;
	add.s64 	%rd115, %rd31, %rd116;
	// begin inline asm
	ld.global.nc.u32 %r308, [%rd115];
	// end inline asm
	mov.b32 	%f415, %r308;
	add.s32 	%r418, %r420, 256;

$L__BB41_57:
	setp.ge.s32 	%p67, %r418, %r59;
	@%p67 bra 	$L__BB41_64;

	not.b32 	%r309, %r418;
	add.s32 	%r48, %r309, %r59;
	shr.u32 	%r310, %r48, 8;
	add.s32 	%r311, %r310, 1;
	and.b32  	%r417, %r311, 3;
	setp.eq.s32 	%p68, %r417, 0;
	@%p68 bra 	$L__BB41_61;

	mul.wide.s32 	%rd117, %r418, 4;
	add.s64 	%rd134, %rd31, %rd117;

$L__BB41_60:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r312, [%rd134];
	// end inline asm
	mov.b32 	%f322, %r312;
	add.f32 	%f415, %f415, %f322;
	add.s32 	%r418, %r418, 256;
	add.s64 	%rd134, %rd134, 1024;
	add.s32 	%r417, %r417, -1;
	setp.ne.s32 	%p69, %r417, 0;
	@%p69 bra 	$L__BB41_60;

$L__BB41_61:
	setp.lt.u32 	%p70, %r48, 768;
	@%p70 bra 	$L__BB41_64;

	mul.wide.s32 	%rd119, %r418, 4;
	add.s64 	%rd135, %rd31, %rd119;

$L__BB41_63:
	// begin inline asm
	ld.global.nc.u32 %r313, [%rd135];
	// end inline asm
	mov.b32 	%f323, %r313;
	add.f32 	%f324, %f415, %f323;
	add.s64 	%rd121, %rd135, 1024;
	// begin inline asm
	ld.global.nc.u32 %r314, [%rd121];
	// end inline asm
	mov.b32 	%f325, %r314;
	add.f32 	%f326, %f324, %f325;
	add.s64 	%rd122, %rd135, 2048;
	// begin inline asm
	ld.global.nc.u32 %r315, [%rd122];
	// end inline asm
	mov.b32 	%f327, %r315;
	add.f32 	%f328, %f326, %f327;
	add.s64 	%rd123, %rd135, 3072;
	// begin inline asm
	ld.global.nc.u32 %r316, [%rd123];
	// end inline asm
	mov.b32 	%f329, %r316;
	add.f32 	%f415, %f328, %f329;
	add.s64 	%rd135, %rd135, 4096;
	add.s32 	%r418, %r418, 1024;
	setp.lt.s32 	%p71, %r418, %r59;
	@%p71 bra 	$L__BB41_63;

$L__BB41_64:
	setp.gt.s32 	%p72, %r59, 255;
	@%p72 bra 	$L__BB41_70;
	bra.uni 	$L__BB41_65;

$L__BB41_70:
	// begin inline asm
	mov.u32 %r360, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r361, %laneid;
	// end inline asm
	mov.b32 	%r363, %f415;
	mov.u32 	%r364, 1;
	mov.u32 	%r385, 31;
	mov.u32 	%r386, -1;
	// begin inline asm
	shfl.sync.down.b32 %r362, %r363, %r364, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p88, %r361, 30;
	mov.b32 	%f362, %r362;
	add.f32 	%f363, %f415, %f362;
	selp.f32 	%f364, %f415, %f363, %p88;
	mov.b32 	%r368, %f364;
	mov.u32 	%r369, 2;
	// begin inline asm
	shfl.sync.down.b32 %r367, %r368, %r369, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p89, %r361, 29;
	mov.b32 	%f365, %r367;
	add.f32 	%f366, %f364, %f365;
	selp.f32 	%f367, %f364, %f366, %p89;
	mov.b32 	%r373, %f367;
	mov.u32 	%r374, 4;
	// begin inline asm
	shfl.sync.down.b32 %r372, %r373, %r374, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p90, %r361, 27;
	mov.b32 	%f368, %r372;
	add.f32 	%f369, %f367, %f368;
	selp.f32 	%f370, %f367, %f369, %p90;
	mov.b32 	%r378, %f370;
	mov.u32 	%r379, 8;
	// begin inline asm
	shfl.sync.down.b32 %r377, %r378, %r379, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p91, %r361, 23;
	mov.b32 	%f371, %r377;
	add.f32 	%f372, %f370, %f371;
	selp.f32 	%f373, %f370, %f372, %p91;
	mov.b32 	%r383, %f373;
	mov.u32 	%r384, 16;
	// begin inline asm
	shfl.sync.down.b32 %r382, %r383, %r384, %r385, %r386;
	// end inline asm
	setp.gt.s32 	%p92, %r361, 15;
	mov.b32 	%f374, %r382;
	add.f32 	%f375, %f373, %f374;
	selp.f32 	%f416, %f373, %f375, %p92;
	setp.ne.s32 	%p93, %r360, 0;
	@%p93 bra 	$L__BB41_72;

	shr.s32 	%r387, %r420, 31;
	shr.u32 	%r388, %r387, 27;
	add.s32 	%r389, %r420, %r388;
	shr.s32 	%r390, %r389, 5;
	shl.b32 	%r391, %r390, 2;
	mov.u32 	%r392, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r393, %r392, %r391;
	st.shared.f32 	[%r393+8], %f416;

$L__BB41_72:
	bar.sync 	0;
	setp.ne.s32 	%p94, %r420, 0;
	@%p94 bra 	$L__BB41_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f376, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f377, %f416, %f376;
	ld.shared.f32 	%f378, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f379, %f377, %f378;
	ld.shared.f32 	%f380, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f381, %f379, %f380;
	ld.shared.f32 	%f382, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f383, %f381, %f382;
	ld.shared.f32 	%f384, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f385, %f383, %f384;
	ld.shared.f32 	%f386, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f387, %f385, %f386;
	ld.shared.f32 	%f388, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f387, %f388;
	bra.uni 	$L__BB41_74;

$L__BB41_3:
	mul.wide.s32 	%rd50, %r420, 4;
	add.s64 	%rd126, %rd31, %rd50;
	// begin inline asm
	ld.global.nc.u32 %r60, [%rd126];
	// end inline asm
	add.s64 	%rd35, %rd126, 1024;
	// begin inline asm
	ld.global.nc.u32 %r61, [%rd35];
	// end inline asm
	add.s64 	%rd36, %rd126, 2048;
	// begin inline asm
	ld.global.nc.u32 %r62, [%rd36];
	// end inline asm
	add.s64 	%rd37, %rd126, 3072;
	// begin inline asm
	ld.global.nc.u32 %r63, [%rd37];
	// end inline asm
	add.s64 	%rd38, %rd126, 4096;
	// begin inline asm
	ld.global.nc.u32 %r64, [%rd38];
	// end inline asm
	add.s64 	%rd39, %rd126, 5120;
	// begin inline asm
	ld.global.nc.u32 %r65, [%rd39];
	// end inline asm
	add.s64 	%rd40, %rd126, 6144;
	// begin inline asm
	ld.global.nc.u32 %r66, [%rd40];
	// end inline asm
	add.s64 	%rd41, %rd126, 7168;
	// begin inline asm
	ld.global.nc.u32 %r67, [%rd41];
	// end inline asm
	add.s64 	%rd42, %rd126, 8192;
	// begin inline asm
	ld.global.nc.u32 %r68, [%rd42];
	// end inline asm
	add.s64 	%rd43, %rd126, 9216;
	// begin inline asm
	ld.global.nc.u32 %r69, [%rd43];
	// end inline asm
	add.s64 	%rd44, %rd126, 10240;
	// begin inline asm
	ld.global.nc.u32 %r70, [%rd44];
	// end inline asm
	add.s64 	%rd45, %rd126, 11264;
	// begin inline asm
	ld.global.nc.u32 %r71, [%rd45];
	// end inline asm
	add.s64 	%rd46, %rd126, 12288;
	// begin inline asm
	ld.global.nc.u32 %r72, [%rd46];
	// end inline asm
	add.s64 	%rd47, %rd126, 13312;
	// begin inline asm
	ld.global.nc.u32 %r73, [%rd47];
	// end inline asm
	add.s64 	%rd48, %rd126, 14336;
	// begin inline asm
	ld.global.nc.u32 %r74, [%rd48];
	// end inline asm
	add.s64 	%rd49, %rd126, 15360;
	// begin inline asm
	ld.global.nc.u32 %r75, [%rd49];
	// end inline asm
	mov.b32 	%f57, %r60;
	mov.b32 	%f58, %r61;
	add.f32 	%f59, %f57, %f58;
	mov.b32 	%f60, %r62;
	add.f32 	%f61, %f59, %f60;
	mov.b32 	%f62, %r63;
	add.f32 	%f63, %f61, %f62;
	mov.b32 	%f64, %r64;
	add.f32 	%f65, %f63, %f64;
	mov.b32 	%f66, %r65;
	add.f32 	%f67, %f65, %f66;
	mov.b32 	%f68, %r66;
	add.f32 	%f69, %f67, %f68;
	mov.b32 	%f70, %r67;
	add.f32 	%f71, %f69, %f70;
	mov.b32 	%f72, %r68;
	add.f32 	%f73, %f71, %f72;
	mov.b32 	%f74, %r69;
	add.f32 	%f75, %f73, %f74;
	mov.b32 	%f76, %r70;
	add.f32 	%f77, %f75, %f76;
	mov.b32 	%f78, %r71;
	add.f32 	%f79, %f77, %f78;
	mov.b32 	%f80, %r72;
	add.f32 	%f81, %f79, %f80;
	mov.b32 	%f82, %r73;
	add.f32 	%f83, %f81, %f82;
	mov.b32 	%f84, %r74;
	add.f32 	%f85, %f83, %f84;
	mov.b32 	%f86, %r75;
	add.f32 	%f396, %f85, %f86;
	add.s32 	%r2, %r59, -4096;
	setp.lt.s32 	%p4, %r59, 8192;
	mov.u32 	%r398, 4096;
	@%p4 bra 	$L__BB41_7;

	mov.u32 	%r398, 4096;
	mov.u32 	%r396, %r2;

$L__BB41_5:
	add.s64 	%rd51, %rd126, 16384;
	// begin inline asm
	ld.global.nc.u32 %r78, [%rd51];
	// end inline asm
	add.s64 	%rd52, %rd126, 17408;
	// begin inline asm
	ld.global.nc.u32 %r79, [%rd52];
	// end inline asm
	add.s64 	%rd53, %rd126, 18432;
	// begin inline asm
	ld.global.nc.u32 %r80, [%rd53];
	// end inline asm
	add.s64 	%rd54, %rd126, 19456;
	// begin inline asm
	ld.global.nc.u32 %r81, [%rd54];
	// end inline asm
	add.s64 	%rd55, %rd126, 20480;
	// begin inline asm
	ld.global.nc.u32 %r82, [%rd55];
	// end inline asm
	add.s64 	%rd56, %rd126, 21504;
	// begin inline asm
	ld.global.nc.u32 %r83, [%rd56];
	// end inline asm
	add.s64 	%rd57, %rd126, 22528;
	// begin inline asm
	ld.global.nc.u32 %r84, [%rd57];
	// end inline asm
	add.s64 	%rd58, %rd126, 23552;
	// begin inline asm
	ld.global.nc.u32 %r85, [%rd58];
	// end inline asm
	add.s64 	%rd59, %rd126, 24576;
	// begin inline asm
	ld.global.nc.u32 %r86, [%rd59];
	// end inline asm
	add.s64 	%rd60, %rd126, 25600;
	// begin inline asm
	ld.global.nc.u32 %r87, [%rd60];
	// end inline asm
	add.s64 	%rd61, %rd126, 26624;
	// begin inline asm
	ld.global.nc.u32 %r88, [%rd61];
	// end inline asm
	add.s64 	%rd62, %rd126, 27648;
	// begin inline asm
	ld.global.nc.u32 %r89, [%rd62];
	// end inline asm
	add.s64 	%rd63, %rd126, 28672;
	// begin inline asm
	ld.global.nc.u32 %r90, [%rd63];
	// end inline asm
	add.s64 	%rd64, %rd126, 29696;
	// begin inline asm
	ld.global.nc.u32 %r91, [%rd64];
	// end inline asm
	add.s64 	%rd65, %rd126, 30720;
	// begin inline asm
	ld.global.nc.u32 %r92, [%rd65];
	// end inline asm
	add.s64 	%rd66, %rd126, 31744;
	// begin inline asm
	ld.global.nc.u32 %r93, [%rd66];
	// end inline asm
	mov.b32 	%f87, %r78;
	add.f32 	%f88, %f396, %f87;
	mov.b32 	%f89, %r79;
	add.f32 	%f90, %f88, %f89;
	mov.b32 	%f91, %r80;
	add.f32 	%f92, %f90, %f91;
	mov.b32 	%f93, %r81;
	add.f32 	%f94, %f92, %f93;
	mov.b32 	%f95, %r82;
	add.f32 	%f96, %f94, %f95;
	mov.b32 	%f97, %r83;
	add.f32 	%f98, %f96, %f97;
	mov.b32 	%f99, %r84;
	add.f32 	%f100, %f98, %f99;
	mov.b32 	%f101, %r85;
	add.f32 	%f102, %f100, %f101;
	mov.b32 	%f103, %r86;
	add.f32 	%f104, %f102, %f103;
	mov.b32 	%f105, %r87;
	add.f32 	%f106, %f104, %f105;
	mov.b32 	%f107, %r88;
	add.f32 	%f108, %f106, %f107;
	mov.b32 	%f109, %r89;
	add.f32 	%f110, %f108, %f109;
	mov.b32 	%f111, %r90;
	add.f32 	%f112, %f110, %f111;
	mov.b32 	%f113, %r91;
	add.f32 	%f114, %f112, %f113;
	mov.b32 	%f115, %r92;
	add.f32 	%f116, %f114, %f115;
	mov.b32 	%f117, %r93;
	add.f32 	%f396, %f116, %f117;
	setp.lt.s32 	%p5, %r396, 4096;
	@%p5 bra 	$L__BB41_15;

	add.s32 	%r398, %r398, 4096;
	add.s32 	%r396, %r396, -4096;
	setp.le.s32 	%p6, %r398, %r2;
	mov.u64 	%rd126, %rd51;
	@%p6 bra 	$L__BB41_5;

$L__BB41_7:
	setp.ge.s32 	%p7, %r398, %r59;
	@%p7 bra 	$L__BB41_15;

	sub.s32 	%r8, %r59, %r398;
	setp.ge.s32 	%p8, %r420, %r8;
	@%p8 bra 	$L__BB41_15;

	not.b32 	%r94, %r420;
	add.s32 	%r95, %r94, %r59;
	sub.s32 	%r9, %r95, %r398;
	shr.u32 	%r96, %r9, 8;
	add.s32 	%r97, %r96, 1;
	and.b32  	%r400, %r97, 3;
	setp.eq.s32 	%p9, %r400, 0;
	mov.u32 	%r401, %r420;
	@%p9 bra 	$L__BB41_12;

	add.s32 	%r98, %r420, %r398;
	mul.wide.s32 	%rd67, %r98, 4;
	add.s64 	%rd127, %rd31, %rd67;
	mov.u32 	%r401, %r420;

$L__BB41_11:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r99, [%rd127];
	// end inline asm
	mov.b32 	%f119, %r99;
	add.f32 	%f396, %f396, %f119;
	add.s32 	%r401, %r401, 256;
	add.s64 	%rd127, %rd127, 1024;
	add.s32 	%r400, %r400, -1;
	setp.ne.s32 	%p10, %r400, 0;
	@%p10 bra 	$L__BB41_11;

$L__BB41_12:
	setp.lt.u32 	%p11, %r9, 768;
	@%p11 bra 	$L__BB41_15;

	add.s32 	%r100, %r401, %r398;
	mul.wide.s32 	%rd69, %r100, 4;
	add.s64 	%rd128, %rd31, %rd69;

$L__BB41_14:
	// begin inline asm
	ld.global.nc.u32 %r101, [%rd128];
	// end inline asm
	mov.b32 	%f120, %r101;
	add.f32 	%f121, %f396, %f120;
	add.s64 	%rd71, %rd128, 1024;
	// begin inline asm
	ld.global.nc.u32 %r102, [%rd71];
	// end inline asm
	mov.b32 	%f122, %r102;
	add.f32 	%f123, %f121, %f122;
	add.s64 	%rd72, %rd128, 2048;
	// begin inline asm
	ld.global.nc.u32 %r103, [%rd72];
	// end inline asm
	mov.b32 	%f124, %r103;
	add.f32 	%f125, %f123, %f124;
	add.s64 	%rd73, %rd128, 3072;
	// begin inline asm
	ld.global.nc.u32 %r104, [%rd73];
	// end inline asm
	mov.b32 	%f126, %r104;
	add.f32 	%f396, %f125, %f126;
	add.s64 	%rd128, %rd128, 4096;
	add.s32 	%r401, %r401, 1024;
	setp.lt.s32 	%p12, %r401, %r8;
	@%p12 bra 	$L__BB41_14;

$L__BB41_15:
	// begin inline asm
	mov.u32 %r105, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r106, %laneid;
	// end inline asm
	mov.b32 	%r108, %f396;
	mov.u32 	%r109, 1;
	mov.u32 	%r130, 31;
	mov.u32 	%r131, -1;
	// begin inline asm
	shfl.sync.down.b32 %r107, %r108, %r109, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p13, %r106, 30;
	mov.b32 	%f127, %r107;
	add.f32 	%f128, %f396, %f127;
	selp.f32 	%f129, %f396, %f128, %p13;
	mov.b32 	%r113, %f129;
	mov.u32 	%r114, 2;
	// begin inline asm
	shfl.sync.down.b32 %r112, %r113, %r114, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p14, %r106, 29;
	mov.b32 	%f130, %r112;
	add.f32 	%f131, %f129, %f130;
	selp.f32 	%f132, %f129, %f131, %p14;
	mov.b32 	%r118, %f132;
	mov.u32 	%r119, 4;
	// begin inline asm
	shfl.sync.down.b32 %r117, %r118, %r119, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p15, %r106, 27;
	mov.b32 	%f133, %r117;
	add.f32 	%f134, %f132, %f133;
	selp.f32 	%f135, %f132, %f134, %p15;
	mov.b32 	%r123, %f135;
	mov.u32 	%r124, 8;
	// begin inline asm
	shfl.sync.down.b32 %r122, %r123, %r124, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p16, %r106, 23;
	mov.b32 	%f136, %r122;
	add.f32 	%f137, %f135, %f136;
	selp.f32 	%f138, %f135, %f137, %p16;
	mov.b32 	%r128, %f138;
	mov.u32 	%r129, 16;
	// begin inline asm
	shfl.sync.down.b32 %r127, %r128, %r129, %r130, %r131;
	// end inline asm
	setp.gt.s32 	%p17, %r106, 15;
	mov.b32 	%f139, %r127;
	add.f32 	%f140, %f138, %f139;
	selp.f32 	%f416, %f138, %f140, %p17;
	setp.ne.s32 	%p18, %r105, 0;
	@%p18 bra 	$L__BB41_17;

	shr.s32 	%r132, %r420, 31;
	shr.u32 	%r133, %r132, 27;
	add.s32 	%r134, %r420, %r133;
	shr.s32 	%r135, %r134, 5;
	shl.b32 	%r136, %r135, 2;
	mov.u32 	%r137, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r138, %r137, %r136;
	st.shared.f32 	[%r138+8], %f416;

$L__BB41_17:
	bar.sync 	0;
	setp.ne.s32 	%p19, %r420, 0;
	@%p19 bra 	$L__BB41_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f141, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f142, %f416, %f141;
	ld.shared.f32 	%f143, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f144, %f142, %f143;
	ld.shared.f32 	%f145, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f146, %f144, %f145;
	ld.shared.f32 	%f147, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f148, %f146, %f147;
	ld.shared.f32 	%f149, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f150, %f148, %f149;
	ld.shared.f32 	%f151, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f152, %f150, %f151;
	ld.shared.f32 	%f153, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f152, %f153;
	bra.uni 	$L__BB41_74;

$L__BB41_39:
	shl.b32 	%r228, %r420, 2;
	mul.wide.u32 	%rd95, %r228, 4;
	add.s64 	%rd131, %rd31, %rd95;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd83, %rd84}, [%rd131];
	// end inline asm
	mov.b64 	{%r229, %r230}, %rd84;
	mov.b64 	{%r231, %r232}, %rd83;
	add.s64 	%rd88, %rd131, 4096;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd86, %rd87}, [%rd88];
	// end inline asm
	mov.b64 	{%r233, %r234}, %rd87;
	mov.b64 	{%r235, %r236}, %rd86;
	add.s64 	%rd91, %rd131, 8192;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd89, %rd90}, [%rd91];
	// end inline asm
	mov.b64 	{%r237, %r238}, %rd90;
	mov.b64 	{%r239, %r240}, %rd89;
	add.s64 	%rd94, %rd131, 12288;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd92, %rd93}, [%rd94];
	// end inline asm
	mov.b64 	{%r241, %r242}, %rd93;
	mov.b64 	{%r243, %r244}, %rd92;
	mov.b32 	%f223, %r231;
	mov.b32 	%f224, %r232;
	mov.b32 	%f225, %r229;
	mov.b32 	%f226, %r230;
	mov.b32 	%f227, %r235;
	mov.b32 	%f228, %r236;
	mov.b32 	%f229, %r233;
	mov.b32 	%f230, %r234;
	mov.b32 	%f231, %r239;
	mov.b32 	%f232, %r240;
	mov.b32 	%f233, %r237;
	mov.b32 	%f234, %r238;
	mov.b32 	%f235, %r243;
	mov.b32 	%f236, %r244;
	mov.b32 	%f237, %r241;
	mov.b32 	%f238, %r242;
	add.f32 	%f239, %f223, %f224;
	add.f32 	%f240, %f239, %f225;
	add.f32 	%f241, %f240, %f226;
	add.f32 	%f242, %f241, %f227;
	add.f32 	%f243, %f242, %f228;
	add.f32 	%f244, %f243, %f229;
	add.f32 	%f245, %f244, %f230;
	add.f32 	%f246, %f245, %f231;
	add.f32 	%f247, %f246, %f232;
	add.f32 	%f248, %f247, %f233;
	add.f32 	%f249, %f248, %f234;
	add.f32 	%f250, %f249, %f235;
	add.f32 	%f251, %f250, %f236;
	add.f32 	%f252, %f251, %f237;
	add.f32 	%f409, %f252, %f238;
	add.s32 	%r30, %r59, -4096;
	setp.lt.s32 	%p50, %r59, 8192;
	mov.u32 	%r410, 4096;
	@%p50 bra 	$L__BB41_43;

	mov.u32 	%r410, 4096;
	mov.u32 	%r408, %r30;

$L__BB41_41:
	add.s64 	%rd98, %rd131, 16384;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd96, %rd97}, [%rd98];
	// end inline asm
	mov.b64 	{%r246, %r247}, %rd97;
	mov.b64 	{%r248, %r249}, %rd96;
	add.s64 	%rd101, %rd131, 20480;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd99, %rd100}, [%rd101];
	// end inline asm
	mov.b64 	{%r250, %r251}, %rd100;
	mov.b64 	{%r252, %r253}, %rd99;
	add.s64 	%rd104, %rd131, 24576;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd102, %rd103}, [%rd104];
	// end inline asm
	mov.b64 	{%r254, %r255}, %rd103;
	mov.b64 	{%r256, %r257}, %rd102;
	add.s64 	%rd107, %rd131, 28672;
	// begin inline asm
	ld.global.nc.v2.u64 {%rd105, %rd106}, [%rd107];
	// end inline asm
	mov.b64 	{%r258, %r259}, %rd106;
	mov.b64 	{%r260, %r261}, %rd105;
	mov.b32 	%f253, %r248;
	mov.b32 	%f254, %r249;
	mov.b32 	%f255, %r246;
	mov.b32 	%f256, %r247;
	mov.b32 	%f257, %r252;
	mov.b32 	%f258, %r253;
	mov.b32 	%f259, %r250;
	mov.b32 	%f260, %r251;
	mov.b32 	%f261, %r256;
	mov.b32 	%f262, %r257;
	mov.b32 	%f263, %r254;
	mov.b32 	%f264, %r255;
	mov.b32 	%f265, %r260;
	mov.b32 	%f266, %r261;
	mov.b32 	%f267, %r258;
	mov.b32 	%f268, %r259;
	add.f32 	%f269, %f409, %f253;
	add.f32 	%f270, %f269, %f254;
	add.f32 	%f271, %f270, %f255;
	add.f32 	%f272, %f271, %f256;
	add.f32 	%f273, %f272, %f257;
	add.f32 	%f274, %f273, %f258;
	add.f32 	%f275, %f274, %f259;
	add.f32 	%f276, %f275, %f260;
	add.f32 	%f277, %f276, %f261;
	add.f32 	%f278, %f277, %f262;
	add.f32 	%f279, %f278, %f263;
	add.f32 	%f280, %f279, %f264;
	add.f32 	%f281, %f280, %f265;
	add.f32 	%f282, %f281, %f266;
	add.f32 	%f283, %f282, %f267;
	add.f32 	%f409, %f283, %f268;
	setp.lt.s32 	%p51, %r408, 4096;
	@%p51 bra 	$L__BB41_51;

	add.s32 	%r410, %r410, 4096;
	add.s32 	%r408, %r408, -4096;
	setp.le.s32 	%p52, %r410, %r30;
	mov.u64 	%rd131, %rd98;
	@%p52 bra 	$L__BB41_41;

$L__BB41_43:
	setp.ge.s32 	%p53, %r410, %r59;
	@%p53 bra 	$L__BB41_51;

	sub.s32 	%r36, %r59, %r410;
	setp.ge.s32 	%p54, %r420, %r36;
	@%p54 bra 	$L__BB41_51;

	not.b32 	%r262, %r420;
	add.s32 	%r263, %r262, %r59;
	sub.s32 	%r37, %r263, %r410;
	shr.u32 	%r264, %r37, 8;
	add.s32 	%r265, %r264, 1;
	and.b32  	%r412, %r265, 3;
	setp.eq.s32 	%p55, %r412, 0;
	mov.u32 	%r413, %r420;
	@%p55 bra 	$L__BB41_48;

	add.s32 	%r266, %r420, %r410;
	mul.wide.s32 	%rd108, %r266, 4;
	add.s64 	%rd132, %rd31, %rd108;
	mov.u32 	%r413, %r420;

$L__BB41_47:
	.pragma "nounroll";
	// begin inline asm
	ld.global.nc.u32 %r267, [%rd132];
	// end inline asm
	mov.b32 	%f285, %r267;
	add.f32 	%f409, %f409, %f285;
	add.s32 	%r413, %r413, 256;
	add.s64 	%rd132, %rd132, 1024;
	add.s32 	%r412, %r412, -1;
	setp.ne.s32 	%p56, %r412, 0;
	@%p56 bra 	$L__BB41_47;

$L__BB41_48:
	setp.lt.u32 	%p57, %r37, 768;
	@%p57 bra 	$L__BB41_51;

	add.s32 	%r268, %r413, %r410;
	mul.wide.s32 	%rd110, %r268, 4;
	add.s64 	%rd133, %rd31, %rd110;

$L__BB41_50:
	// begin inline asm
	ld.global.nc.u32 %r269, [%rd133];
	// end inline asm
	mov.b32 	%f286, %r269;
	add.f32 	%f287, %f409, %f286;
	add.s64 	%rd112, %rd133, 1024;
	// begin inline asm
	ld.global.nc.u32 %r270, [%rd112];
	// end inline asm
	mov.b32 	%f288, %r270;
	add.f32 	%f289, %f287, %f288;
	add.s64 	%rd113, %rd133, 2048;
	// begin inline asm
	ld.global.nc.u32 %r271, [%rd113];
	// end inline asm
	mov.b32 	%f290, %r271;
	add.f32 	%f291, %f289, %f290;
	add.s64 	%rd114, %rd133, 3072;
	// begin inline asm
	ld.global.nc.u32 %r272, [%rd114];
	// end inline asm
	mov.b32 	%f292, %r272;
	add.f32 	%f409, %f291, %f292;
	add.s64 	%rd133, %rd133, 4096;
	add.s32 	%r413, %r413, 1024;
	setp.lt.s32 	%p58, %r413, %r36;
	@%p58 bra 	$L__BB41_50;

$L__BB41_51:
	// begin inline asm
	mov.u32 %r273, %laneid;
	// end inline asm
	// begin inline asm
	mov.u32 %r274, %laneid;
	// end inline asm
	mov.b32 	%r276, %f409;
	mov.u32 	%r277, 1;
	mov.u32 	%r298, 31;
	mov.u32 	%r299, -1;
	// begin inline asm
	shfl.sync.down.b32 %r275, %r276, %r277, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p59, %r274, 30;
	mov.b32 	%f293, %r275;
	add.f32 	%f294, %f409, %f293;
	selp.f32 	%f295, %f409, %f294, %p59;
	mov.b32 	%r281, %f295;
	mov.u32 	%r282, 2;
	// begin inline asm
	shfl.sync.down.b32 %r280, %r281, %r282, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p60, %r274, 29;
	mov.b32 	%f296, %r280;
	add.f32 	%f297, %f295, %f296;
	selp.f32 	%f298, %f295, %f297, %p60;
	mov.b32 	%r286, %f298;
	mov.u32 	%r287, 4;
	// begin inline asm
	shfl.sync.down.b32 %r285, %r286, %r287, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p61, %r274, 27;
	mov.b32 	%f299, %r285;
	add.f32 	%f300, %f298, %f299;
	selp.f32 	%f301, %f298, %f300, %p61;
	mov.b32 	%r291, %f301;
	mov.u32 	%r292, 8;
	// begin inline asm
	shfl.sync.down.b32 %r290, %r291, %r292, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p62, %r274, 23;
	mov.b32 	%f302, %r290;
	add.f32 	%f303, %f301, %f302;
	selp.f32 	%f304, %f301, %f303, %p62;
	mov.b32 	%r296, %f304;
	mov.u32 	%r297, 16;
	// begin inline asm
	shfl.sync.down.b32 %r295, %r296, %r297, %r298, %r299;
	// end inline asm
	setp.gt.s32 	%p63, %r274, 15;
	mov.b32 	%f305, %r295;
	add.f32 	%f306, %f304, %f305;
	selp.f32 	%f416, %f304, %f306, %p63;
	setp.ne.s32 	%p64, %r273, 0;
	@%p64 bra 	$L__BB41_53;

	shr.s32 	%r300, %r420, 31;
	shr.u32 	%r301, %r300, 27;
	add.s32 	%r302, %r420, %r301;
	shr.s32 	%r303, %r302, 5;
	shl.b32 	%r304, %r303, 2;
	mov.u32 	%r305, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r306, %r305, %r304;
	st.shared.f32 	[%r306+8], %f416;

$L__BB41_53:
	bar.sync 	0;
	setp.ne.s32 	%p65, %r420, 0;
	@%p65 bra 	$L__BB41_74;

	mov.u32 	%r420, 0;
	ld.shared.f32 	%f307, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f308, %f416, %f307;
	ld.shared.f32 	%f309, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f310, %f308, %f309;
	ld.shared.f32 	%f311, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f312, %f310, %f311;
	ld.shared.f32 	%f313, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f314, %f312, %f313;
	ld.shared.f32 	%f315, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f316, %f314, %f315;
	ld.shared.f32 	%f317, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f318, %f316, %f317;
	ld.shared.f32 	%f319, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f318, %f319;
	bra.uni 	$L__BB41_74;

$L__BB41_29:
	shr.s32 	%r176, %r420, 31;
	shr.u32 	%r177, %r176, 27;
	add.s32 	%r178, %r420, %r177;
	shr.s32 	%r29, %r178, 5;
	// begin inline asm
	mov.u32 %r149, %laneid;
	// end inline asm
	and.b32  	%r179, %r178, -32;
	add.s32 	%r180, %r179, 32;
	setp.gt.s32 	%p27, %r180, %r59;
	// begin inline asm
	mov.u32 %r150, %laneid;
	// end inline asm
	not.b32 	%r181, %r179;
	mov.u32 	%r175, -1;
	add.s32 	%r182, %r181, %r59;
	selp.b32 	%r174, %r182, 31, %p27;
	mov.b32 	%r152, %f402;
	mov.u32 	%r153, 1;
	// begin inline asm
	shfl.sync.down.b32 %r151, %r152, %r153, %r174, %r175;
	// end inline asm
	setp.lt.s32 	%p28, %r150, %r174;
	mov.b32 	%f164, %r151;
	add.f32 	%f165, %f402, %f164;
	selp.f32 	%f166, %f165, %f402, %p28;
	mov.b32 	%r157, %f166;
	mov.u32 	%r158, 2;
	// begin inline asm
	shfl.sync.down.b32 %r156, %r157, %r158, %r174, %r175;
	// end inline asm
	add.s32 	%r183, %r150, 2;
	setp.gt.s32 	%p29, %r183, %r174;
	mov.b32 	%f167, %r156;
	add.f32 	%f168, %f166, %f167;
	selp.f32 	%f169, %f166, %f168, %p29;
	mov.b32 	%r162, %f169;
	mov.u32 	%r163, 4;
	// begin inline asm
	shfl.sync.down.b32 %r161, %r162, %r163, %r174, %r175;
	// end inline asm
	add.s32 	%r184, %r150, 4;
	setp.gt.s32 	%p30, %r184, %r174;
	mov.b32 	%f170, %r161;
	add.f32 	%f171, %f169, %f170;
	selp.f32 	%f172, %f169, %f171, %p30;
	mov.b32 	%r167, %f172;
	mov.u32 	%r168, 8;
	// begin inline asm
	shfl.sync.down.b32 %r166, %r167, %r168, %r174, %r175;
	// end inline asm
	add.s32 	%r185, %r150, 8;
	setp.gt.s32 	%p31, %r185, %r174;
	mov.b32 	%f173, %r166;
	add.f32 	%f174, %f172, %f173;
	selp.f32 	%f175, %f172, %f174, %p31;
	mov.b32 	%r172, %f175;
	mov.u32 	%r173, 16;
	// begin inline asm
	shfl.sync.down.b32 %r171, %r172, %r173, %r174, %r175;
	// end inline asm
	add.s32 	%r186, %r150, 16;
	setp.gt.s32 	%p32, %r186, %r174;
	mov.b32 	%f176, %r171;
	add.f32 	%f177, %f175, %f176;
	selp.f32 	%f416, %f175, %f177, %p32;
	setp.ne.s32 	%p33, %r149, 0;
	@%p33 bra 	$L__BB41_31;

	shl.b32 	%r187, %r29, 2;
	mov.u32 	%r188, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r189, %r188, %r187;
	st.shared.f32 	[%r189+8], %f416;

$L__BB41_31:
	bar.sync 	0;
	setp.ne.s32 	%p34, %r420, 0;
	@%p34 bra 	$L__BB41_74;

	setp.gt.s32 	%p35, %r59, 32;
	mov.u32 	%r420, 0;
	ld.shared.f32 	%f178, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f179, %f416, %f178;
	selp.f32 	%f180, %f179, %f416, %p35;
	ld.shared.f32 	%f181, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f182, %f180, %f181;
	setp.gt.s32 	%p36, %r59, 64;
	selp.f32 	%f183, %f182, %f180, %p36;
	ld.shared.f32 	%f184, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f185, %f183, %f184;
	setp.gt.s32 	%p37, %r59, 96;
	selp.f32 	%f186, %f185, %f183, %p37;
	ld.shared.f32 	%f187, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f188, %f186, %f187;
	setp.gt.s32 	%p38, %r59, 128;
	selp.f32 	%f189, %f188, %f186, %p38;
	ld.shared.f32 	%f190, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f191, %f189, %f190;
	setp.gt.s32 	%p39, %r59, 160;
	selp.f32 	%f192, %f191, %f189, %p39;
	ld.shared.f32 	%f193, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f194, %f192, %f193;
	setp.gt.s32 	%p40, %r59, 192;
	selp.f32 	%f416, %f194, %f192, %p40;
	setp.lt.s32 	%p41, %r59, 225;
	@%p41 bra 	$L__BB41_74;

	ld.shared.f32 	%f195, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f195;
	bra.uni 	$L__BB41_74;

$L__BB41_65:
	shr.s32 	%r344, %r420, 31;
	shr.u32 	%r345, %r344, 27;
	add.s32 	%r346, %r420, %r345;
	shr.s32 	%r57, %r346, 5;
	// begin inline asm
	mov.u32 %r317, %laneid;
	// end inline asm
	and.b32  	%r347, %r346, -32;
	add.s32 	%r348, %r347, 32;
	setp.gt.s32 	%p73, %r348, %r59;
	// begin inline asm
	mov.u32 %r318, %laneid;
	// end inline asm
	not.b32 	%r349, %r347;
	mov.u32 	%r343, -1;
	add.s32 	%r350, %r349, %r59;
	selp.b32 	%r342, %r350, 31, %p73;
	mov.b32 	%r320, %f415;
	mov.u32 	%r321, 1;
	// begin inline asm
	shfl.sync.down.b32 %r319, %r320, %r321, %r342, %r343;
	// end inline asm
	setp.lt.s32 	%p74, %r318, %r342;
	mov.b32 	%f330, %r319;
	add.f32 	%f331, %f415, %f330;
	selp.f32 	%f332, %f331, %f415, %p74;
	mov.b32 	%r325, %f332;
	mov.u32 	%r326, 2;
	// begin inline asm
	shfl.sync.down.b32 %r324, %r325, %r326, %r342, %r343;
	// end inline asm
	add.s32 	%r351, %r318, 2;
	setp.gt.s32 	%p75, %r351, %r342;
	mov.b32 	%f333, %r324;
	add.f32 	%f334, %f332, %f333;
	selp.f32 	%f335, %f332, %f334, %p75;
	mov.b32 	%r330, %f335;
	mov.u32 	%r331, 4;
	// begin inline asm
	shfl.sync.down.b32 %r329, %r330, %r331, %r342, %r343;
	// end inline asm
	add.s32 	%r352, %r318, 4;
	setp.gt.s32 	%p76, %r352, %r342;
	mov.b32 	%f336, %r329;
	add.f32 	%f337, %f335, %f336;
	selp.f32 	%f338, %f335, %f337, %p76;
	mov.b32 	%r335, %f338;
	mov.u32 	%r336, 8;
	// begin inline asm
	shfl.sync.down.b32 %r334, %r335, %r336, %r342, %r343;
	// end inline asm
	add.s32 	%r353, %r318, 8;
	setp.gt.s32 	%p77, %r353, %r342;
	mov.b32 	%f339, %r334;
	add.f32 	%f340, %f338, %f339;
	selp.f32 	%f341, %f338, %f340, %p77;
	mov.b32 	%r340, %f341;
	mov.u32 	%r341, 16;
	// begin inline asm
	shfl.sync.down.b32 %r339, %r340, %r341, %r342, %r343;
	// end inline asm
	add.s32 	%r354, %r318, 16;
	setp.gt.s32 	%p78, %r354, %r342;
	mov.b32 	%f342, %r339;
	add.f32 	%f343, %f341, %f342;
	selp.f32 	%f416, %f341, %f343, %p78;
	setp.ne.s32 	%p79, %r317, 0;
	@%p79 bra 	$L__BB41_67;

	shl.b32 	%r355, %r57, 2;
	mov.u32 	%r356, _ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage;
	add.s32 	%r357, %r356, %r355;
	st.shared.f32 	[%r357+8], %f416;

$L__BB41_67:
	bar.sync 	0;
	setp.ne.s32 	%p80, %r420, 0;
	@%p80 bra 	$L__BB41_74;

	setp.gt.s32 	%p81, %r59, 32;
	mov.u32 	%r420, 0;
	ld.shared.f32 	%f344, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+12];
	add.f32 	%f345, %f416, %f344;
	selp.f32 	%f346, %f345, %f416, %p81;
	ld.shared.f32 	%f347, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+16];
	add.f32 	%f348, %f346, %f347;
	setp.gt.s32 	%p82, %r59, 64;
	selp.f32 	%f349, %f348, %f346, %p82;
	ld.shared.f32 	%f350, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+20];
	add.f32 	%f351, %f349, %f350;
	setp.gt.s32 	%p83, %r59, 96;
	selp.f32 	%f352, %f351, %f349, %p83;
	ld.shared.f32 	%f353, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+24];
	add.f32 	%f354, %f352, %f353;
	setp.gt.s32 	%p84, %r59, 128;
	selp.f32 	%f355, %f354, %f352, %p84;
	ld.shared.f32 	%f356, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+28];
	add.f32 	%f357, %f355, %f356;
	setp.gt.s32 	%p85, %r59, 160;
	selp.f32 	%f358, %f357, %f355, %p85;
	ld.shared.f32 	%f359, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+32];
	add.f32 	%f360, %f358, %f359;
	setp.gt.s32 	%p86, %r59, 192;
	selp.f32 	%f416, %f360, %f358, %p86;
	setp.lt.s32 	%p87, %r59, 225;
	@%p87 bra 	$L__BB41_74;

	ld.shared.f32 	%f361, [_ZZN3cub17CUB_200200_900_NS28DeviceReduceSingleTileKernelINS0_18DeviceReducePolicyIfyN6thrust4plusIfEEE9Policy600EPfS8_iS5_ffEEvT0_T1_T2_T3_T4_E12temp_storage+36];
	add.f32 	%f416, %f416, %f361;

$L__BB41_74:
	setp.ne.s32 	%p95, %r420, 0;
	@%p95 bra 	$L__BB41_78;

	add.f32 	%f389, %f416, %f56;
	cvta.to.global.u64 	%rd124, %rd32;
	st.global.f32 	[%rd124], %f389;

$L__BB41_78:
	ret;

}

